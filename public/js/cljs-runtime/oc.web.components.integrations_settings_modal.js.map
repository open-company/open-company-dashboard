{"version":3,"sources":["oc/web/components/integrations_settings_modal.cljs"],"mappings":"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","names":["rum.core/build-defcs","js/React.createElement","attrs46887","cljs.core.apply","cljs.core/map?","sablono.interpreter/attributes","sablono.normalize.merge_with_class","sablono.interpreter/interpret","oc.web.components.integrations-settings-modal/integrations-settings-modal","rum.core/reactive","org.martinklepsch.derivatives.drv","oc.web.mixins.ui/refresh-tooltips-mixin","rum.core.local","s","cljs.core/deref","org-data","org.martinklepsch.derivatives/get-ref","oc.web.actions.org.get_org","oc.web.actions.team/teams-get","org.martinklepsch.derivatives/react","team-data","cur-user-data","slack-teams","slack-teams-count","cljs.core/count","is-tablet-or-mobile?","oc.web.lib.responsive/is-tablet-or-mobile?","oc.web.actions.nav-sidebar/close-all-panels","oc.web.actions.nav-sidebar/show-org-settings","oc.web.lib.utils.link_for","oc.web.actions.org.bot_auth","oc.web.router/get-token","slack-bots","cljs.core.get","oc.web.lib.jwt/get-key","oc.web.lib.jwt/slack-bots-team-key","iter__4529__auto__","s__46898","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","b__46900","cljs.core/chunk-buffer","i__46899","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__46897","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","s__46905","b__46907","i__46906","iter__46904","slack-team","has-logo","logo-url","oc.web.lib.utils/cdn","slack-domain","has-bot?","p1__46877#","cljs.core.filter","cljs.core._EQ_","oc.web.components.ui.alert-modal/show-alert","oc.web.components.ui.alert-modal/hide-alert","oc.web.actions.team/remove-team","cljs.core/chunk-first"],"sourcesContent":["(ns oc.web.components.integrations-settings-modal\n  (:require [rum.core :as rum]\n            [org.martinklepsch.derivatives :as drv]\n            [oc.web.lib.jwt :as jwt]\n            [oc.web.router :as router]\n            [oc.web.dispatcher :as dis]\n            [oc.web.lib.utils :as utils]\n            [oc.web.mixins.ui :as ui-mixins]\n            [oc.web.actions.org :as org-actions]\n            [oc.web.actions.team :as team-actions]\n            [oc.web.actions.nav-sidebar :as nav-actions]\n            [oc.web.lib.responsive :as responsive]\n            [oc.web.components.ui.alert-modal :as alert-modal]\n            [oc.web.actions.notifications :as notification-actions]))\n\n(rum/defcs integrations-settings-modal <\n  ;; Mixins\n  rum/reactive\n  (drv/drv :org-data)\n  (drv/drv :team-data)\n  (drv/drv :current-user-data)\n  ui-mixins/refresh-tooltips-mixin\n  ;; Locals\n  (rum/local false ::saving)\n  {:will-mount (fn [s]\n    (let [org-data @(drv/get-ref s :org-data)]\n        (org-actions/get-org org-data true)\n        (team-actions/teams-get))\n    s)}\n  [s]\n  (let [org-data (drv/react s :org-data)\n        team-data (drv/react s :team-data)\n        cur-user-data (drv/react s :current-user-data)\n        slack-teams (:slack-orgs team-data)\n        slack-teams-count (count slack-teams)\n        is-tablet-or-mobile? (responsive/is-tablet-or-mobile?)]\n    [:div.integrations-settings-modal\n      [:button.mlb-reset.modal-close-bt\n        {:on-click nav-actions/close-all-panels}]\n      [:div.integrations-settings\n        [:div.integrations-settings-header\n          [:div.integrations-settings-header-title\n            \"Integrations\"]\n          [:button.mlb-reset.save-bt\n            {:on-click #(nav-actions/show-org-settings nil)}\n            \"Save\"]\n          [:button.mlb-reset.cancel-bt\n            {:on-click #(nav-actions/show-org-settings nil)}\n            \"Back\"]]\n        [:div.integrations-settings-body\n          (when (utils/link-for (:links team-data) \"authenticate\" \"GET\" {:auth-source \"slack\"})\n            [:button.btn-reset.add-slack-team-bt\n              {:on-click #(org-actions/bot-auth team-data cur-user-data (str (router/get-token) \"?org-settings=integrations\"))}\n              [:div.slack-icon]\n              \"Add to Slack\"])\n          (when-not (zero? slack-teams-count)\n            [:div.integrations-settings-list\n              [:div.integrations-settings-list-title\n                (str \"Connected Slack team\" (when (> slack-teams-count 1) \"s\"))]\n              (let [slack-bots (get (jwt/get-key :slack-bots) (jwt/slack-bots-team-key (:team-id org-data)))]\n                (for [slack-team slack-teams\n                      :let [has-logo (seq (:logo-url slack-team))\n                            logo-url (if has-logo\n                                       (:logo-url slack-team)\n                                       (utils/cdn \"/img/slack.png\"))\n                            slack-domain (:slack-domain slack-team)\n                            has-bot? (pos? (count (filter #(= (:slack-org-id %) (:slack-org-id slack-team)) slack-bots)))]]\n                  [:div.integrations-settings-item\n                    {:key (str \"slack-org-\" (:slack-org-id slack-team))}\n                    [:div.integration-item-header\n                      [:div.logo-container\n                        [:img.slack-logo\n                          {:class (when-not has-logo \"no-logo\")\n                           :src logo-url}]]\n                      [:div.slack-team-name\n                        (:name slack-team)]\n                      [:button.mlb-reset.button.remove-slack-team-bt\n                        {:on-click (fn []\n                                     (alert-modal/show-alert {:icon \"/img/ML/trash.svg\"\n                                                              :action \"remove-slack-team\"\n                                                              :message \"Are you sure you want to remove this Slack team?\"\n                                                              :link-button-title \"Keep\"\n                                                              :link-button-cb #(alert-modal/hide-alert)\n                                                              :solid-button-style :red\n                                                              :solid-button-title \"Yes\"\n                                                              :solid-button-cb (fn []\n                                                                                (team-actions/remove-team (:links slack-team))\n                                                                                (alert-modal/hide-alert))}))\n                         :title \"Remove\"\n                         :data-toggle \"tooltip\"\n                         :data-placement \"top\"\n                         :data-container \"body\"}]]\n                    (when (seq slack-domain)\n                      [:div.linked-to\n                        (str slack-domain \".slack.com\")])\n                    (comment ;; TODO: commented this out, we need to add this feature\n                      [:div.self-join\n                        \"Slack members can self-join this as: \"\n                        [:select.self-join-select.oc-input\n                          [:option\n                            \"Admin\"]\n                          [:option\n                            \"Contributor\"]\n                          [:option\n                            \"Viewer\"]]])\n                    (if has-bot?\n                      [:div.bot-line\n                        \"Wut bot is currently \" [:strong \"on\"] \".\"]\n                      [:div.bot-line\n                        \"Wut bot is currently \" [:strong \"off\"] \". \"\n                        [:button.mlb-reset.turn-on-bot-bt\n                          {:on-click #(org-actions/bot-auth team-data cur-user-data (str (router/get-token) \"?org-settings=integrations\"))}\n                          \"Turn it on?\"]\n                        [:i.mdi.mdi-information-outline\n                          {:title \"The Wut bot integrates Wut with Slack to allow invites, shares, digests and notifications to use Slack rather than email.\"\n                           :data-toggle (when-not is-tablet-or-mobile? \"tooltip\")\n                           :data-placement \"top\"\n                           :data-container \"body\"\n                           :data-delay \"{\\\"show\\\":\\\"500\\\", \\\"hide\\\":\\\"0\\\"}\"}]\n                          ])]))])]]]))"]}