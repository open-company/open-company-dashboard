{"version":3,"sources":["oc/web/components/ui/lazy_stream.cljs"],"mappings":";AAMA,AAAA,AAAAA,AAAA,AAAWQ,AAURK,AAAEK;AAVL,AAAA,AAAA,AAWQC,AAAe,AAAA,AAACC,AAAUP;AAC1BQ,AAAc,AAAA,AAACD,AAAUP;AACzBS,AAAW,AAAA,AAACF,AAAUP;AACtBU,AAAO,AAAAC,AAAA,AAAAC,AAAM,AAAA,AAAWZ;AAAjB,AAAA,AAAAW;AACK,AAACpB,AAAKe;;AADXK;;;AAdf,AAAA,AAAAvB,AAiBM,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAIsB,AACF,AAACL,AAAAA,AAAAA,AAES,AAAA,AAAA,AAAA,AAAM,AAACQ,AAAEJ,AAAWK,AACX,AAAK,AAAG,AAAA,AAACZ,AACD,AAAAa,AAAI,AAAA,AAAIC;AAAR,AAAA,AAAAD;AAAAA;;AACI,AAAeE;;AAF3B;AArB3B,AAAA,AAAA5B,AAAAC,AAAA,AAAA,AAAA,AAAAC,AAAAH,AAAA,AAAAI,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAL,AAAA,AAAA,AAAA,AAAA,AAAAG,AAAAH,AAAA,AAAA,AAAA,AAAAM,AAAAN;AAAA,AAAA,AAAA,AAAyBQ,AACAC,AACA,AAAA,AAAA,AAACC,AACD,AAAA,AAACC,AACD,AAAA,AAACA,AACD,AAAA,AAACA,AACW,AAAKC;AAAL,AACV,AAAA,AAACC,AAAkB,AAAA,AAACC;;AACpB,AAAA,AAAA,AAACC;AAAD,AAAkB,AAAA,AAACC,AAAO,AAAA,AAAWJ;;;AACrCA;AAT3B","names":["rum.core/build-defcs","attrs40144","cljs.core.apply","js/React.createElement","cljs.core/map?","sablono.interpreter/attributes","sablono.normalize.merge_with_class","sablono.interpreter/interpret","oc.web.components.ui.lazy-stream/lazy-stream","rum.core/static","rum.core/reactive","rum.core.local","org.martinklepsch.derivatives.drv","s","oc.web.lib.utils.scroll_to_y","oc.web.dispatcher.route_param","oc.web.lib.utils/after","cljs.core/reset!","stream-comp","container-data","org.martinklepsch.derivatives/react","activity-data","foc-layout","ready?","and__4115__auto__","cljs.core/deref","cljs.core._EQ_","oc.web.dispatcher/other-foc-layout","or__4126__auto__","js/document","js/window"],"sourcesContent":["(ns oc.web.components.ui.lazy-stream\n  (:require [rum.core :as rum]\n            [org.martinklepsch.derivatives :as drv]\n            [oc.web.dispatcher :as dis]\n            [oc.web.lib.utils :as utils]))\n\n(rum/defcs lazy-stream < rum/static\n                         rum/reactive\n                         (rum/local false ::delayed)\n                         (drv/drv :container-data)\n                         (drv/drv :activity-data)\n                         (drv/drv :foc-layout)\n                         {:did-mount (fn [s]\n                           (utils/scroll-to-y (dis/route-param :scroll-y) 0)\n                           (utils/after 100 #(reset! (::delayed s) true))\n                           s)}\n  [s stream-comp]\n  (let [container-data (drv/react s :container-data)\n        activity-data (drv/react s :activity-data)\n        foc-layout (drv/react s :foc-layout)\n        ready? (and @(::delayed s)\n                    (map? container-data))]\n    [:div.lazy-stream\n      (if ready?\n        (stream-comp)\n        [:div.lazy-stream-interstitial\n          {:class (when (= foc-layout dis/other-foc-layout) \"collapsed\")\n           :style {:height (str (+ (dis/route-param :scroll-y)\n                                   (or (.. js/document -documentElement -clientHeight)\n                                       (.-innerHeight js/window)))\n                             \"px\")}}])]))\n"]}