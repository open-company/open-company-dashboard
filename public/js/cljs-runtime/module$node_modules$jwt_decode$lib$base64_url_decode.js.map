{
"version":3,
"file":"module$node_modules$jwt_decode$lib$base64_url_decode.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,oDAAf,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGjHC,QAASA,iBAAgB,CAACC,GAAD,CAAM,CAC7B,MAAOC,mBAAA,CAAmBC,IAAA,CAAKF,GAAL,CAAA,CAAUG,OAAV,CAAkB,MAAlB,CAA0B,QAAS,CAACC,CAAD,CAAIC,CAAJ,CAAO,CAC9DC,CAAAA,CAAOD,CAAA,CAAEE,UAAF,CAAa,CAAb,CAAA,CAAgBC,QAAhB,CAAyB,EAAzB,CAAA,CAA6BC,WAA7B,EACO,EAAlB,CAAIH,CAAJ,CAASI,MAAT,GACEJ,CADF,CACS,GADT,CACeA,CADf,CAGA,OAAO,GAAP,CAAaA,CALqD,CAA1C,CAAnB,CADsB,CAF/B,IAAIJ,KAAON,OAAA,CAAQ,yCAAR,CAYXC,OAAA,CAAOC,OAAP,CAAiBa,QAAQ,CAACX,GAAD,CAAM,CACzBY,GAAAA,CAASZ,GAAA,CAAIG,OAAJ,CAAY,IAAZ,CAAkB,GAAlB,CAAA,CAAuBA,OAAvB,CAA+B,IAA/B,CAAqC,GAArC,CACb,QAAQS,GAAR,CAAeF,MAAf,CAAwB,CAAxB,EACE,KAAK,CAAL,CACE,KACF,MAAK,CAAL,CACEE,GAAA,EAAU,UACV,MACF,MAAK,CAAL,CACEA,GAAA,EAAU,MACV;KACF,SACE,KAAM,2BAAN,CAVJ,CAaA,GAAG,CACD,MAAOb,iBAAA,CAAiBa,GAAjB,CADN,CAED,MAAOC,GAAP,CAAY,CACZ,MAAOX,KAAA,CAAKU,GAAL,CADK,CAjBe,CAbkF;",
"sources":["node_modules/jwt-decode/lib/base64_url_decode.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$jwt_decode$lib$base64_url_decode\"] = function(global,require,module,exports) {\nvar atob = require('./atob');\n\nfunction b64DecodeUnicode(str) {\n  return decodeURIComponent(atob(str).replace(/(.)/g, function (m, p) {\n    var code = p.charCodeAt(0).toString(16).toUpperCase();\n    if (code.length < 2) {\n      code = '0' + code;\n    }\n    return '%' + code;\n  }));\n}\n\nmodule.exports = function(str) {\n  var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  switch (output.length % 4) {\n    case 0:\n      break;\n    case 2:\n      output += \"==\";\n      break;\n    case 3:\n      output += \"=\";\n      break;\n    default:\n      throw \"Illegal base64url string!\";\n  }\n\n  try{\n    return b64DecodeUnicode(output);\n  } catch (err) {\n    return atob(output);\n  }\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","b64DecodeUnicode","str","decodeURIComponent","atob","replace","m","p","code","charCodeAt","toString","toUpperCase","length","module.exports","output","err"]
}
