{"version":3,"sources":["taoensso/sente/interfaces.cljc"],"mappings":"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","names":["taoensso$sente$interfaces$IServerChan$sch_open_QMARK_$dyn","x__4428__auto__","m__4429__auto__","taoensso.sente.interfaces/sch-open?","goog/typeOf","m__4426__auto__","cljs.core/missing-protocol","taoensso$sente$interfaces$IServerChan$sch_close_BANG_$dyn","taoensso.sente.interfaces/sch-close!","taoensso$sente$interfaces$IServerChan$sch_send_BANG_$dyn","taoensso.sente.interfaces/sch-send!","taoensso.sente.interfaces/IServerChan","sch","websocket?","msg","taoensso$sente$interfaces$IServerChanAdapter$ring_req__GT_server_ch_resp$dyn","taoensso.sente.interfaces/ring-req->server-ch-resp","taoensso.sente.interfaces/IServerChanAdapter","sch-adapter","ring-req","callbacks-map","taoensso$sente$interfaces$IPacker$pack$dyn","taoensso.sente.interfaces/pack","taoensso$sente$interfaces$IPacker$unpack$dyn","taoensso.sente.interfaces/unpack","taoensso.sente.interfaces/IPacker","_","x"],"sourcesContent":["(ns taoensso.sente.interfaces\n  \"Alpha, subject to change.\n  Public interfaces / extension points.\"\n  (:require [taoensso.encore :as enc]))\n\n;;;; Server channels\n;; To work with Sente, a web server needs to provide implementations for\n;; the two protocols below. Please see the `taoensso.sente.server-adapters.*`\n;; namespaces for examples.\n;;\n;; Ref. https://github.com/ptaoussanis/sente/issues/102 for more info.\n\n(defprotocol IServerChan ; sch\n  ;; Wraps a web server's own async channel/comms interface to abstract away\n  ;; implementation differences.\n  (sch-open?  [sch] \"Returns true iff the channel is currently open.\")\n  (sch-close! [sch]\n    \"If the channel is open when called: closes the channel and returns true.\n    Otherwise noops and returns false.\")\n  (sch-send! [sch websocket? msg]\n    \"If the channel is open when called: sends a message over channel and\n    returns true. Otherwise noops and returns false.\"))\n\n(defprotocol IServerChanAdapter ; sch-adapter\n  ;; Wraps a web server's own ring-request->ring-response interface to\n  ;; abstract away implementation differences.\n  (ring-req->server-ch-resp [sch-adapter ring-req callbacks-map]\n    \"Given a Ring request (WebSocket handshake or Ajax GET/POST), returns\n    a Ring response map with a web-server-specific channel :body that\n    implements Sente's IServerChan protocol.\n\n    Configures channel callbacks with a callbacks map using keys:\n      :on-open  - (fn [server-ch websocket?]) called exactly once after\n                  channel is available for sending.\n      :on-close - (fn [server-ch websocket? status]) called exactly once\n                  after channel is closed for any cause, incl. an explicit\n                  call to `close!`. `status` type is currently undefined.\n      :on-msg   - (fn [server-ch websocket? msg]) called for each String or\n                  byte[] message received from client.\n      :on-error - (fn [server-ch websocket? error]) currently unused.\"))\n\n;;;; Packers\n\n(defprotocol IPacker\n  \"Extension pt. for client<->server comms data un/packers:\n  arbitrary Clojure data <-> serialized strings.\"\n  (pack   [_ x])\n  (unpack [_ x]))\n"]}