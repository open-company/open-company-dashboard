{"version":3,"sources":["oc/web/lib/fullstory.cljs"],"mappings":";AAGA,AAAA,AAAMA;AAAN,AACE,AAAM,AAAK,AAAAC,AACA,AAAAC,AAAI,AAACC;AAAL,AAAA,AAAAD;AAAAA;;AACI,AAACE;;AAFV;AAAN,AAGE,AAAMC,AAAa,AAACD;AACdE,AAAU,AAAID,AACF,AAACE,AACD,AAACC;AAHnB,AAIE,AAAWP,AAAM,AAAA,AAAUK,AAC1B,AAAA,AAAA,AAACG,AAAsB,AAAAP,AAAI,AAAA,AAAOI;AAAX,AAAA,AAAAJ;AAAAA;;AAAsB,AAAA,AAAK,AAAA,AAAaI,AAAe,AAAA,AAAYA;;AAA1F,AAAA,AACwB,AAACI,AAAQL,AAChB,AAAA,AAAQC;;AAV9B;;;AAYF,AAAA,AAAMK,AAAWC;AAAjB,AACE,AAAM,AAAK,AAAAX,AACA,AAACY,AAAKD;AADjB,AAEE,AAAcX,AACb,AAAA,AAAA,AAAA,AAAA,AAAA,AAACQ,AAAc,AAAA,AAAOG,AACF,AAAA,AAAOA;;AAJ9B;;;AAUF,AAAA,AAAME;AAAN,AACE,AAAM,AAAA,AAAK,AAAAb,AACA,AAAwBA;AADnC,AAEE,AAAuBA;;AAFzB","names":["oc.web.lib.fullstory/identify","js/FS","or__4126__auto__","oc.web.lib.jwt/jwt","oc.web.lib.jwt/id-token","is-id-token?","user-data","oc.web.lib.jwt.get_id_token_contents","oc.web.lib.jwt/get-contents","cljs.core/clj->js","cljs.core/boolean","oc.web.lib.fullstory/track-org","org-data","cljs.core/map?","oc.web.lib.fullstory/session-url"],"sourcesContent":["(ns oc.web.lib.fullstory\n  (:require [oc.web.lib.jwt :as jwt]))\n\n(defn identify []\n  (when (and (exists? js/FS)\n             (or (jwt/jwt)\n                 (jwt/id-token)))\n    (let [is-id-token? (jwt/id-token)\n          user-data (if is-id-token?\n                      (jwt/get-id-token-contents)\n                      (jwt/get-contents))]\n      (.identify js/FS (:user-id user-data)\n       (clj->js {:displayName (or (:name user-data) (str (:first-name user-data) \" \" (:last-name user-data)))\n                 :securePostId (boolean is-id-token?)\n                 :email (:email user-data)})))))\n\n(defn track-org [org-data]\n  (when (and (exists? js/FS)\n             (map? org-data))\n    (.setUserVars js/FS\n     (clj->js {:org (:name org-data)\n               :org_slug (:slug org-data)\n               ;; FIXME: add back user role here if we start using FS seriously\n               ;; removed for circular dependency problem\n               ;; (user-store/get-user-type (dis/current-user-data) org-data)\n               :role \"-\"}))))\n\n(defn session-url []\n  (when (and (exists? js/FS)\n             (.-getCurrentSessionURL js/FS))\n    (.getCurrentSessionURL js/FS)))"]}