{"version":3,"sources":["oc/web/components/org_dashboard.cljs"],"mappings":"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","names":["oc.web.components.org-dashboard/init-whats-new","oc.web.lib.responsive/is-tablet-or-mobile?","oc.web.lib.whats-new/init","rum.core/build-defcs","map__46927","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","attrs46933","js/React.createElement","cljs.core/map?","sablono.interpreter/attributes","sablono.normalize.merge_with_class","sablono.interpreter/interpret","sablono.util/join-classes","oc.web.components.org-dashboard/org-dashboard","rum.core/static","rum.core/reactive","oc.web.mixins.ui/render-on-resize","org.martinklepsch.derivatives.drv","s","oc.web.lib.utils/after","js/document","oc.web.lib.utils/page-scroll-top","_","orgs","org-data","jwt-data","current-org-slug","current-board-slug","current-contributions-id","current-activity-id","contributions-data","initial-section-editing","container-data","posts-data","is-sharing-activity","is-showing-alert","show-section-add-cb","activity-share-container","cmail-state","wrt-read-data","force-login-wall","panel-stack","app-loading","payments-data","user-info-data","active-users","current-user-data","org.martinklepsch.derivatives/react","is-mobile?","loading?","or__4126__auto__","cljs.core/not","cljs.core/count","org-not-found","fexpr__46930","cljs.core/set","cljs.core.map","section-not-found","and__4115__auto__","oc.web.dispatcher/is-container?","fexpr__46932","current-activity-data","entry-not-found","cljs.core._EQ_","cljs.core.not_EQ_","show-login-wall","show-activity-removed","is-loading","open-panel","cljs.core/last","show-section-editor","show-section-add","show-reminders?","show-reminder-edit?","clojure.string/starts-with?","cljs.core/name","show-reminders-view?","show-wrt-view?","show-mobile-cmail?","user-responded-to-push-permission?","show-push-notification-permissions-modal?","oc.shared.useragent/mobile-app?","show-trial-expired?","oc.web.actions.payments/show-paywall-alert?","show-user-info?","show-follow-picker","G__46934","oc.web.components.ui.loading/loading","oc.web.lib.utils/class-set","oc.web.components.ui.login-overlay/login-overlays-handler","oc.web.components.ui.activity-removed/activity-removed","oc.web.components.ui.login-wall/login-wall","G__46935","oc.web.components.payments-settings-modal/payments-settings-modal","oc.web.components.org-settings-modal/org-settings-modal","oc.web.components.integrations-settings-modal/integrations-settings-modal","oc.web.components.invite-picker-modal/invite-picker-modal","oc.web.components.invite-email-modal/invite-email-modal","oc.web.components.invite-slack-modal/invite-slack-modal","oc.web.components.team-management-modal/team-management-modal","oc.web.components.user-profile-modal/user-profile-modal","oc.web.components.user-notifications-modal/user-notifications-modal","oc.web.components.recurring-updates-modal/recurring-updates-modal","oc.web.components.edit-recurring-update-modal/edit-recurring-update-modal","G__46936","G__46937","oc.web.components.ui.section-editor/section-editor","sec-data","note","dismiss-action","oc.web.actions.section.section_save","oc.web.components.ui.activity-share/activity-share","oc.web.components.ui.wrt/wrt","G__46938","oc.web.components.theme-settings-modal/theme-settings-modal","G__46939","oc.web.components.user-info-modal/user-info-modal","oc.web.components.ui.follow-picker/follow-picker","portal-element","js/$","rum.core/portal","oc.web.components.cmail/cmail","oc.web.components.ui.menu/menu","oc.web.components.push-notifications-permission-modal/push-notifications-permission-modal","oc.web.components.ui.alert-modal/alert-modal","oc.web.components.ui.trial-expired-banner/trial-expired-banner","oc.web.components.ui.navbar/navbar","oc.web.components.dashboard-layout/dashboard-layout","oc.web.components.expanded-post/expanded-post"],"sourcesContent":["(ns oc.web.components.org-dashboard\n  (:require [rum.core :as rum]\n            [clojure.string :as s]\n            [goog.events :as events]\n            [goog.events.EventType :as EventType]\n            [org.martinklepsch.derivatives :as drv]\n            [oc.web.dispatcher :as dis]\n            [oc.shared.useragent :as ua]\n            [oc.web.lib.utils :as utils]\n            [oc.web.mixins.ui :as ui-mixins]\n            [oc.web.lib.whats-new :as whats-new]\n            [oc.web.lib.responsive :as responsive]\n            [oc.web.components.ui.wrt :refer (wrt)]\n            [oc.web.components.cmail :refer (cmail)]\n            [oc.web.components.ui.menu :refer (menu)]\n            [oc.web.actions.section :as section-actions]\n            [oc.web.components.ui.navbar :refer (navbar)]\n            [oc.web.actions.payments :as payments-actions]\n            [oc.web.components.ui.loading :refer (loading)]\n            [oc.web.components.ui.login-wall :refer (login-wall)]\n            [oc.web.components.ui.alert-modal :refer (alert-modal)]\n            [oc.web.components.expanded-post :refer (expanded-post)]\n            [oc.web.components.ui.follow-picker :refer (follow-picker)]\n            [oc.web.components.user-info-modal :refer (user-info-modal)]\n            [oc.web.components.ui.section-editor :refer (section-editor)]\n            [oc.web.components.ui.activity-share :refer (activity-share)]\n            [oc.web.components.dashboard-layout :refer (dashboard-layout)]\n            [oc.web.components.ui.activity-removed :refer (activity-removed)]\n            [oc.web.components.user-profile-modal :refer (user-profile-modal)]\n            [oc.web.components.org-settings-modal :refer (org-settings-modal)]\n            [oc.web.components.invite-email-modal :refer (invite-email-modal)]\n            [oc.web.components.invite-slack-modal :refer (invite-slack-modal)]\n            [oc.web.components.invite-picker-modal :refer (invite-picker-modal)]\n            [oc.web.components.ui.login-overlay :refer (login-overlays-handler)]\n            [oc.web.components.theme-settings-modal :refer (theme-settings-modal)]\n            [oc.web.components.team-management-modal :refer (team-management-modal)]\n            [oc.web.components.ui.trial-expired-banner :refer (trial-expired-banner)]\n            [oc.web.components.payments-settings-modal :refer (payments-settings-modal)]\n            [oc.web.components.recurring-updates-modal :refer (recurring-updates-modal)]\n            [oc.web.components.user-notifications-modal :refer (user-notifications-modal)]\n            [oc.web.components.edit-recurring-update-modal :refer (edit-recurring-update-modal)]\n            [oc.web.components.integrations-settings-modal :refer (integrations-settings-modal)]\n            [oc.web.components.push-notifications-permission-modal :refer (push-notifications-permission-modal)]))\n\n(defn- init-whats-new []\n  (when-not (responsive/is-tablet-or-mobile?)\n    (whats-new/init)))\n\n(rum/defcs org-dashboard < ;; Mixins\n                           rum/static\n                           rum/reactive\n                           (ui-mixins/render-on-resize nil)\n                           ;; Derivatives\n                           (drv/drv :org-dashboard-data)\n                           (drv/drv :user-responded-to-push-permission?)\n                           (drv/drv :ui-theme)\n\n                           {:did-mount (fn [s]\n                             (utils/after 100 #(set! (.-scrollTop (.-scrollingElement js/document)) (utils/page-scroll-top)))\n                             (init-whats-new)\n                             s)\n                            :did-remount (fn [_ s]\n                             (init-whats-new)\n                             s)}\n  [s]\n  (let [{:keys [orgs\n                org-data\n                jwt-data\n                current-org-slug\n                current-board-slug\n                current-contributions-id\n                current-activity-id\n                contributions-data\n                initial-section-editing\n                container-data\n                posts-data\n                is-sharing-activity\n                is-showing-alert\n                show-section-add-cb\n                activity-share-container\n                cmail-state\n                wrt-read-data\n                force-login-wall\n                panel-stack\n                app-loading\n                payments-data\n                user-info-data\n                active-users\n                current-user-data]} (drv/react s :org-dashboard-data)\n        is-mobile? (responsive/is-tablet-or-mobile?)\n        loading? (or ;; force loading screen\n                     app-loading\n                     ;; the org data are not loaded yet\n                     (not org-data)\n                     ;; No board or contributions specified\n                     (and (not current-board-slug)\n                          (not current-contributions-id)\n                          ;; but there are some\n                          (pos? (count (:boards org-data))))\n                     ;; Active users have not been loaded yet:\n                     ;; they are blocking since they are used to:\n                     ;; - init entries body and comments body for mentions\n                     ;; - show the people list in the navigation sidebar\n                     ;; - show user's info on hover and in profile panels\n                     ;; - on mobile it's not blocking since cmail is closed\n                     (and (not is-mobile?)\n                          (not (map? active-users))))\n        org-not-found (and (not (nil? orgs))\n                           (not ((set (map :slug orgs)) current-org-slug)))\n        section-not-found (and (not org-not-found)\n                               org-data\n                               (not current-contributions-id)\n                               (not (dis/is-container? current-board-slug))\n                               (not ((set (map :slug (:boards org-data))) current-board-slug)))\n        current-activity-data (when current-activity-id\n                                (get posts-data current-activity-id))\n        entry-not-found (and ;; org is present\n                             (not org-not-found)\n                             ;; Users for mentions has not been loaded\n                             (not (map? active-users))\n                             ;; section is present\n                             (not section-not-found)\n                             ;; route is for a single post and it's been loaded\n                             current-activity-data\n                             ;; post wasn't found\n                             (or (= current-activity-data :404)\n                                 ;; route has wrong board slug/uuid for the current post\n                                 (and (map? current-activity-data)\n                                      (not (:loading current-activity-data))\n                                      (not= (:board-slug current-activity-data) current-board-slug)\n                                      (not= (:board-uuid current-activity-data) current-board-slug))))\n        show-login-wall (and (not jwt-data)\n                             (or force-login-wall\n                                 (and current-activity-id\n                                      (or org-not-found\n                                          section-not-found\n                                          entry-not-found))))\n        show-activity-removed (and jwt-data\n                                   current-activity-id\n                                   (or org-not-found\n                                       section-not-found\n                                       entry-not-found))\n        is-loading (and (not show-login-wall)\n                        (not show-activity-removed)\n                        loading?)\n        open-panel (last panel-stack)\n        show-section-editor (= open-panel :section-edit)\n        show-section-add (= open-panel :section-add)\n        show-reminders? (= open-panel :reminders)\n        show-reminder-edit? (and open-panel\n                                 (s/starts-with? (name open-panel) \"reminder-\"))\n        show-reminders-view? (or show-reminders? show-reminder-edit?)\n        show-wrt-view? (and open-panel\n                            (s/starts-with? (name open-panel) \"wrt-\"))\n        show-mobile-cmail? (and cmail-state\n                                (not (:collapsed cmail-state))\n                                is-mobile?)\n        user-responded-to-push-permission? (drv/react s :user-responded-to-push-permission?)\n        show-push-notification-permissions-modal? (and ua/mobile-app?\n                                                       jwt-data\n                                                       (not user-responded-to-push-permission?))\n        show-trial-expired? (payments-actions/show-paywall-alert? payments-data)\n        show-user-info? (and open-panel\n                             (s/starts-with? (name open-panel) \"user-info-\"))\n        show-follow-picker (= open-panel :follow-picker)]\n    (if is-loading\n      [:div.org-dashboard\n        (loading {:loading true})]\n      [:div\n        {:class (utils/class-set {:org-dashboard true\n\n                                  :mobile-or-tablet is-mobile?\n                                  :login-wall show-login-wall\n                                  :activity-removed show-activity-removed\n                                  :expanded-activity current-activity-id\n                                  :trial-expired show-trial-expired?\n                                  :show-menu (= open-panel :menu)})}\n        ;; Use cond for the next components to exclud each other and avoid rendering all of them\n        (login-overlays-handler)\n        (cond\n          ;; Activity removed\n          show-activity-removed\n          (activity-removed)\n          ;; Activity not found\n          show-login-wall\n          (login-wall)\n          (= open-panel :payments)\n          (payments-settings-modal {:org-data org-data})\n          ;; Org settings\n          (= open-panel :org)\n          (org-settings-modal)\n          ;; Integrations settings\n          (= open-panel :integrations)\n          (integrations-settings-modal)\n          ;; Invite picker settings\n          (= open-panel :invite-picker)\n          (invite-picker-modal)\n          ;; Invite via email\n          (= open-panel :invite-email)\n          (invite-email-modal)\n          ;; Invite via Slack\n          (= open-panel :invite-slack)\n          (invite-slack-modal)\n          ;; Team management\n          (= open-panel :team)\n          (team-management-modal)\n          ;; User settings\n          (= open-panel :profile)\n          (user-profile-modal)\n          ;; User notifications\n          (= open-panel :notifications)\n          (user-notifications-modal)\n          ;; Reminders list\n          show-reminders?\n          (recurring-updates-modal)\n          ;; Edit a reminder\n          show-reminder-edit?\n          (edit-recurring-update-modal)\n          ;; Mobile create a new section\n          show-section-editor\n          (section-editor initial-section-editing\n           (fn [sec-data note dismiss-action]\n            (if sec-data\n              (section-actions/section-save sec-data note dismiss-action)\n              (dismiss-action))))\n          ;; Mobile edit current section data\n          show-section-add\n          (section-editor nil show-section-add-cb)\n          ;; Activity share for mobile\n          (and is-mobile?\n               is-sharing-activity)\n          (activity-share)\n          ;; WRT\n          show-wrt-view?\n          (wrt org-data)\n          ;; UI Theme settings panel\n          (= open-panel :theme)\n          (theme-settings-modal (drv/react s :ui-theme))\n          ;; User info modal\n          show-user-info?\n          (user-info-modal {:user-data user-info-data :org-data org-data})\n          ;; Follow user picker\n          show-follow-picker\n          (follow-picker))\n        ;; Activity share modal for no mobile\n        (when (and (not is-mobile?)\n                   is-sharing-activity)\n          ;; If we have an element id find the share container inside that element\n          ;; and portal the component to that element\n          (let [portal-element (when activity-share-container\n                                  (.get (.find (js/$ (str \"#\" activity-share-container))\n                                         \".activity-share-container\") 0))]\n            (if portal-element\n              (rum/portal (activity-share) portal-element)\n              (activity-share))))\n        ;; Cmail mobile editor\n        (when show-mobile-cmail?\n          (cmail))\n        ;; Menu always rendered if not on mobile since we need the\n        ;; selector for whats-new widget to be present\n        (when (or (not is-mobile?)\n                  (and is-mobile?\n                       (= open-panel :menu)))\n          (menu))\n        ;; Mobile push notifications permission\n        (when show-push-notification-permissions-modal?\n          (push-notifications-permission-modal))\n        ;; Alert modal\n        (when is-showing-alert\n          (alert-modal))\n        ;; Page container\n        (when (or ;; On mobile don't show the dashboard/stream when showing another panel\n                  (not is-mobile?)\n                  (and (not is-sharing-activity)\n                       (not show-mobile-cmail?)\n                       (not show-push-notification-permissions-modal?)))\n          [:div.page\n            (when show-trial-expired?\n              (trial-expired-banner))\n            (navbar)\n            [:div.org-dashboard-container\n              [:div.org-dashboard-inner\n               (dashboard-layout)]\n              (when current-activity-id\n                (expanded-post))]])])))\n"]}