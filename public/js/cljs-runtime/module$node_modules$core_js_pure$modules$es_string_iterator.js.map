{
"version":3,
"file":"module$node_modules$core_js_pure$modules$es_string_iterator.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,2DAAf,CAAgF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAExH,IAAIC,OAASH,OAAA,CAAQ,6DAAR,CAATG,CAAkDA,MAClDC,OAAAA,CAAsBJ,OAAA,CAAQ,2DAAR,CACtBK,QAAAA,CAAiBL,OAAA,CAAQ,4DAAR,CAGrB,KAAIM,iBAAmBF,MAAnBE,CAAuCC,GAA3C,CACIC,iBAAmBJ,MAAA,CAAoBK,SAApB,CAFDC,iBAEC,CAIvBL,QAAA,CAAeM,MAAf,CAAuB,QAAvB,CAAiC,QAAS,CAACC,QAAD,CAAW,CACnDN,gBAAA,CAAiB,IAAjB;AAAuB,CACrBO,KARkBH,iBAOG,CAErBI,OAAQH,MAAA,CAAOC,QAAP,CAFa,CAGrBG,MAAO,CAHc,CAAvB,CADmD,CAArD,CAQGC,QAAa,EAAG,CACjB,IAAIC,MAAQT,gBAAA,CAAiB,IAAjB,CAAZ,CACIM,OAASG,KAATH,CAAeA,MADnB,CAEIC,MAAQE,KAARF,CAAcA,KAElB,IAAIA,KAAJ,EAAaD,MAAb,CAAoBI,MAApB,CAA4B,MAAO,CAAEC,MAAOC,IAAAA,EAAT,CAAoBC,KAAM,CAAA,CAA1B,CACnCC,OAAA,CAAQnB,MAAA,CAAOW,MAAP,CAAeC,KAAf,CACRE,MAAA,CAAMF,KAAN,EAAeO,MAAf,CAAqBJ,MACrB,OAAO,CAAEC,MAAOG,MAAT,CAAgBD,KAAM,CAAA,CAAtB,CARU,CARnB,CAZwH;",
"sources":["node_modules/core-js-pure/modules/es.string.iterator.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$core_js_pure$modules$es_string_iterator\"] = function(global,require,module,exports) {\n'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: String(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return { value: undefined, done: true };\n  point = charAt(string, index);\n  state.index += point.length;\n  return { value: point, done: false };\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","charAt","InternalStateModule","defineIterator","setInternalState","set","getInternalState","getterFor","STRING_ITERATOR","String","iterated","type","string","index","next","state","length","value","undefined","done","point"]
}
