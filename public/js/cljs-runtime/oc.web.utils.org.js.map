{"version":3,"sources":["oc/web/utils/org.cljs"],"mappings":";AAGA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKA;AAIL,AAAA,AAAKC;AAEL,AAAA,AAAMC,AAAoBC;AAA1B,AACE,AAAMA;AAAN,AACE,AAAMC,AAAkB,AAACC,AAA0BF;AAC7CG,AAAgB,AAAA,AAAWF;AAC3BG,AAAkB,AAAID,AACF,AAAA,AAACE,AAAKL,AAAe,AAAA,AAAK,AAACM,AAAMN,AACjCA;AACpBO,AAAgB,AAAI,AAAA,AAAaH,AACf,AAAA,AAACC,AAAKD,AACNA;AAClBI,AAAkB,AAAI,AAAA,AAAaD,AACf,AAAA,AAACF,AAAKE,AACNA;AACpBE,AAAmB,AAAI,AAAA,AAAaD,AACf,AAAA,AAACH,AAAKG,AACNA;AAb3B,AAcE,AAAI,AAAA,AAAaC;AACf,AAAA,AAACJ,AAAKI;;AACNA;;;AAjBN;;;AAmBF,AAAA,AAAMC,AAA0BC,AAAaC;AAA7C,AACE,AAAI,AAAK,AAACC,AAASD,AACV,AAAA,AAAMA;AACbA;;AACAD","names":["oc.web.utils.org/org-avatar-filestack-config","oc.web.utils.org/org-name-max-length","oc.web.utils.org/clean-email-domain","email-domain","lower-case-domain","clojure.string/lower-case","trailing-slash?","no-trailing-slash","cljs.core.subs","cljs.core/count","no-beginning-at","no-beginning-http","no-beginning-https","oc.web.utils.org/disappearing-count-value","previous-val","next-val","cljs.core/integer?"],"sourcesContent":["(ns oc.web.utils.org\n  (:require [oc.web.lib.jwt :as jwt]))\n\n(def org-avatar-filestack-config\n  {:accept \"image/*\"\n   :fromSources [\"local_file_system\"]})\n\n(def org-name-max-length 50)\n\n(defn clean-email-domain [email-domain]\n  (when email-domain\n    (let [lower-case-domain (clojure.string/lower-case email-domain)\n          trailing-slash? (.endsWith lower-case-domain \"/\")\n          no-trailing-slash (if trailing-slash?\n                              (subs email-domain 0 (dec (count email-domain)))\n                              email-domain)\n          no-beginning-at (if (.startsWith no-trailing-slash \"@\")\n                            (subs no-trailing-slash 1)\n                            no-trailing-slash)\n          no-beginning-http (if (.startsWith no-beginning-at \"http://\")\n                              (subs no-beginning-at 7)\n                              no-beginning-at)\n          no-beginning-https (if (.startsWith no-beginning-http \"https://\")\n                               (subs no-beginning-http 8)\n                               no-beginning-http)]\n      (if (.startsWith no-beginning-https \"www.\")\n        (subs no-beginning-https 4)\n        no-beginning-https))))\n\n(defn disappearing-count-value [previous-val next-val]\n  (if (and (integer? next-val)\n           (pos? next-val))\n    next-val\n    previous-val))"]}