{
"version":3,
"file":"module$node_modules$core_js_pure$internals$to_primitive.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,uDAAf,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACpH,IAAIC,SAAWH,OAAA,CAAQ,sDAAR,CAMfC,OAAA,CAAOC,OAAP,CAAiBE,QAAS,CAACC,KAAD,CAAQC,gBAAR,CAA0B,CAClD,GAAI,CAACH,QAAA,CAASE,KAAT,CAAL,CAAsB,MAAOA,MADqB,KAE9CE,EAF8C,CAE1CC,GAGR,IAFIF,gBAEJ,EAFwD,UAExD,EAFwB,OAAQC,EAAR,CAAaF,KAAb,CAAmBI,QAAnB,CAExB,EAFsE,CAACN,QAAA,CAASK,GAAT,CAAeD,EAAA,CAAGG,IAAH,CAAQL,KAAR,CAAf,CAEvE,EADmC,UACnC,EADI,OAAQE,EAAR,CAAaF,KAAb,CAAmBM,OAAnB,CACJ,EADiD,CAACR,QAAA,CAASK,GAAT,CAAeD,EAAA,CAAGG,IAAH,CAAQL,KAAR,CAAf,CAClD,EAAI,CAACC,gBAAL,EAAyD,UAAzD,EAAyB,OAAQC,EAAR,CAAaF,KAAb,CAAmBI,QAAnB,CAAzB,EAAuE,CAACN,QAAA,CAASK,GAAT;AAAeD,EAAA,CAAGG,IAAH,CAAQL,KAAR,CAAf,CAAxE,CAAwG,MAAOG,IAC/G,MAAMI,UAAA,CAAU,yCAAV,CAAN,CANkD,CAPgE;",
"sources":["node_modules/core-js-pure/internals/to-primitive.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$core_js_pure$internals$to_primitive\"] = function(global,require,module,exports) {\nvar isObject = require('../internals/is-object');\n\n// `ToPrimitive` abstract operation\n// https://tc39.github.io/ecma262/#sec-toprimitive\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (input, PREFERRED_STRING) {\n  if (!isObject(input)) return input;\n  var fn, val;\n  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","isObject","module.exports","input","PREFERRED_STRING","fn","val","toString","call","valueOf","TypeError"]
}
