{"version":3,"sources":["oc/web/components/ui/login_wall.cljs"],"mappings":"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","names":["oc.web.components.ui.login-wall/default-title","oc.web.components.ui.login-wall/default-desc","rum.core/build-defcs","p__44413","map__44414","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","p1__44407#","attrs44417","js/React.createElement","cljs.core/map?","sablono.interpreter/attributes","sablono.normalize.merge_with_class","sablono.interpreter/interpret","attrs44418","p1__44408#","sablono.util/join-classes","attrs44426","p1__44409#","p1__44410#","attrs44435","sablono.interpreter/create-element","cljs.core/deref","p1__44411#","p1__44412#","attrs44452","attrs44458","oc.web.components.ui.login-wall/login-wall","rum.core/reactive","org.martinklepsch.derivatives.drv","rum.core.local","s","title","desc","auth-settings","org.martinklepsch.derivatives/react","deep-link-origin","email-auth-link","oc.web.lib.utils.link_for","login-enabled","and__4115__auto__","cljs.core/seq","login-action","oc.web.actions.user/maybe-save-login-redirect","oc.web.actions.user/login-with-email","login-with-email-error","oc.web.lib.jwt/jwt","oc.web.components.ui.loading/loading","oc.web.components.ui.login-overlay/login-overlays-handler","cljs.core/identity","oc.shared.useragent/mobile-app?","oc.web.router/redirect!","oc.web.urls/home","or__4126__auto__","temp__5735__auto__","auth-link","oc.web.actions.user.login_with_slack","oc.web.actions.user.login_with_google","cljs.core._EQ_","oc.web.actions.user/show-login","oc.web.urls/contact-mail-to","oc.web.lib.utils/hide-class","cljs.core/reset!","cljs.core/not","oc.web.urls/sign-up","e","oc.web.lib.utils/event-stop","oc.web.router/nav!"],"sourcesContent":["(ns oc.web.components.ui.login-wall\n  (:require [rum.core :as rum]\n            [org.martinklepsch.derivatives :as drv]\n            [oc.web.urls :as oc-urls]\n            [oc.web.lib.jwt :as jwt]\n            [oc.web.router :as router]\n            [oc.web.dispatcher :as dis]\n            [oc.web.lib.utils :as utils]\n            [oc.web.actions.user :as user-actions]\n            [oc.web.components.ui.loading :refer (loading)]\n            [oc.web.components.ui.login-overlay :refer (login-overlays-handler)]\n            [oc.shared.useragent :as ua]\n            [oc.web.expo :as expo]))\n\n(def default-title \"Login to Wut\")\n(def default-desc \"You need to be logged in to view a post.\")\n\n(rum/defcs login-wall < rum/reactive\n                        (drv/drv :auth-settings)\n                        (drv/drv :login-with-email-error)\n                        (drv/drv :expo-deep-link-origin)\n                        (rum/local \"\" ::email)\n                        (rum/local \"\" ::pswd)\n  [s {:keys [title desc]}]\n  (let [auth-settings (drv/react s :auth-settings)\n        deep-link-origin (drv/react s :expo-deep-link-origin)\n        email-auth-link (utils/link-for (:links auth-settings) \"authenticate\" \"GET\" {:auth-source \"email\"})\n        login-enabled (and auth-settings\n                           (map? email-auth-link)\n                           (seq @(::email s))\n                           (seq @(::pswd s)))\n        login-action #(when login-enabled\n                        (.preventDefault %)\n                        (user-actions/maybe-save-login-redirect)\n                        (user-actions/login-with-email @(::email s) @(::pswd s)))\n        login-with-email-error (drv/react s :login-with-email-error)]\n    (if (jwt/jwt)\n      [:div.login-wall-container\n        (loading)]\n      [:div.login-wall-container\n        (login-overlays-handler)\n        [:header.login-wall-header\n          [:button.mlb-reset.top-back-button\n            {:on-touch-start identity\n             :class (when ua/mobile-app? \"mobile-app\")\n             :on-click #(if ua/mobile-app?\n                          (router/redirect! oc-urls/home)\n                          (do\n                            (.preventDefault %)\n                            (router/redirect! oc-urls/home)))\n             :aria-label \"Back\"}\n            \"Back\"]\n          [:div.title\n            (or title default-title)]\n          [:button.mlb-reset.top-continue\n            {:class (when-not login-enabled \"disabled\")\n             :on-click login-action}\n            \"Log in\"]]\n        [:div.login-wall-wrapper\n          [:div.login-wall-internal\n            \n            [:div.login-wall-content\n              [:div.login-overlay-cta.group\n                \n                [:div.login-title \"Log in\"]]\n              (when (seq (or desc default-desc))\n                [:div.login-description (or desc default-desc)])\n              [:div.login-buttons.group\n                [:button.mlb-reset.signup-with-slack\n                  {:on-touch-start identity\n                   :on-click #(do\n                               (.preventDefault %)\n                               (when-let [auth-link (utils/link-for (:links auth-settings) \"authenticate\" \"GET\"\n                                                     {:auth-source \"slack\"})]\n                                 (user-actions/maybe-save-login-redirect)\n                                 (user-actions/login-with-slack auth-link\n                                                                (when ua/mobile-app?\n                                                                  {:redirect-origin deep-link-origin}))))}\n                  [:div.slack-icon\n                    {:aria-label \"slack\"}]\n                  [:div.slack-text \"Slack\"]]\n                [:button.mlb-reset.signup-with-google\n                  {:on-touch-start identity\n                   :on-click #(do\n                               (.preventDefault %)\n                               (when-let [auth-link (utils/link-for (:links auth-settings) \"authenticate\" \"GET\"\n                                                                    {:auth-source \"google\"})]\n                                 (user-actions/maybe-save-login-redirect)\n                                 (user-actions/login-with-google auth-link\n                                                                 (when ua/mobile-app?\n                                                                   {:redirect-origin deep-link-origin}))))}\n                 [:div.google-icon\n                  {:aria-label \"google\"}]\n                 [:div.google-text \"Google\"]]]\n              [:div.or-login\n                [:div.or-login-copy \"Or, login with email\"]]\n              ;; Email fields\n              [:div.group\n                ;; Error messages\n                (when-not (nil? login-with-email-error)\n                  (cond\n                    (= login-with-email-error :verify-email)\n                    [:span.small-caps.green\n                      \"Hey buddy, go verify your email, again, eh?\"]\n                    (= login-with-email-error 401)\n                    [:span.small-caps.red\n                      \"The email or password you entered is incorrect.\"\n                      [:br]\n                      \"Please try again, or \"\n                      [:a.underline.red\n                        {:on-click #(user-actions/show-login :password-reset)}\n                        \"reset your password\"]\n                      \".\"]\n                    :else\n                    [:span.small-caps.red\n                      \"System troubles logging in.\"\n                      [:br]\n                      \"Please try again, then \"\n                      [:a.underline.red {:href oc-urls/contact-mail-to} \"contact support\"]\n                      \".\"]))\n                [:form.sign-in-form\n                  [:div.fields-container.group\n                    [:div.field-label\n                      \"Work email\"]\n                    [:input.field-content.email\n                      {:type \"email\"\n                       :name \"email\"\n                       :class utils/hide-class\n                       :value @(::email s)\n                       :on-change #(reset! (::email s) (.. % -target -value))}]\n                    [:div.field-label\n                      \"Password\"]\n                    [:input.field-content.password\n                      {:type \"password\"\n                       :name \"password\"\n                       :class utils/hide-class\n                       :value @(::pswd s)\n                       :on-change #(reset! (::pswd s) (.. % -target -value))}]\n                    [:div.forgot-password\n                      [:a\n                        {:on-click #(user-actions/show-login :password-reset)}\n                        \"Forgot password?\"]]]\n                  [:button.mlb-reset.continue-btn\n                    {:aria-label \"Login\"\n                     :disabled (not login-enabled)\n                     :on-click login-action}\n                    \"Log in\"]]]]]\n          [:div.footer-link\n            \"Don't have an account yet?\"\n            [:div.footer-link-inner\n              [:a\n                {:href oc-urls/sign-up\n                 :on-click (fn [e]\n                             (utils/event-stop e)\n                             (router/nav! oc-urls/sign-up))}\n                \"Sign up here\"]]]]])))\n"]}