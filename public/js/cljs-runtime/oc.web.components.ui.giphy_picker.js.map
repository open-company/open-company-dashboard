{"version":3,"sources":["oc/web/components/ui/giphy_picker.cljs"],"mappings":";AASA,AAAA,AAAKA;AAEL,AAAA,AAAAC,AAAA,AAAAC,AAAWO,AAMRE;AANH,AAAA,AAAAR,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAMaiB;AANb,AAAAb,AAAAJ,AAAA,AAMwBkB;AANxB,AAAAd,AAAAJ,AAAA,AAMsCS;AANtC,AAAAL,AAAAJ,AAAA,AAM+DmB;AAN/D,AAAA,AAAA,AAOQC,AAAkB,AAAIH,AAAW,AAAAJ,AAAA,AAAAC,AAAML,AAA0B,AAAoBI;AACrFQ,AAAW,AAAAC,AAAI,AAAgB,AAAmBT;AAAvC,AAAA,AAAAS;AAAAA;;AACI,AAAeC;;;AAC9BC,AAAiB,AAAA,AAAIL,AAAwB,AAAa,AAAAN,AAAA,AAAAC,AAAMK;AAChEM,AAAW,AAAA,AAAIN,AAAwB,AAAaC;AACpDM,AAAa,AAAAC,AAAA;AAAAC,AAAA,AAAAC,AAAQ,AAAA,AAAcrB;AAAtB,AAAA,AAAAmB,AAAAC,AAAAD,AAAAC;;AACbE,AAAkB,AAAA,AAAA,AAAGJ,AACAF,AACA,AAAA,AAAGC,AACH5B;AACrBkC,AAAkB,AAAI,AAAGD,AAAkBT,AACvB,AAAAM,AAAA;AAAAC,AAAO,AAAA,AAAA,AAAGF,AAAa,AAAGI,AAAkBT;AAA5C,AAAA,AAAAM,AAAAC,AAAAD,AAAAC;AACAF;AAnB5B,AAAA,AAAArB,AAAA,AAAA,AAAA,AAAA,AAqBoB,AAAA,AAAK0B;AArBzB,AAAA,AAAA,AAA0B,AAAA,AAAA,AAACxB,AACY,AAAKC;AAAL,AACX,AAAMC,AAAyB,AAAA,AAA2B,AAACC,AAAM,AAAA,AAAWF;AAA5E,AACE,AAAAG,AAAqB,AAAAE,AAAA,AAAAC,AAAM,AAAA,AAAA,AAACC,AAAON;AAAnC,AAAA,AAAAE;AAAA,AAAA,AAAAA,AAAWC;AAAX,AACE,AAACI,AAAO,AAAA,AAAcR,AAAG,AAAaI;;AADxC;;AAEHJ;AAL3B","names":["oc.web.components.ui.giphy-picker/giphy-picker-max-height","rum.core/build-defcs","p__46236","map__46237","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","js/React.createElement","oc.web.components.ui.giphy-picker/giphy-picker","rum.core.local","s","outer-container-selector","cljs.core/first","temp__5735__auto__","picker-el","js/document","dommy.core/selector","cljs.core.concat","cljs.core/reset!","fullscreen","pick-emoji-cb","offset-element-selector","scrolling-element","win-height","or__4126__auto__","js/window","top-offset-limit","scroll-top","top-position","x__4214__auto__","y__4215__auto__","cljs.core/deref","relative-position","adjusted-position"],"sourcesContent":["(ns oc.web.components.ui.giphy-picker\n  (:require [rum.core :as rum]\n            [dommy.core :refer-macros (sel1)]\n            [oc.web.local-settings :as ls]\n            [oc.web.utils.dom :as dom-utils]\n            [oc.web.lib.react-utils :as react-utils]\n            ;; [\"react-giphy-selector\" :as react-giphy-selector]\n            ))\n\n(def giphy-picker-max-height 408)\n\n(rum/defcs giphy-picker < (rum/local 0 ::offset-top)\n                          {:will-mount (fn [s]\n                            (let [outer-container-selector (:outer-container-selector (first (:rum/args s)))]\n                              (when-let [picker-el (sel1 (concat outer-container-selector [:div.medium-editor-media-picker]))]\n                                (reset! (::offset-top s) (.-offsetTop picker-el))))\n                           s)}\n  [s {:keys [fullscreen pick-emoji-cb outer-container-selector offset-element-selector]}]\n  (let [scrolling-element (if fullscreen (sel1 outer-container-selector) (.-scrollingElement js/document))\n        win-height (or (.-clientHeight (.-documentElement js/document))\n                       (.-innerHeight js/window))\n        top-offset-limit (if offset-element-selector (.-offsetTop (sel1 offset-element-selector)) 0)\n        scroll-top (if offset-element-selector (.-scrollTop scrolling-element) 0)\n        top-position (max 0 @(::offset-top s))\n        relative-position (+ top-position\n                             top-offset-limit\n                             (* scroll-top -1)\n                             giphy-picker-max-height)\n        adjusted-position (if (> relative-position win-height)\n                            (max 0 (- top-position (- relative-position win-height) 16))\n                            top-position)]\n    [:div.giphy-picker\n      {:style {:top (str adjusted-position \"px\")}}\n      ;; (react-utils/build (.-Selector react-giphy-selector)\n      ;;  {:apiKey ls/giphy-api-key\n      ;;   :queryInputPlaceholder \"Search for GIF\"\n      ;;   :resultColumns 1\n      ;;   :preloadTrending true\n      ;;   :containerClassName \"giphy-picker-container\"\n      ;;   :queryFormAutoFocus true\n      ;;   :queryFormClassName \"giphy-picker-form\"\n      ;;   :queryFormInputClassName \"giphy-picker-form-input\"\n      ;;   :queryFormSubmitClassName \"mlb-reset giphy-picker-form-submit\"\n      ;;   :queryFormSubmitContent \"Search\"\n      ;;   :searchResultsClassName (str \"giphy-picker-results-container\" (when fullscreen \" fullscreen\"))\n      ;;   :searchResultClassName \"giphy-picker-results-item\"\n      ;;   :suggestionsClassName \"giphy-picker-suggestions\"\n      ;;   :suggestionClassName \"giphy-picker-suggestions-suggestion\"\n      ;;   :loaderClassName \"giphy-picker-loader\"\n      ;;   :onGifSelected pick-emoji-cb})\n     ]))"]}