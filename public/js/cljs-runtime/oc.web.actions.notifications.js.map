{"version":3,"sources":["oc/web/actions/notifications.cljs"],"mappings":";AAMA,AAAA,AAAKA;AAEL,AAAA,AAAAC,AAAOM;AAAP,AAAA,AAAAL,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAAA,AAC4BQ;AAD5B,AAAAJ,AAAAJ,AAAA,AACWM;AADX,AAAAF,AAAAJ,AAAA,AACiBO;AADjB,AAEE,AAAM,AAAKE,AACA,AAACC,AAAI,AAACC;AADjB,AAEE,AAAMC,AAAM,AAAAC,AAAkBP;AAA9B,AACE,AAAA,AAAM,AAAWM;AAAjB,AAAyB,AAAI,AAACE;;AACD,AAACP,AAAAA,AAAAA;;;AAJlC;;;AAMF,AAAA,AAAMQ,AAAmBP;AAAzB,AACE,AAAMQ,AAAgB,AAAAC,AAAI,AAAA,AAAST;AAAb,AAAA,AAAAS;AAAAA;;AAAgCnB;;;AAChDoB,AAA4BV,AACH,AAAA,AAACW,AAAkB,AAAU,AAAAC,AAC7B,AAAA,AAACD,AAAcH;AAH9C,AAIE,AAACX,AAAuCa;;AACxC,AAAA,AAAA,AAACG,AAAiCH;;AAEtC,AAAA,AAAMI,AAAqBd;AAA3B,AACE,AAAA,AAAA,AAACa,AAAoCb;;AAEvC,AAAA,AAAMe,AAA2BC;AAAjC,AACE,AAAA,AAAA,AAACH,AAA0CG","names":["oc.web.actions.notifications/default-expiration-time","p__47744","map__47746","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","oc.web.actions.notifications/potentially-show-desktop-notification!","title","click","notification-data","oc.shared.useragent/desktop-app?","cljs.core/not","js/window.OCCarrotDesktop.windowHasFocus","notif","js/Notification","js/window.OCCarrotDesktop.showDesktopWindow","oc.web.actions.notifications/show-notification","expiration-time","or__4126__auto__","fixed-notification-data","cljs.core.assoc","js/Date","oc.web.dispatcher/dispatch!","oc.web.actions.notifications/remove-notification","oc.web.actions.notifications/remove-notification-by-id","notification-id"],"sourcesContent":["(ns oc.web.actions.notifications\n  (:require [taoensso.timbre :as timbre]\n            [oc.web.dispatcher :as dis]\n            [oc.shared.useragent :as ua]))\n\n;; Default time to disappeara notification\n(def default-expiration-time 3)\n\n(defn- potentially-show-desktop-notification!\n  [{:keys [title click] :as notification-data}]\n  (when (and ua/desktop-app?\n             (not (js/window.OCCarrotDesktop.windowHasFocus)))\n    (let [notif (js/Notification. title)]\n      (set! (.-onclick notif) #(do (js/window.OCCarrotDesktop.showDesktopWindow)\n                                   (click))))))\n\n(defn show-notification [notification-data]\n  (let [expiration-time (or (:expire notification-data) default-expiration-time)\n        fixed-notification-data (-> notification-data\n                                 (assoc :created-at (.getTime (js/Date.)))\n                                 (assoc :expire expiration-time))]\n    (potentially-show-desktop-notification! fixed-notification-data)\n    (dis/dispatch! [:notification-add fixed-notification-data])))\n\n(defn remove-notification [notification-data]\n  (dis/dispatch! [:notification-remove notification-data]))\n\n(defn remove-notification-by-id [notification-id]\n  (dis/dispatch! [:notification-remove-by-id notification-id]))\n"]}