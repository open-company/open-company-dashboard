{
"version":3,
"file":"module$node_modules$react_virtualized$dist$commonjs$Grid$utils$ScalingCellSizeAndPositionManager.js",
"lineCount":10,
"mappings":"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",
"sources":["node_modules/react-virtualized/dist/commonjs/Grid/utils/ScalingCellSizeAndPositionManager.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_virtualized$dist$commonjs$Grid$utils$ScalingCellSizeAndPositionManager\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _CellSizeAndPositionManager = require('./CellSizeAndPositionManager');\n\nvar _CellSizeAndPositionManager2 = _interopRequireDefault(_CellSizeAndPositionManager);\n\nvar _maxElementSize = require('./maxElementSize.js');\n\nvar _types = require('../types');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\n\n\n/**\n * Browsers have scroll offset limitations (eg Chrome stops scrolling at ~33.5M pixels where as Edge tops out at ~1.5M pixels).\n * After a certain position, the browser won't allow the user to scroll further (even via JavaScript scroll offset adjustments).\n * This util picks a lower ceiling for max size and artificially adjusts positions within to make it transparent for users.\n */\n\nvar ScalingCellSizeAndPositionManager = function () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === undefined ? (0, _maxElementSize.getMaxElementSize)() : _ref$maxScrollSize,\n        params = (0, _objectWithoutProperties3.default)(_ref, ['maxScrollSize']);\n    (0, _classCallCheck3.default)(this, ScalingCellSizeAndPositionManager);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new _CellSizeAndPositionManager2.default(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  (0, _createClass3.default)(ScalingCellSizeAndPositionManager, [{\n    key: 'areOffsetsAdjusted',\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: 'configure',\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: 'getCellCount',\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: 'getEstimatedCellSize',\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: 'getLastMeasuredIndex',\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: 'getOffsetAdjustment',\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n      var safeTotalSize = this.getTotalSize();\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: 'getSizeAndPositionOfCell',\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: 'getSizeAndPositionOfLastMeasuredCell',\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: 'getTotalSize',\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: 'getUpdatedOffsetForIndex',\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === undefined ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: 'getVisibleCellRange',\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: 'resetCell',\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: '_getOffsetPercentage',\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: '_offsetToSafeOffset',\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: '_safeOffsetToOffset',\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexports.default = ScalingCellSizeAndPositionManager;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_objectWithoutProperties2","_objectWithoutProperties3","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_CellSizeAndPositionManager","_CellSizeAndPositionManager2","_maxElementSize","ScalingCellSizeAndPositionManager","_ref","_ref$maxScrollSize","maxScrollSize","undefined","getMaxElementSize","params","_cellSizeAndPositionManager","_maxScrollSize","key","areOffsetsAdjusted","getTotalSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","getOffsetAdjustment","_ref2","containerSize","offset","totalSize","safeTotalSize","offsetPercentage","_getOffsetPercentage","Math","round","getSizeAndPositionOfCell","index","getSizeAndPositionOfLastMeasuredCell","min","getUpdatedOffsetForIndex","_ref3","_ref3$align","align","currentOffset","targetIndex","_safeOffsetToOffset","_offsetToSafeOffset","getVisibleCellRange","_ref4","resetCell","_ref5","_ref6","_ref7"]
}
