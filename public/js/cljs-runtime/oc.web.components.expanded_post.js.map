{"version":3,"sources":["oc/web/components/expanded_post.cljs"],"mappings":"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","names":["oc.web.components.expanded-post/close-expanded-post","e","oc.web.actions.nav-sidebar/dismiss-post-modal","oc.web.components.expanded-post/save-fixed-comment-height!","s","cur-height","js/$","rum.core/ref-node","cljs.core/deref","cljs.core._EQ_","cljs.core/reset!","oc.web.components.expanded-post/win-width","or__4126__auto__","js/document","js/window","oc.web.components.expanded-post/set-mobile-video-height!","oc.web.lib.responsive/is-tablet-or-mobile?","oc.web.lib.utils/calc-video-height","oc.web.components.expanded-post/load-comments","force?","activity-data","org.martinklepsch.derivatives/get-ref","oc.web.utils.activity/get-comments","oc.web.utils.activity.get_comments_if_needed","oc.web.components.expanded-post/save-initial-read-data","oc.web.components.expanded-post/mark-read","oc.web.actions.activity.mark_read","oc.web.components.expanded-post/big-web-collapse-min-height","oc.web.components.expanded-post/mobile-collapse-min-height","oc.web.components.expanded-post/min-body-length-for-truncation","oc.web.components.expanded-post/check-collapse-post","is-mobile?","oc.web.lib.responsive/is-mobile-size?","comparing-height","comments-count","oc.web.lib.utils.link_for","and__4115__auto__","cljs.core/count","cljs.core/not","cljs.core/seq","oc.web.components.expanded-post/add-comment-prefix","rum.core/build-defcs","js/React.createElement","sablono.util/join-classes","p1__46248#","sablono.interpreter/interpret","attrs46257","cljs.core.apply","cljs.core/map?","sablono.interpreter/attributes","sablono.normalize.merge_with_class","oc.web.components.expanded-post/expanded-post","rum.core/reactive","org.martinklepsch.derivatives.drv","rum.core.local","oc.web.mixins.mention.oc_mentions_hover","oc.web.mixins.ui/interactive-images-mixin","oc.web.mixins.ui/no-scroll-mixin","_","oc.web.actions.comment/add-comment-blur","oc.web.utils.comment.add_comment_focus_value","org.martinklepsch.derivatives/react","comments-drv","_add-comment-focus","_users-info-hover","_follow-publishers-list","_followers-publishers-count","activities-read","read-data","cljs.core.get","editable-boards","comments-data","oc.web.utils.activity/activity-comments","dom-element-id","dom-node-class","publisher","route","org-data","has-video","uploading-video","oc.web.dispatcher.uploading_video_data","current-user-data","current-user-id","is-publisher?","video-player-show","video-size","expand-image-src","assigned-follow-up-data","cljs.core/first","p1__46247#","cljs.core.filter","add-comment-force-update*","add-comment-force-update","oc.web.dispatcher.add_comment_string_key","mobile-more-menu-el","show-mobile-menu?","more-menu-comp","G__46251","oc.web.components.ui.more-menu/more-menu","muted-post?","comments-link","bookmarked?","oc.web.lib.utils/event-inside?","G__46254","oc.web.components.ui.image-modal/image-modal","G__46268","oc.web.components.ui.post-authorship/post-authorship","oc.web.lib.utils/activity-date-tooltip","oc.web.lib.utils/foc-date-time","rum.core/portal","cljs.core.swap_BANG_","oc.web.components.ui.small-loading/small-loading","oc.web.lib.utils/hide-class","oc.web.lib.utils/class-set","G__46269","oc.web.components.ui.poll/polls-wrapper","oc.web.dispatcher/activity-key","G__46270","oc.web.components.ui.stream-attachments/stream-attachments","G__46271","oc.web.components.reactions/reactions","G__46272","oc.web.components.ui.comments-summary/foc-comments-summary","G__46273","oc.web.components.ui.wrt/wrt-count","oc.shared.useragent/android?","G__46274","oc.web.components.stream-comments/stream-comments","cljs.core.get_in","rum.core/with-key","G__46275","oc.web.components.ui.add-comment/add-comment","oc.web.utils.dom/viewport-width"],"sourcesContent":["(ns oc.web.components.expanded-post\n  (:require [rum.core :as rum]\n            [dommy.core :as dom]\n            [dommy.core :refer-macros (sel1)]\n            [org.martinklepsch.derivatives :as drv]\n            [oc.web.dispatcher :as dis]\n            [oc.shared.useragent :as ua]\n            [oc.web.lib.utils :as utils]\n            [oc.web.mixins.ui :as mixins]\n            [oc.web.utils.activity :as au]\n            [oc.web.utils.comment :as cu]\n            [oc.web.utils.dom :as dom-utils]\n            [oc.web.actions.nux :as nux-actions]\n            [oc.web.lib.responsive :as responsive]\n            [oc.web.mixins.mention :as mention-mixins]\n            [oc.web.actions.nav-sidebar :as nav-actions]\n            [oc.web.actions.comment :as comment-actions]\n            [oc.web.components.ui.wrt :refer (wrt-count)]\n            [oc.web.actions.activity :as activity-actions]\n            [oc.web.components.reactions :refer (reactions)]\n            [oc.web.components.ui.image-modal :as image-modal]\n            [oc.web.components.ui.more-menu :refer (more-menu)]\n            [oc.web.components.ui.poll :refer (polls-wrapper)]\n            [oc.web.components.ui.add-comment :refer (add-comment)]\n            [oc.web.components.ui.small-loading :refer (small-loading)]\n            [oc.web.components.stream-comments :refer (stream-comments)]\n            [oc.web.components.ui.post-authorship :refer (post-authorship)]\n            [oc.web.components.ui.comments-summary :refer (foc-comments-summary)]\n            [oc.web.components.ui.stream-attachments :refer (stream-attachments)]))\n\n(defn close-expanded-post [e]\n  (nav-actions/dismiss-post-modal e))\n\n(defn save-fixed-comment-height! [s]\n  (let [cur-height (.outerHeight (js/$ (rum/ref-node s :expanded-post-fixed-add-comment)))]\n    (when-not (= @(::comment-height s) cur-height)\n      (reset! (::comment-height s) cur-height))))\n\n(defn win-width []\n  (or (.-clientWidth (.-documentElement js/document))\n      (.-innerWidth js/window)))\n\n(defn set-mobile-video-height! [s]\n  (when (responsive/is-tablet-or-mobile?)\n    (reset! (::mobile-video-height s) (utils/calc-video-height (win-width)))))\n\n(defn- load-comments [s force?]\n  (let [activity-data @(drv/get-ref s :activity-data)]\n    (if force?\n      (au/get-comments activity-data)\n      (au/get-comments-if-needed activity-data @(drv/get-ref s :comments-data)))))\n\n(defn- save-initial-read-data [s]\n  (let [activity-data @(drv/get-ref s :activity-data)]\n    (when (and (nil? @(::initial-last-read-at s))\n               (or (:last-read-at activity-data)\n                   (:unread activity-data)))\n      (reset! (::initial-last-read-at s) (or (:last-read-at activity-data) \"\")))))\n\n(defn- mark-read [s]\n  (when @(::mark-as-read? s)\n    (activity-actions/mark-read @(::activity-uuid s))))\n\n(def big-web-collapse-min-height 134)\n(def mobile-collapse-min-height 160)\n(def min-body-length-for-truncation 450)\n\n(defn- check-collapse-post [s]\n  (when (nil? @(::collapse-post s))\n    (let [is-mobile? (responsive/is-mobile-size?)\n          comparing-height (if is-mobile? mobile-collapse-min-height big-web-collapse-min-height)\n          activity-data @(drv/get-ref s :activity-data)\n          comments-count (-> activity-data :links (utils/link-for \"comments\") :count)]\n      (reset! (::collapse-post s) (and ;; Truncate posts with a minimum of body length\n                                       (> (count (:body activity-data)) min-body-length-for-truncation)\n                                       ;; Never if they have polls\n                                       (not (seq (:polls activity-data)))\n                                       ;; Only for users we can know if they read it or not\n                                       (:member? @(drv/get-ref s :org-data))\n                                       ;; Only when they are read\n                                       (not (:unread activity-data))\n                                       ;; And only when there is at least a comment\n                                       (pos? comments-count))))))\n\n(def add-comment-prefix \"main-comment\")\n\n(rum/defcs expanded-post <\n  rum/reactive\n  (drv/drv :route)\n  (drv/drv :org-data)\n  (drv/drv :activity-data)\n  (drv/drv :comments-data)\n  (drv/drv :add-comment-focus)\n  (drv/drv :activities-read)\n  (drv/drv :expand-image-src)\n  (drv/drv :add-comment-force-update)\n  (drv/drv :editable-boards)\n  (drv/drv :users-info-hover)\n  (drv/drv :current-user-data)\n  (drv/drv :follow-publishers-list)\n  (drv/drv :followers-publishers-count)\n  ;; Locals\n  (rum/local nil ::wh)\n  (rum/local nil ::comment-height)\n  (rum/local 0 ::mobile-video-height)\n  (rum/local nil ::initial-last-read-at)\n  (rum/local nil ::activity-uuid)\n  (rum/local false ::force-show-menu)\n  (rum/local true ::mark-as-read?)\n  (rum/local nil ::collapse-post)\n  ;; Mixins\n  (mention-mixins/oc-mentions-hover {:click? true})\n  (mixins/interactive-images-mixin \"div.expanded-post-body\")\n  mixins/no-scroll-mixin\n  {:will-mount (fn [s]\n    (check-collapse-post s)\n    (save-initial-read-data s)\n    s)\n   :did-mount (fn [s]\n    (save-fixed-comment-height! s)\n    (reset! (::activity-uuid s) (:uuid @(drv/get-ref s :activity-data)))\n    (load-comments s true)\n    (mark-read s)\n    s)\n   :did-remount (fn [_ s]\n    (save-initial-read-data s)\n    (load-comments s false)\n    s)\n   :will-unmount (fn [s]\n    (mark-read s)\n    (comment-actions/add-comment-blur (cu/add-comment-focus-value add-comment-prefix @(::activity-uuid s)))\n    (reset! (::activity-uuid s) nil)\n    s)}\n  [s]\n  (let [activity-data (drv/react s :activity-data)\n        comments-drv (drv/react s :comments-data)\n        _add-comment-focus (drv/react s :add-comment-focus)\n        _users-info-hover (drv/react s :users-info-hover)\n        _follow-publishers-list (drv/react s :follow-publishers-list)\n        _followers-publishers-count (drv/react s :followers-publishers-count)\n        activities-read (drv/react s :activities-read)\n        read-data (get activities-read (:uuid activity-data))\n        editable-boards (drv/react s :editable-boards)\n        comments-data (au/activity-comments activity-data comments-drv)\n        dom-element-id (str \"expanded-post-\" (:uuid activity-data))\n        dom-node-class (str \"expanded-post-\" (:uuid activity-data))\n        publisher (:publisher activity-data)\n        is-mobile? (responsive/is-mobile-size?)\n        route (drv/react s :route)\n        org-data (drv/react s :org-data)\n        has-video (seq (:fixed-video-id activity-data))\n        uploading-video (dis/uploading-video-data (:video-id activity-data))\n        current-user-data (drv/react s :current-user-data)\n        current-user-id (:user-id current-user-data)\n        is-publisher? (:publisher? publisher)\n        video-player-show (and is-publisher? uploading-video)\n        video-size (when has-video\n                     (if is-mobile?\n                       {:width (win-width)\n                        :height @(::mobile-video-height s)}\n                       {:width 638\n                        :height (utils/calc-video-height 638)}))\n        expand-image-src (drv/react s :expand-image-src)\n        assigned-follow-up-data (first (filter #(= (-> % :assignee :user-id) current-user-id) (:follow-ups activity-data)))\n        add-comment-force-update* (drv/react s :add-comment-force-update)\n        add-comment-force-update (get add-comment-force-update* (dis/add-comment-string-key (:uuid activity-data)))\n        mobile-more-menu-el (sel1 [:div.mobile-more-menu])\n        show-mobile-menu? (and is-mobile?\n                               mobile-more-menu-el)\n        more-menu-comp (fn []\n                        (more-menu {:entity-data activity-data\n                                    :share-container-id dom-element-id\n                                    :editable-boards editable-boards\n                                    :external-share (not is-mobile?)\n                                    :external-bookmark (not is-mobile?)\n                                    :external-follow (not is-mobile?)\n                                    :show-edit? true\n                                    :show-delete? true\n                                    :show-move? (not is-mobile?)\n                                    :tooltip-position \"top\"\n                                    :force-show-menu (and is-mobile? @(::force-show-menu s))\n                                    :mobile-tray-menu show-mobile-menu?\n                                    :will-close (when show-mobile-menu?\n                                                  (fn [] (reset! (::force-show-menu s) false)))}))\n        muted-post? (map? (utils/link-for (:links activity-data) \"follow\"))\n        comments-link (utils/link-for (:links activity-data) \"comments\")\n        bookmarked? (or (:must-see activity-data)\n                        (:bookmarked-at activity-data))]\n    [:div.expanded-post\n      {:class dom-node-class\n       :id dom-element-id\n       :style {:padding-bottom (str @(::comment-height s) \"px\")}\n       :data-last-activity-at (:last-activity-at activity-data)\n       :data-initial-last-read-at @(::initial-last-read-at s)\n       :data-last-read-at (:last-read-at activity-data)\n       :data-new-comments-count (:new-comments-count activity-data)\n       :data-unseen-comments (:unseen-comments activity-data)\n       :on-click #(when-not (utils/event-inside? % (rum/ref-node s :expanded-post-container))\n                    (close-expanded-post %))}\n      (image-modal/image-modal {:src expand-image-src})\n      [:div.expanded-post-container\n        {:ref :expanded-post-container}\n        [:div.activity-share-container]\n        [:div.expanded-post-header.group\n          [:button.mlb-reset.back-to-board\n            {:on-click close-expanded-post\n             :data-toggle (when-not is-mobile? \"tooltip\")\n             :data-placement \"top\"\n             :title \"Close\"}]\n          [:div.expanded-post-header-center\n            (post-authorship {:activity-data activity-data\n                              :user-avatar? true\n                              :activity-board? true\n                              :user-hover? true\n                              :board-hover? true\n                              :current-user-id current-user-id})\n            [:div.separator-dot]\n            [:time\n              {:date-time (:published-at activity-data)\n               :data-toggle (when-not is-mobile? \"tooltip\")\n               :data-placement \"top\"\n               :data-container \"body\"\n               :data-delay \"{\\\"show\\\":\\\"1000\\\", \\\"hide\\\":\\\"0\\\"}\"\n               :data-title (utils/activity-date-tooltip activity-data)}\n              (utils/foc-date-time (:published-at activity-data))]\n            (when bookmarked?\n              [:div.separator-dot])\n            (when bookmarked?\n              (if (:bookmarked-at activity-data)\n                [:div.bookmark-tag]\n                [:div.must-see-tag]))\n            (when muted-post?\n              [:div.separator-dot.muted-dot])\n            (when muted-post?\n              [:div.muted-activity\n                {:data-toggle (when-not is-mobile? \"tooltip\")\n                 :data-placement \"top\"\n                 :title \"Muted\"}])]\n          (if show-mobile-menu?\n            (rum/portal (more-menu-comp) mobile-more-menu-el)\n            (more-menu-comp))\n          [:button.mlb-reset.mobile-more-bt\n            {:on-click #(swap! (::force-show-menu s) not)}]]\n        (if-not activity-data\n          (small-loading)\n          [:div.expanded-post-container-inner\n            [:div.expanded-post-headline\n              {:class utils/hide-class}\n              (:headline activity-data)]\n            [:div.expanded-post-body.oc-mentions.oc-mentions-hover\n              {:ref \"post-body\"\n               :on-click (when @(::collapse-post s)\n                           #(reset! (::collapse-post s) false))\n               :class (utils/class-set {utils/hide-class true\n                                        :collapsed @(::collapse-post s)})\n               :dangerouslySetInnerHTML {:__html (:body activity-data)}}]\n            (when @(::collapse-post s)\n              [:button.mlb-reset.expand-button\n                {:on-click #(reset! (::collapse-post s) false)}\n                [:div.expand-button-inner\n                  \"View more\"]])\n            (when (seq (:polls activity-data))\n              (polls-wrapper {:polls-data (:polls activity-data)\n                              :editing? false\n                              :current-user-id current-user-id\n                              :container-selector \"div.expanded-post\"\n                              :activity-data activity-data\n                              :dispatch-key (dis/activity-key (:slug org-data) (:uuid activity-data))}))\n            (stream-attachments (:attachments activity-data))\n            ; (when is-mobile?\n            ;   [:div.expanded-post-mobile-reactions\n            ;     (reactions {:entity-data activity-data})])\n            [:div.expanded-post-footer.group\n              (reactions {:entity-data activity-data\n                          :only-thumb? true})\n              [:div.expanded-post-footer-mobile-group\n                (when (:member? org-data)\n                  (foc-comments-summary {:entry-data activity-data\n                                         :add-comment-focus-prefix \"main-comment\"\n                                         :current-activity-id (:uuid activity-data)}))]\n              (when (:member? org-data)\n                (wrt-count {:activity-data activity-data\n                            :read-data read-data}))]\n            [:div.expanded-post-comments.group\n              {:class (when ua/android? \"android\")}\n              (stream-comments {:activity-data activity-data\n                                :comments-data comments-data\n                                :loading-comments-count (when-not (seq (get-in comments-drv [(:uuid activity-data) :sorted-comments]))\n                                                          (- (:count comments-link) (count comments-data)))\n                                :member? (:member? org-data)\n                                :last-read-at @(::initial-last-read-at s)\n                                :reply-add-comment-prefix add-comment-prefix\n                                :current-user-id current-user-id})\n              (when (:can-comment activity-data)\n                (rum/with-key (add-comment {:activity-data activity-data\n                                            :scroll-after-posting? true\n                                            :collapse? true\n                                            :internal-max-width (if is-mobile? (- (dom-utils/viewport-width) (* (+ 24 1) 2)) 606) ;; On mobile is screen width less the padding and border on both sides\n                                            :add-comment-focus-prefix \"main-comment\"})\n                 (str \"expanded-post-add-comment-\" (:uuid activity-data) \"-\" add-comment-force-update)))]])]]))\n"]}