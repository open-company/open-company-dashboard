{"version":3,"sources":["oc/web/components/ui/email_domains.cljs"],"mappings":"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","names":["oc.web.components.ui.email-domains/email-domain-removed","success?","oc.web.actions.notifications/show-notification","oc.web.components.ui.email-domains/email-domain-added","oc.web.components.ui.email-domains/remove-email-domain-prompt","domain","alert-data","oc.web.components.ui.alert-modal/hide-alert","oc.web.actions.team.remove_team","oc.web.components.ui.alert-modal/show-alert","rum.core/build-defcs","map__46764","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","js/React.createElement","sablono.interpreter/create-element","p1__46763#","cljs.core.into_array","iter__4529__auto__","s__46767","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__46769","cljs.core/chunk-buffer","i__46768","cljs.core/-nth","cljs.core/chunk-append","sablono.interpreter/interpret","cljs.core/chunk-cons","cljs.core/chunk","iter__46766","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","oc.web.components.ui.email-domains/email-domains","rum.core/reactive","org.martinklepsch.derivatives.drv","oc.web.mixins.ui/refresh-tooltips-mixin","s","um-domain-invite","team-data","org.martinklepsch.derivatives/react","is-mobile?","oc.web.lib.responsive/is-mobile-size?","or__4126__auto__","oc.web.dispatcher/dispatch!","e","cljs.core._EQ_","oc.web.lib.utils/valid-domain?","oc.web.actions.team/email-domain-team-add","cljs.core/not","oc.web.lib.utils.link_for","cljs.core/chunk-first"],"sourcesContent":["(ns oc.web.components.ui.email-domains\n  (:require [rum.core :as rum]\n            [org.martinklepsch.derivatives :as drv]\n            [oc.web.dispatcher :as dis]\n            [oc.web.lib.utils :as utils]\n            [oc.web.mixins.ui :as ui-mixins]\n            [oc.web.lib.responsive :as responsive]\n            [oc.web.actions.team :as team-actions]\n            [oc.web.components.ui.alert-modal :as alert-modal]\n            [oc.web.actions.notifications :as notification-actions]))\n\n(defn email-domain-removed [success?]\n  (notification-actions/show-notification\n   {:title (if success? \"Email domain successfully removed\" \"Error\")\n    :description (when-not success? \"An error occurred while removing the email domain, please try again.\")\n    :expire 3\n    :id (if success? :email-domain-remove-success :email-domain-remove-error)\n    :dismiss true}))\n\n(defn email-domain-added [success?]\n  (notification-actions/show-notification\n   {:title (if success? \"Email domain successfully added\" \"Error\")\n    :description (when-not success? \"An error occurred while adding the email domain, please try again.\")\n    :expire 3\n    :id (if success? :email-domain-add-success :email-domain-add-error)\n    :dismiss true}))\n\n(defn remove-email-domain-prompt [domain]\n  (let [alert-data {:icon \"/img/ML/trash.svg\"\n                    :action \"org-email-domain-remove\"\n                    :message \"Are you sure you want to remove this email domain?\"\n                    :link-button-title \"Keep\"\n                    :link-button-cb #(alert-modal/hide-alert)\n                    :solid-button-style :red\n                    :solid-button-title \"Yes\"\n                    :solid-button-cb #(do\n                                        (alert-modal/hide-alert)\n                                        (team-actions/remove-team (:links domain) email-domain-removed))}]\n    (alert-modal/show-alert alert-data)))\n\n(rum/defcs email-domains < rum/reactive\n                           (drv/drv :org-settings-team-management)\n                           ui-mixins/refresh-tooltips-mixin\n  [s]\n  (let [{:keys [um-domain-invite team-data]} (drv/react s :org-settings-team-management)\n        is-mobile? (responsive/is-mobile-size?)]\n    [:div.email-domain-container\n      [:div.email-domain-title\n        \"Allowed email domains\"\n        [:i.mdi.mdi-information-outline\n          {:title \"Any user that signs up with an allowed email domain and verifies their email address will have contributor access to your team.\"\n           :data-toggle (when-not is-mobile? \"tooltip\")\n           :data-placement \"top\"\n           :data-container \"body\"}]]\n      [:div.email-domain-field-container.oc-input.group\n        [:input.email-domain-field\n          {:type \"text\"\n           :placeholder \"@domain.com\"\n           :auto-capitalize \"none\"\n           :value (or (:domain um-domain-invite) \"\")\n           :pattern \"@?[a-z0-9.-]+\\\\.[a-z]{2,4}$\"\n           :on-change #(dis/dispatch! [:input [:um-domain-invite :domain] (.. % -target -value)])\n           :on-key-press (fn [e]\n                           (when (= (.-key e) \"Enter\")\n                             (let [domain (:domain um-domain-invite)]\n                               (when (utils/valid-domain? domain)\n                                 (team-actions/email-domain-team-add domain email-domain-added)))))}]\n        [:button.mlb-reset.add-email-domain-bt\n          {:disabled (not (utils/valid-domain? (:domain um-domain-invite)))\n           :on-click (fn [e]\n                       (let [domain (:domain um-domain-invite)]\n                         (when (utils/valid-domain? domain)\n                           (team-actions/email-domain-team-add domain email-domain-added))))}\n          \"Add\"]]\n      [:div.email-domain-list\n        (for [domain (:email-domains team-data)]\n          [:div.email-domain-row\n            {:key (str \"org-settings-domain-\" domain)}\n            (str \"@\" (:domain domain))\n            (when (utils/link-for (:links domain) \"remove\")\n              [:button.mlb-reset.remove-email-bt\n                {:on-click #(remove-email-domain-prompt domain)}\n                \"Remove\"])])]]))"]}