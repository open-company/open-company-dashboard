{"version":3,"sources":["oc/web/components/ui/more_menu.cljs"],"mappings":"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","names":["oc.web.components.ui.more-menu/show-hide-menu","s","will-open","will-close","oc.web.lib.utils/remove-tooltips","current-showing-menu","or__4126__auto__","cljs.core/deref","cljs.core/first","next-showing-menu","cljs.core/not","cljs.core/fn?","cljs.core/reset!","oc.web.components.ui.more-menu/delete-clicked","e","current-org-slug","current-board-slug","current-contributions-id","activity-data","alert-data","oc.web.components.ui.alert-modal/hide-alert","board-url","cljs.core._EQ_","cljs.core.keyword","oc.web.urls.following","oc.web.urls.replies","oc.web.urls.all_posts","oc.web.urls.inbox","oc.web.urls.unfollowing","cljs.core/seq","oc.web.urls.contributions","oc.web.urls.board","oc.web.router/nav!","oc.web.actions.activity/activity-delete","and__4115__auto__","oc.web.actions.activity/has-sample-posts?","oc.web.actions.activity/delete-samples","oc.web.components.ui.alert-modal/show-alert","rum.core/build-defcs","p__46030","map__46031","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","map__46033","sablono.interpreter/interpret","oc.web.components.ui.more-menu/more-menu","rum.core/reactive","rum.core/static","org.martinklepsch.derivatives.drv","rum.core.local","oc.web.mixins.ui.on_click_out","temp__5735__auto__","js/$","rum.core/dom-node","next-force-show-menu","cljs.core.not_EQ_","oc.web.lib.utils/after","p1__46024#","p2__46023#","G__46036","entity-data","share-container-id","editable-boards","external-share","tooltip-position","show-edit?","show-delete?","edit-cb","delete-cb","show-move?","show-unread","can-comment-share?","comment-share-cb","can-react?","react-cb","can-reply?","react-disabled?","reply-cb","external-bookmark","remove-bookmark-title","show-inbox?","force-show-menu","capture-clicks","external-follow","mobile-tray-menu","mark-unread-cb","current-activity-id","org.martinklepsch.derivatives/react","delete-link","oc.web.lib.utils.link_for","edit-link","share-link","inbox-unread-link","is-mobile?","oc.web.lib.responsive/is-tablet-or-mobile?","add-bookmark-link","remove-bookmark-link","should-show-more-bt","follow-link","unfollow-link","show-menu","oc.web.lib.utils/class-set","oc.shared.useragent/android?","oc.shared.useragent/mobile-app?","oc.shared.useragent/ios?","p1__46025#","G__46035","oc.web.components.ui.activity-move/activity-move","cljs.core/vals","p1__46026#","oc.web.actions.nav-sidebar/dismiss-post-modal","oc.web.actions.activity.activity_edit","p1__46027#","oc.web.actions.activity.activity_share_show","oc.web.actions.activity/mark-unread","oc.web.actions.activity/entry-follow","oc.web.actions.activity/entry-unfollow","oc.web.actions.activity/remove-bookmark","oc.web.actions.activity/add-bookmark","p1__46028#","oc.web.actions.activity/inbox-dismiss","p1__46029#"],"sourcesContent":["(ns oc.web.components.ui.more-menu\n  (:require [rum.core :as rum]\n            [org.martinklepsch.derivatives :as drv]\n            [oc.web.urls :as oc-urls]\n            [oc.web.router :as router]\n            [oc.web.dispatcher :as dis]\n            [oc.shared.useragent :as ua]\n            [oc.web.lib.utils :as utils]\n            [oc.web.mixins.ui :as ui-mixins]\n            [oc.web.lib.responsive :as responsive]\n            [oc.web.actions.nav-sidebar :as nav-actions]\n            [oc.web.actions.activity :as activity-actions]\n            [oc.web.components.ui.alert-modal :as alert-modal]\n            [oc.web.components.ui.activity-move :refer (activity-move)]))\n\n(defn show-hide-menu\n  [s will-open will-close]\n  (utils/remove-tooltips)\n  (let [current-showing-menu (or @(::showing-menu s) (-> s :rum/args first :force-show-menu))\n        next-showing-menu (not current-showing-menu)]\n    (if next-showing-menu\n      (when (fn? will-open)\n        (will-open))\n      (when (fn? will-close)\n        (will-close)))\n    (reset! (::showing-menu s) next-showing-menu)))\n\n;; Delete handling\n\n(defn delete-clicked [e current-org-slug current-board-slug current-contributions-id activity-data]\n  (let [alert-data {:action \"delete-entry\"\n                    :title \"Delete this post?\"\n                    :message \"This action cannot be undone.\"\n                    :link-button-style :green\n                    :link-button-title \"No, keep it\"\n                    :link-button-cb #(alert-modal/hide-alert)\n                    :solid-button-style :red\n                    :solid-button-title \"Yes, delete it\"\n                    :solid-button-cb #(let [board-url (cond (= (keyword current-board-slug) :following)\n                                                            (oc-urls/following current-org-slug)\n                                                            (= (keyword current-board-slug) :replies)\n                                                            (oc-urls/replies current-org-slug)\n                                                            (= (keyword current-board-slug) :all-posts)\n                                                            (oc-urls/all-posts current-org-slug)\n                                                            (= (keyword current-board-slug) :inbox)\n                                                            (oc-urls/inbox current-org-slug)\n                                                            (= (keyword current-board-slug) :unfollowing)\n                                                            (oc-urls/unfollowing current-org-slug)\n                                                            (seq current-contributions-id)\n                                                            (oc-urls/contributions current-org-slug current-contributions-id)\n                                                            :else\n                                                            (oc-urls/board current-org-slug current-board-slug))]\n                                       (router/nav! board-url)\n                                       (activity-actions/activity-delete activity-data)\n                                       (alert-modal/hide-alert))\n                    :bottom-button-title (when (and (:sample activity-data)\n                                                    (activity-actions/has-sample-posts?))\n                                           \"Delete all sample posts\")\n                    :bottom-button-style :red\n                    :bottom-button-cb #(do\n                                         (activity-actions/delete-samples)\n                                         (alert-modal/hide-alert))\n                    }]\n    (alert-modal/show-alert alert-data)))\n\n(rum/defcs more-menu < rum/reactive\n                       rum/static\n                       (drv/drv :route)\n                       (rum/local false ::showing-menu)\n                       (rum/local false ::move-activity)\n                       (rum/local false ::can-unmount)\n                       (rum/local false ::last-force-show-menu)\n                       (ui-mixins/on-click-out \"more-menu\" (fn [s e]\n                        (when-let [will-close (-> s :rum/args first :will-close)]\n                          (when (fn? will-close)\n                            (will-close)))\n                        (reset! (::showing-menu s) false)))\n                       {:did-mount (fn [s]\n                        (.tooltip (js/$ \"[data-toggle=\\\"tooltip\\\"]\" (rum/dom-node s)))\n                       s)\n                       :will-update (fn [s]\n                        (let [next-force-show-menu (-> s :rum/args first :force-show-menu)]\n                          (when (not= @(::last-force-show-menu s) next-force-show-menu)\n                            (reset! (::last-force-show-menu s) next-force-show-menu)\n                            (when next-force-show-menu\n                             ;; avoid automatic dismiss of the menu on iOS\n                             (reset! (::can-unmount s) false)\n                             (utils/after 1000 #(reset! (::can-unmount s) true)))))\n                        s)\n                       :did-update (fn [s]\n                        (.each (js/$ \"[data-toggle=\\\"tooltip\\\"]\" (rum/dom-node s))\n                          #(doto (js/$ %2)\n                             (.tooltip \"fixTitle\")\n                             (.tooltip \"hide\")))\n                       s)}\n  [s {:keys [entity-data share-container-id editable-boards will-open will-close external-share\n             tooltip-position show-edit? show-delete? edit-cb delete-cb show-move? show-unread\n             can-comment-share? comment-share-cb can-react? react-cb can-reply? react-disabled?\n             reply-cb external-bookmark remove-bookmark-title\n             show-inbox? force-show-menu capture-clicks external-follow mobile-tray-menu\n             mark-unread-cb]}]\n  (let [{current-org-slug :org\n         current-board-slug :board\n         current-contributions-id :contributions\n         current-activity-id :activity}          (drv/react s :route)\n        delete-link (utils/link-for (:links entity-data) \"delete\")\n        edit-link (utils/link-for (:links entity-data) \"partial-update\")\n        share-link (utils/link-for (:links entity-data) \"share\")\n        inbox-unread-link (utils/link-for (:links entity-data) \"unread\")\n        is-mobile? (responsive/is-tablet-or-mobile?)\n        add-bookmark-link (utils/link-for (:links entity-data) \"bookmark\" \"POST\")\n        remove-bookmark-link (when (:bookmarked-at entity-data)\n                               (utils/link-for (:links entity-data) \"bookmark\" \"DELETE\"))\n        should-show-more-bt (or (and show-edit?\n                                     edit-link)\n                                (and show-delete?\n                                     delete-link)\n                                can-comment-share?\n                                can-react?\n                                can-reply?\n                                (and (not external-share)\n                                     share-link)\n                                (and inbox-unread-link\n                                     show-unread))\n        follow-link (utils/link-for (:links entity-data) \"follow\")\n        unfollow-link (utils/link-for (:links entity-data) \"unfollow\")\n        show-menu (or @(::showing-menu s) force-show-menu)]\n    (when (or edit-link\n              share-link\n              inbox-unread-link\n              delete-link\n              can-comment-share?\n              can-react?\n              can-reply?\n              add-bookmark-link\n              remove-bookmark-link\n              inbox-unread-link)\n      [:div.more-menu\n        {:ref \"more-menu\"\n         :class (utils/class-set {:menu-expanded (or @(::move-activity s)\n                                                     show-menu)\n                                  :has-more-menu-bt should-show-more-bt\n                                  :mobile-tray-menu mobile-tray-menu\n                                  :android-browser (and ua/android?\n                                                        (not ua/mobile-app?))\n                                  :ios-browser (and ua/ios?\n                                                    (not ua/mobile-app?))})\n         :on-click (when mobile-tray-menu\n                     #(when (and show-menu\n                                 @(::can-unmount s))\n                        (.stopPropagation %)\n                        (show-hide-menu s will-open will-close)))}\n        (when should-show-more-bt\n          [:button.mlb-reset.more-menu-bt\n            {:type \"button\"\n             :ref \"more-menu-bt\"\n             :on-click #(show-hide-menu s will-open will-close)\n             :class (when show-menu \"active\")\n             :data-toggle (if is-mobile? \"\" \"tooltip\")\n             :data-placement (or tooltip-position \"top\")\n             :data-container \"body\"\n             :data-delay \"{\\\"show\\\":\\\"100\\\", \\\"hide\\\":\\\"0\\\"}\"\n             :title \"More\"}])\n        (cond\n          @(::move-activity s)\n          (activity-move {:boards-list (vals editable-boards)\n                          :activity-data entity-data\n                          :dismiss-cb #(reset! (::move-activity s) false)})\n          show-menu\n          [:ul.more-menu-list\n            {:class (utils/class-set {:has-remove-bookmark (and add-bookmark-link\n                                                                (or is-mobile?\n                                                                    (not external-bookmark)))\n                                      :has-add-bookmark (and remove-bookmark-link\n                                                             (or is-mobile?\n                                                                 (not external-bookmark)))\n                                      :has-mark-unread inbox-unread-link})}\n            (when (and edit-link\n                       show-edit?)\n              [:li.edit.top-rounded\n                {:on-click #(do\n                              (reset! (::showing-menu s) false)\n                              (when (fn? will-close)\n                                (will-close))\n                              (if (fn? edit-cb)\n                                (edit-cb entity-data)\n                                (do\n                                  (when current-activity-id\n                                    (nav-actions/dismiss-post-modal %))\n                                  (activity-actions/activity-edit entity-data))))}\n                \"Edit\"])\n            (when (and delete-link\n                       show-delete?)\n              [:li.delete.bottom-rounded.bottom-margin\n                {:on-click #(do\n                              (reset! (::showing-menu s) false)\n                              (when (fn? will-close)\n                                (will-close))\n                              (if (fn? delete-cb)\n                                (delete-cb entity-data)\n                                (delete-clicked % current-org-slug current-board-slug current-contributions-id entity-data)))}\n                \"Delete\"])\n            (when (and edit-link\n                       show-move?)\n              [:li.move.top-rounded\n               {:class (when (and (not (and (not external-share)\n                                            share-link))\n                                  (not (or is-mobile?\n                                            (not external-follow)))\n                                   (not (or is-mobile?\n                                            (not external-bookmark))))\n                          \"bottom-rounded bottom-margin\")\n                :on-click #(do\n                             (reset! (::showing-menu s) false)\n                             (reset! (::move-activity s) true))}\n               \"Move\"])\n            (when (and (not external-share)\n                       share-link)\n              [:li.share\n                {:class (when (and (not inbox-unread-link)\n                                   (not (or is-mobile?\n                                            (not external-follow)))\n                                   (not (or is-mobile?\n                                            (not external-bookmark))))\n                          \"bottom-rounded bottom-margin\")\n                 :on-click #(do\n                              (reset! (::showing-menu s) false)\n                              (when (fn? will-close)\n                                (will-close))\n                              (activity-actions/activity-share-show entity-data share-container-id))}\n                \"Share\"])\n            (when (and inbox-unread-link\n                       show-unread)\n              [:li.unread\n                {:class (when (and (not (or is-mobile?\n                                            (not external-follow)))\n                                   (not (or is-mobile?\n                                            (not external-bookmark))))\n                          \"bottom-rounded bottom-margin\")\n                 :on-click #(do\n                              (reset! (::showing-menu s) false)\n                              (when (fn? will-close)\n                                (will-close))\n                              (activity-actions/mark-unread entity-data)\n                              (when (fn? mark-unread-cb)\n                                (mark-unread-cb)))}\n                \"Mark as unread\"])\n            (when (or is-mobile?\n                      (not external-follow))\n              (if follow-link\n                [:li.follow\n                  {:class (when-not (or is-mobile? (not external-bookmark)) \"bottom-rounded bottom-margin\")\n                   :on-click #(do\n                                (reset! (::showing-menu s) false)\n                                (when (fn? will-close)\n                                  (will-close))\n                                (activity-actions/entry-follow (:uuid entity-data)))}\n                  \"Follow\"]\n                (when unfollow-link\n                  [:li.unfollow\n                    {:class (when-not (or is-mobile? (not external-bookmark)) \"bottom-rounded bottom-margin\")\n                     :on-click #(do\n                                  (reset! (::showing-menu s) false)\n                                  (when (fn? will-close)\n                                    (will-close))\n                                  (activity-actions/entry-unfollow (:uuid entity-data)))}\n                    \"Mute\"])))\n            (when (or is-mobile?\n                      (not external-bookmark))\n              (if remove-bookmark-link\n                [:li.remove-bookmark.bottom-rounded.bottom-margin\n                  {:ref \"more-menu-remove-bookmark-bt\"\n                   :on-click #(do\n                                (reset! (::showing-menu s) false)\n                                (when (fn? will-close)\n                                  (will-close))\n                                (activity-actions/remove-bookmark entity-data remove-bookmark-link))}\n                  \"Remove bookmark\"]\n                (when add-bookmark-link\n                  [:li.add-bookmark.bottom-rounded.bottom-margin\n                    {:ref \"more-menu-add-bookmark-bt\"\n                     :data-container \"body\"\n                     :on-click #(do\n                                  (reset! (::showing-menu s) false)\n                                  (when (fn? will-close)\n                                    (will-close))\n                                  (activity-actions/add-bookmark entity-data add-bookmark-link))}\n                    \"Bookmark\"])))\n            (when can-react?\n              [:li.react.top-rounded\n                {:on-click #(do\n                              (reset! (::showing-menu s) false)\n                              (when (fn? will-close)\n                                (will-close))\n                              (when (fn? react-cb)\n                                (react-cb)))\n                 :disabled react-disabled?}\n                \"React\"])\n            (when can-reply?\n              [:li.reply\n                {:on-click #(do\n                              (reset! (::showing-menu s) false)\n                              (when (fn? will-close)\n                                (will-close))\n                              (when (fn? reply-cb)\n                                (reply-cb)))}\n                \"Reply\"])\n            (when can-comment-share?\n              [:li.comment-share.bottom-rounded.bottom-margin\n                {:on-click #(do\n                              (reset! (::showing-menu s) false)\n                              (when (fn? will-close)\n                                (will-close))\n                              (when (fn? comment-share-cb)\n                                (comment-share-cb)))}\n                \"Copy link\"])\n            (when show-inbox?\n              [:li.dismiss.top-rounded.bottom-rounded\n                {:on-click #(do\n                              (reset! (::showing-menu s) false)\n                              (when (fn? will-close)\n                                (will-close))\n                              (activity-actions/inbox-dismiss (:uuid entity-data))\n                              (when (seq current-activity-id)\n                                (nav-actions/dismiss-post-modal %)))}\n                \"Dismiss\"])])\n        (when (and external-share\n                   share-link)\n          [:button.mlb-reset.more-menu-share-bt\n            {:type \"button\"\n             :ref \"tile-menu-share-bt\"\n             :class (when (or follow-link\n                              unfollow-link\n                              (and external-bookmark\n                                   (or add-bookmark-link\n                                       remove-bookmark-link))) \"has-next-bt\")\n             :on-click #(do\n                          (reset! (::showing-menu s) false)\n                          (when (fn? will-close)\n                            (will-close))\n                          (activity-actions/activity-share-show entity-data share-container-id))\n             :data-toggle (if is-mobile? \"\" \"tooltip\")\n             :data-container \"body\"\n             :data-placement (or tooltip-position \"top\")\n             :data-delay \"{\\\"show\\\":\\\"100\\\", \\\"hide\\\":\\\"0\\\"}\"\n             :title \"Share\"}])\n        (when external-follow\n          (if follow-link\n            [:button.mlb-reset.more-menu-entry-follow-bt\n            {:type \"button\"\n             :ref \"more-menu-entry-follow-bt\"\n             :key \"more-menu-entry-follow-bt\"\n             :class (when (and external-bookmark\n                               (or add-bookmark-link\n                                   remove-bookmark-link)) \"has-next-bt\")\n             :on-click #(do\n                          (reset! (::showing-menu s) false)\n                          (when (fn? will-close)\n                            (will-close))\n                          (activity-actions/entry-follow (:uuid entity-data)))\n             :data-toggle (if is-mobile? \"\" \"tooltip\")\n             :data-placement (or tooltip-position \"top\")\n             :data-container \"body\"\n             :title \"Get notified about new post activity\"}]\n            (when unfollow-link\n              [:button.mlb-reset.more-menu-entry-unfollow-bt\n                {:type \"button\"\n                 :ref \"more-menu-entry-unfollow-bt\"\n                 :key \"more-menu-entry-unfollow-bt\"\n                 :class (when (and external-bookmark\n                                   (or add-bookmark-link\n                                       remove-bookmark-link)) \"has-next-bt\")\n                 :on-click #(do\n                              (reset! (::showing-menu s) false)\n                              (when (fn? will-close)\n                                (will-close))\n                              (activity-actions/entry-unfollow (:uuid entity-data)))\n                 :data-toggle (if is-mobile? \"\" \"tooltip\")\n                 :data-placement (or tooltip-position \"top\")\n                 :data-container \"body\"\n                 :title \"Don't show replies to this update\" ; \"Ignore future activity unless mentioned\"\n                 }])))\n        (when external-bookmark\n          (if remove-bookmark-link\n            [:button.mlb-reset.more-menu-remove-bookmark-bt\n              {:type \"button\"\n               :ref \"more-menu-remove-bookmark-bt\"\n               :class (when show-inbox? \"has-next-bt\")\n               :on-click #(do\n                            (reset! (::showing-menu s) false)\n                            (when (fn? will-close)\n                              (will-close))\n                            (activity-actions/remove-bookmark entity-data remove-bookmark-link))\n               :data-toggle (if is-mobile? \"\" \"tooltip\")\n               :data-placement (or tooltip-position \"top\")\n               :data-container \"body\"\n               :title \"Remove bookmark\"}\n              remove-bookmark-title]\n            (when add-bookmark-link\n              [:div.more-menu-add-bookmark-bt-container\n                [:button.mlb-reset.more-menu-add-bookmark-bt\n                  {:type \"button\"\n                   :ref \"more-menu-add-bookmark-bt\"\n                   :class (when show-inbox? \"has-next-bt\")\n                   :on-click #(do\n                                (reset! (::showing-menu s) false)\n                                (when (fn? will-close)\n                                  (will-close))\n                                (activity-actions/add-bookmark entity-data add-bookmark-link))\n                   :data-toggle (if is-mobile? \"\" \"tooltip\")\n                   :data-placement (or tooltip-position \"top\")\n                   :data-container \"body\"\n                   :title \"Bookmark\"}]])))\n        (when show-inbox?\n          [:button.mlb-reset.more-menu-inbox-dismiss-bt\n            {:type \"button\"\n             :ref \"more-menu-inbox-dismiss-bt\"\n             :on-click #(do\n                          (reset! (::showing-menu s) false)\n                          (when (fn? will-close)\n                            (will-close))\n                          (activity-actions/inbox-dismiss (:uuid entity-data))\n                          (when (seq current-activity-id)\n                            (nav-actions/dismiss-post-modal %)))\n             :data-toggle (if is-mobile? \"\" \"tooltip\")\n             :data-placement (or tooltip-position \"top\")\n             :data-container \"body\"\n             :title \"Dismiss\"}])])))\n"]}