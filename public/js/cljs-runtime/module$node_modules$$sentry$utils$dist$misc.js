shadow$provide.module$node_modules$$sentry$utils$dist$misc=function(global$jscomp$0,require,module,exports){function isNodeEnv(){return"[object process]"===Object.prototype.toString.call("undefined"!==typeof process?process:0)}function getGlobalObject(){return isNodeEnv()?global$jscomp$0:"undefined"!==typeof window?window:"undefined"!==typeof self?self:fallbackGlobalObject}var process=require("module$node_modules$process$browser");Object.defineProperty(exports,"__esModule",{value:!0});var is_1=require("module$node_modules$$sentry$utils$dist$is"),
string_1=require("module$node_modules$$sentry$utils$dist$string");exports.dynamicRequire=function(mod,request){return mod.require(request)};exports.isNodeEnv=isNodeEnv;var fallbackGlobalObject={};exports.getGlobalObject=getGlobalObject;exports.uuid4=function(){var global=getGlobalObject(),crypto=global.crypto||global.msCrypto;return void 0!==crypto&&crypto.getRandomValues?(global=new Uint16Array(8),crypto.getRandomValues(global),global[3]=global[3]&4095|16384,global[4]=global[4]&16383|32768,crypto=
function(num){for(num=num.toString(16);4>num.length;)num="0"+num;return num},crypto(global[0])+crypto(global[1])+crypto(global[2])+crypto(global[3])+crypto(global[4])+crypto(global[5])+crypto(global[6])+crypto(global[7])):"xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=16*Math.random()|0;return("x"===c?r:r&3|8).toString(16)})};exports.parseUrl=function(url){return url?(url=url.match(/^(([^:/?#]+):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/))?{host:url[4],path:url[5],protocol:url[2],
relative:url[5]+(url[6]||"")+(url[8]||"")}:{}:{}};exports.getEventDescription=function(event){if(event.message)return event.message;if(event.exception&&event.exception.values&&event.exception.values[0]){var exception=event.exception.values[0];return exception.type&&exception.value?exception.type+": "+exception.value:exception.type||exception.value||event.event_id||"\x3cunknown\x3e"}return event.event_id||"\x3cunknown\x3e"};exports.consoleSandbox=function(callback){var global=getGlobalObject();if(!("console"in
global))return callback();var originalConsole=global.console,wrappedLevels={};"debug info warn error log assert".split(" ").forEach(function(level){level in global.console&&originalConsole[level].__sentry_original__&&(wrappedLevels[level]=originalConsole[level],originalConsole[level]=originalConsole[level].__sentry_original__)});callback=callback();Object.keys(wrappedLevels).forEach(function(level){originalConsole[level]=wrappedLevels[level]});return callback};exports.addExceptionTypeValue=function(event,
value,type){event.exception=event.exception||{};event.exception.values=event.exception.values||[];event.exception.values[0]=event.exception.values[0]||{};event.exception.values[0].value=event.exception.values[0].value||value||"";event.exception.values[0].type=event.exception.values[0].type||type||"Error"};exports.addExceptionMechanism=function(event,mechanism){void 0===mechanism&&(mechanism={});try{event.exception.values[0].mechanism=event.exception.values[0].mechanism||{},Object.keys(mechanism).forEach(function(key){event.exception.values[0].mechanism[key]=
mechanism[key]})}catch(_oO){}};exports.getLocationHref=function(){try{return document.location.href}catch(oO){return""}};exports.htmlTreeAsString=function(elem$jscomp$0){try{for(var out=[],height=0,len=0,nextStr=void 0;elem$jscomp$0&&5>height++;){var i=void 0,attr=void 0,key=void 0,classes=void 0,className=void 0,elem=elem$jscomp$0,out$jscomp$0=[];if(elem&&elem.tagName){out$jscomp$0.push(elem.tagName.toLowerCase());elem.id&&out$jscomp$0.push("#"+elem.id);if((className=elem.className)&&is_1.isString(className))for(classes=
className.split(/\s+/),i=0;i<classes.length;i++)out$jscomp$0.push("."+classes[i]);classes=["type","name","title","alt"];for(i=0;i<classes.length;i++)key=classes[i],(attr=elem.getAttribute(key))&&out$jscomp$0.push("["+key+'\x3d"'+attr+'"]');nextStr=out$jscomp$0.join("")}else nextStr="";if("html"===nextStr||1<height&&80<=len+3*out.length+nextStr.length)break;out.push(nextStr);len+=nextStr.length;elem$jscomp$0=elem$jscomp$0.parentNode}return out.reverse().join(" \x3e ")}catch(_oO){return"\x3cunknown\x3e"}};
var INITIAL_TIME=Date.now(),prevNow=0,performanceFallback={now:function(){var now=Date.now()-INITIAL_TIME;now<prevNow&&(now=prevNow);return prevNow=now},timeOrigin:INITIAL_TIME};exports.crossPlatformPerformance=function(){if(isNodeEnv())try{return module.require("perf_hooks").performance}catch(_){return performanceFallback}var performance=getGlobalObject().performance;if(!performance||!performance.now)return performanceFallback;void 0===performance.timeOrigin&&(performance.timeOrigin=performance.timing&&
performance.timing.navigationStart||INITIAL_TIME);return performance}();exports.timestampWithMs=function(){return(exports.crossPlatformPerformance.timeOrigin+exports.crossPlatformPerformance.now())/1E3};var SEMVER_REGEXP=/^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/;exports.parseSemver=function(input){input=input.match(SEMVER_REGEXP)||[];var major=parseInt(input[1],
10),minor=parseInt(input[2],10),patch=parseInt(input[3],10);return{buildmetadata:input[5],major:isNaN(major)?void 0:major,minor:isNaN(minor)?void 0:minor,patch:isNaN(patch)?void 0:patch,prerelease:input[4]}};exports.parseRetryAfterHeader=function(now,header){if(!header)return 6E4;var headerDelay=parseInt(""+header,10);if(!isNaN(headerDelay))return 1E3*headerDelay;header=Date.parse(""+header);return isNaN(header)?6E4:header-now};exports.getFunctionName=function(fn){try{return fn&&"function"===typeof fn?
fn.name||"\x3canonymous\x3e":"\x3canonymous\x3e"}catch(e){return"\x3canonymous\x3e"}};exports.addContextToFrame=function(lines,frame,linesOfContext){void 0===linesOfContext&&(linesOfContext=5);var maxLines=lines.length,sourceLine=Math.max(Math.min(maxLines,(frame.lineno||0)-1),0);frame.pre_context=lines.slice(Math.max(0,sourceLine-linesOfContext),sourceLine).map(function(line){return string_1.snipLine(line,0)});frame.context_line=string_1.snipLine(lines[Math.min(maxLines-1,sourceLine)],frame.colno||
0);frame.post_context=lines.slice(Math.min(sourceLine+1,maxLines),sourceLine+1+linesOfContext).map(function(line){return string_1.snipLine(line,0)})}}
//# sourceMappingURL=module$node_modules$$sentry$utils$dist$misc.js.map
