{"version":3,"sources":["oc/web/components/invite_picker_modal.cljs"],"mappings":";AAYA,AAAA,AAAAA,AAAA,AAAWG,AAoBRG;AApBH,AAAA,AAAA,AAqBQU,AAAS,AAAA,AAACG,AAAUb;AACpBc,AAAU,AAAA,AAACD,AAAUb;AACrBe,AAAkB,AAAA,AAACF,AAAUb;AAvBrC,AAAA,AAAAL,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AA0BmBqB;AA1BnB,AAgCwB,AAAA,AAACP;AAhCzB,AAAA,AAAA,AAAAd,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA;AAAA,AAsCwB,AAAA,AAACc;AAtCzB,AAAA,AAAA,AA0Cc,AAAAQ,AACI,AAAA,AAAA,AAAA,AAAA,AAAIH,AAAsBI;AAD9B,AAAA,AAAAD;AAAAA;;AAAA,AAAAA,AAGI,AAAA,AAAmBH;AAHvB,AAAA,AAAAG;AAAAA;;AAKI,AAAA,AAACX,AAAE,AAAA,AAACa;;;AA/CtB,AAAAxB,AAAA,AAAA,AAAA;AAAA,AAiD0B,AAAA,AAACc;AAjD3B,AAAA,AAAA,AAAAb,AAmDY,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAM,AAAA,AAAA,AAAIkB,AAAmBM;AAA7B,AAEgB,AAACC,AAAqBP,AAAUC,AAAkB,AAAA,AAAK,AAACO;AArDpF,AAAA1B,AAmDY,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAKF,AAAA,AAAA,AAAM,AAAA,AAACU,AAAE,AAAA,AAAOS,AACd,AAACQ,AAAAA,AAAAA;AAzDb,AAAA,AAAA,AAEEzB,AACA,AAAA,AAACC,AACD,AAAA,AAACA,AACD,AAAA,AAACA,AACD,AAAA,AAACA,AACD,AAAA,AAACA,AACY,AAAKC;AAAL,AACX,AAAA,AAAAC,AAAMC,AAAc,AAAA,AAACC,AAAYH;AAAjC,AAAAC,AACMG,AAA0B,AAAA,AAACD,AAAYH;AAD7C,AAEE,AAAUI;AAAV;AAAA,AACE,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC;;AACD,AAAM,AAAK,AAAA,AAACC,AAAE,AAAA,AAAeJ,AAClB,AAAAK,AAAiB,AAAA,AAASL;AAA1BM,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAAAD,AAAAC,AAAAD;AADL;AAAN,AAEE,AAAA,AAACE;;AAFH;;;AAGJ,AAAA,AAAAR,AAAMS,AAAU,AAAA,AAACP,AAAYH;AAA7B,AACE,AAAA,AAACW,AAAoBD;;AACrB,AAACE;;AACHZ;AAnBJ","names":["rum.core/build-defcs","js/React.createElement","sablono.interpreter/interpret","oc.web.components.invite-picker-modal/invite-picker-modal","rum.core/reactive","org.martinklepsch.derivatives.drv","s","cljs.core/deref","query-params","org.martinklepsch.derivatives/get-ref","invite-add-slack-checked","oc.web.dispatcher/dispatch!","cljs.core._EQ_","G__44781","fexpr__44780","oc.web.actions.nav-sidebar/show-org-settings","org-data","oc.web.actions.org.get_org","oc.web.actions.team/teams-get","org.martinklepsch.derivatives/react","team-data","current-user-data","oc.web.actions.nav-sidebar/close-all-panels","or__4126__auto__","cljs.core/count","oc.web.lib.jwt/get-key","oc.web.lib.jwt/is-admin?","oc.web.actions.org.bot_auth","oc.web.router/get-token","oc.web.components.ui.email-domains/email-domains"],"sourcesContent":["(ns oc.web.components.invite-picker-modal\n  (:require [rum.core :as rum]\n            [org.martinklepsch.derivatives :as drv]\n            [oc.web.lib.jwt :as jwt]\n            [oc.web.router :as router]\n            [oc.web.dispatcher :as dis]\n            [oc.web.actions.org :as org-actions]\n            [oc.web.actions.team :as team-actions]\n            [oc.web.actions.nav-sidebar :as nav-actions]\n            [oc.web.components.ui.email-domains :refer (email-domains)]))\n\n\n(rum/defcs invite-picker-modal <\n  ;; Mixins\n  rum/reactive\n  (drv/drv :query-params)\n  (drv/drv :org-data)\n  (drv/drv :team-data)\n  (drv/drv :current-user-data)\n  (drv/drv :invite-add-slack-checked)\n  {:will-mount (fn [s]\n    (let [query-params @(drv/get-ref s :query-params)\n          invite-add-slack-checked @(drv/get-ref s :invite-add-slack-checked)]\n      (when-not invite-add-slack-checked\n        (dis/dispatch! [:input [:invite-add-slack-checked] true])\n        (when (and (= (:org-settings query-params) \"invite-picker\")\n                   (#{\"bot\" \"team\"} (:access query-params)))\n          (nav-actions/show-org-settings :invite-slack))))\n    (let [org-data @(drv/get-ref s :org-data)]\n      (org-actions/get-org org-data true)\n      (team-actions/teams-get))\n    s)}\n  [s]\n  (let [org-data (drv/react s :org-data)\n        team-data (drv/react s :team-data)\n        current-user-data (drv/react s :current-user-data)]\n    [:div.invite-picker-modal\n      [:button.mlb-reset.modal-close-bt\n        {:on-click nav-actions/close-all-panels}]\n      [:div.invite-picker\n        [:div.invite-picker-header\n          [:div.invite-picker-header-title\n            \"Invite people\"]\n          [:button.mlb-reset.cancel-bt\n            {:on-click #(nav-actions/show-org-settings nil)}\n            \"Back\"]]\n        [:div.invite-picker-body\n          [:div.invite-picker-body-description\n            \"Ready to share your updates? Invite your team!\"]\n          [:button.mlb-reset.invite-email-bt\n            {:on-click #(nav-actions/show-org-settings :invite-email)}\n            \"Invite via email\"]\n          ;; Show invite via Slack if team has a bot, or if the team has a Slack org associated\n          ;; or if the user logged in via Slack\n          (if (or ;; if team has at least one slack org associated\n                  (-> team-data :slack-orgs count pos?)\n                  ;; if team has a bot installed\n                  (:can-slack-invite team-data)\n                  ;; if user signed in via Slack\n                  (= (jwt/get-key :auth-source) \"slack\"))\n            [:button.mlb-reset.invite-slack-bt\n              {:on-click #(nav-actions/show-org-settings :invite-slack)}\n              \"Invite via Slack\"]\n            (when (-> team-data :team-id jwt/is-admin?)\n              [:button.mlb-reset.invite-slack-bt\n                {:on-click #(org-actions/bot-auth team-data current-user-data (str (router/get-token) \"?org-settings=invite-picker\"))}\n                [:span.disabled \"Invite via Slack\"]\n                [:span.enabled \"(add Slack)\"]]))\n          (when (= (:role current-user-data) :admin)\n            (email-domains))]]]))"]}