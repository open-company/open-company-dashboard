{
"version":3,
"file":"module$node_modules$react_virtualized$dist$commonjs$InfiniteLoader$InfiniteLoader.js",
"lineCount":13,
"mappings":"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",
"sources":["node_modules/react-virtualized/dist/commonjs/InfiniteLoader/InfiniteLoader.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_virtualized$dist$commonjs$InfiniteLoader$InfiniteLoader\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nexports.isRangeVisible = isRangeVisible;\nexports.scanForUnloadedRanges = scanForUnloadedRanges;\nexports.forceUpdateReactVirtualizedComponent = forceUpdateReactVirtualizedComponent;\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _createCallbackMemoizer = require('../utils/createCallbackMemoizer');\n\nvar _createCallbackMemoizer2 = _interopRequireDefault(_createCallbackMemoizer);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\nvar InfiniteLoader = function (_React$PureComponent) {\n  (0, _inherits3.default)(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    (0, _classCallCheck3.default)(this, InfiniteLoader);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (InfiniteLoader.__proto__ || (0, _getPrototypeOf2.default)(InfiniteLoader)).call(this, props, context));\n\n    _this._loadMoreRowsMemoizer = (0, _createCallbackMemoizer2.default)();\n\n    _this._onRowsRendered = _this._onRowsRendered.bind(_this);\n    _this._registerChild = _this._registerChild.bind(_this);\n    return _this;\n  }\n\n  (0, _createClass3.default)(InfiniteLoader, [{\n    key: 'resetLoadMoreRowsCache',\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = (0, _createCallbackMemoizer2.default)();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n\n\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: '_loadUnloadedRanges',\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n\n\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: '_onRowsRendered',\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: '_doStuff',\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _props = this.props,\n          isRowLoaded = _props.isRowLoaded,\n          minimumBatchSize = _props.minimumBatchSize,\n          rowCount = _props.rowCount,\n          threshold = _props.threshold;\n\n\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      });\n\n      // For memoize comparison\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, (0, _toConsumableArray3.default)(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: { squashedUnloadedRanges: squashedUnloadedRanges }\n      });\n    }\n  }, {\n    key: '_registerChild',\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n  return InfiniteLoader;\n}(React.PureComponent);\n\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\nInfiniteLoader.defaultProps = {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n};\nexports.default = InfiniteLoader;\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: _propTypes2.default.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: _propTypes2.default.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: _propTypes2.default.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: _propTypes2.default.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: _propTypes2.default.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: _propTypes2.default.number.isRequired\n} : {};\nfunction isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\nfunction scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n\n  var unloadedRanges = [];\n\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({ index: index });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  }\n\n  // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({ index: _index })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  }\n\n  // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({ index: _index2 })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\nfunction forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","isRangeVisible","_ref4","lastRenderedStartIndex","stopIndex","startIndex","lastRenderedStopIndex","scanForUnloadedRanges","_ref5","isRowLoaded","minimumBatchSize","rowCount","unloadedRanges","rangeStartIndex","rangeStopIndex","index","loaded","push","potentialStopIndex","Math","min","max","_index","length","firstUnloadedRange","_index2","forceUpdateReactVirtualizedComponent","component","currentIndex","arguments","undefined","recomputeSize","recomputeGridSize","recomputeRowHeights","call","forceUpdate","Object","defineProperty","value","_toConsumableArray2","_toConsumableArray3","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","React","_interopRequireWildcard","newObj","key","prototype","hasOwnProperty","_react","_propTypes","_propTypes2","_createCallbackMemoizer","_createCallbackMemoizer2","InfiniteLoader","_React$PureComponent","props","context","_this","__proto__","_loadMoreRowsMemoizer","_onRowsRendered","bind","_registerChild","resetLoadMoreRowsCache","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","render","children","onRowsRendered","registerChild","_loadUnloadedRanges","_this2","loadMoreRows","forEach","unloadedRange","promise","then","_registeredChild","_ref","_ref2","_this3","_props","threshold","squashedUnloadedRanges","concat","apply","map","_ref3","callback","indices","registeredChild","PureComponent","defaultProps","propTypes","func","isRequired","number"]
}
