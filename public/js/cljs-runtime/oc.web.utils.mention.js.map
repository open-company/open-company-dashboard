{"version":3,"sources":["oc/web/utils/mention.cljs"],"mappings":";AAEA,AAAA,AAAMA,AAAaC;AAAnB,AACE,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAMC,AAGmC,AAAKC,AAASC,AAAqBC;AAAnC,AACC,AAASC,AACR,AAAgBC,AACfC,AACA,AAAA,AAAA,AAAA,AAAA,AAACC,AAA6BL,AACb,AAACK,AAAQR,AACOI,AAClCF;AAV3C,AAAA,AAAA;AAAA,AAYE,AAAAO,AAAe,AAACD,AAAQP;;AAE5B,AAAA,AAAOS,AAAqBC;AAA5B,AACE,AAAA,AAAMC,AAAoB,AAAA,AAAqBD;AACzCE,AAAsB,AAACC,AAAI,AAAA,AAACC,AAAkB,AAACC,AAAK,AAAA,AAAcL;AADxE,AAEE,AAAA,AAAAM,AAACC;AAAD,AAAS,AAAI,AAAAD,AAAA,AAAS,AAAAA,AAAA,AAACE;AAAU,AAACC,AAAOP,AAAsBD;;AAEnE,AAAA,AAAOS,AAAyBC;AAAhC,AACE,AAACC,AAAM,AAAA,AAAAC,AAACT;AAAD,AAAM,AAAAS,AAAA,AAACC,AAAyB,AAAAD,AAACd;AAAwBY;;AAElE,AAAA,AAAMI,AAAoBJ;AAA1B,AACE,AAAMK,AAAY,AAAI,AAACC,AAAKN,AAAO,AAACN,AAAKM,AAAOA;AAAhD,AACE,AAACD,AAAwB,AAAA,AAAAQ,AAACC;AAAD,AAAU,AACK,AAACC,AAAI,AAAA,AAAAF,AAEL,AAAI,AAAA,AAACV,AAAE,AAAA,AAAAU,AACH,AAAA,AAACV,AAAE,AAAA,AAAAU;AAC9CF","names":["oc.web.utils.mention/mention-ext","users-list","mention-props","panel-el","current-mention-text","select-mention-callback","js/ReactDOM","js/React","js/CustomizedTagComponent","cljs.core/clj->js","js/TCMention","oc.web.utils.mention/get-slack-usernames","user","slack-display-name","slack-users-usernames","cljs.core/vec","cljs.core.map","cljs.core/vals","p1__48197#","cljs.core.remove","cljs.core._EQ_","cljs.core.concat","oc.web.utils.mention/compact-slack-usernames","users","cljs.core.doall","p1__48198#","cljs.core.assoc","oc.web.utils.mention/users-for-mentions","fixed-users","cljs.core/map?","p1__48199#","cljs.core/filterv","cljs.core/seq"],"sourcesContent":["(ns oc.web.utils.mention)\n\n(defn mention-ext [users-list]\n  (let [mention-props {:tagName \"span\"\n                       :extraPanelClassName \"oc-mention-panel\"\n                       :extraTriggerClassNameMap {\"@\" \"oc-mention\"}\n                       :renderPanelContent (fn [panel-el current-mention-text select-mention-callback]\n                                            (.render js/ReactDOM\n                                             (.createElement js/React\n                                              js/CustomizedTagComponent\n                                              (clj->js {:currentMentionText current-mention-text\n                                                        :users (clj->js users-list)\n                                                        :selectMentionCallback select-mention-callback}))\n                                             panel-el))\n                       :activeTriggerList [\"@\"]}]\n    (js/TCMention. (clj->js mention-props))))\n\n(defn- get-slack-usernames [user]\n  (let [slack-display-name [(:slack-display-name user)]\n        slack-users-usernames (vec (map :display-name (vals (:slack-users user))))]\n    (remove #(or (nil? %) (= % \"-\")) (concat slack-users-usernames slack-display-name))))\n\n(defn- compact-slack-usernames [users]\n  (doall (map #(assoc % :slack-usernames (get-slack-usernames %)) users)))\n\n(defn users-for-mentions [users]\n  (let [fixed-users (if (map? users) (vals users) users)]\n    (compact-slack-usernames (filterv #(and ;; is a carrot user\n                                            (seq (:user-id %))\n                                            ;; is active\n                                            (or (= (:status %) \"active\")\n                                                (= (:status %) \"unverified\")))\n     fixed-users)))) "]}