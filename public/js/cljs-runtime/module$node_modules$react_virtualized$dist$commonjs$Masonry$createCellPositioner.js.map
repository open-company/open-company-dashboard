{
"version":3,
"file":"module$node_modules$react_virtualized$dist$commonjs$Masonry$createCellPositioner.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,gFAAf,CAAqG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG7IC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAA,CAAQI,OAAR,CAIAC,QAA6B,CAACC,IAAD,CAAO,CAWlCC,QAASA,eAAc,CAACC,KAAD,CAAQ,CAG7B,IADA,IAAIC,YAAc,CAAlB,CACSC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBC,aAApB,CAAkCC,MAAlC,CAA0CF,CAAA,EAA1C,CACMC,aAAA,CAAcD,CAAd,CAAJ,CAAuBC,aAAA,CAAcF,WAAd,CAAvB,GACEA,WADF,CACgBC,CADhB,CAKEG,EAAAA,CAAOJ,WAAPI,EAAsBC,WAAtBD,CAAoCE,MAApCF,CACJ,KAAIG,IAAML,aAAA,CAAcF,WAAd,CAANO,EAAoC,CAExCL,cAAA,CAAcF,WAAd,CAAA,CAA6BO,GAA7B,CAAmCC,iBAAA,CAAkBC,SAAlB,CAA4BV,KAA5B,CAAnC;AAAwEO,MAExE,OAAO,CACLF,KAAMA,CADD,CAELG,IAAKA,GAFA,CAdsB,CAoB/BG,QAASA,yBAAwB,EAAG,CAGlCR,aAAA,CAAgB,EAChB,KAAK,IAAID,EAAI,CAAb,CAAgBA,CAAhB,CAAoBU,WAApB,CAAiCV,CAAA,EAAjC,CACEC,aAAA,CAAcD,CAAd,CAAA,CAAmB,CALa,CA/BF,IAC9BO,kBAAoBX,IAApBW,CAAyBA,iBADK,CAE9BG,YAAcd,IAAdc,CAAmBA,WAFW,CAG9BN,YAAcR,IAAdQ,CAAmBA,WACnBO,KAAAA,CAAcf,IAAde,CAAmBN,MAHvB,KAIIA,OAAyBO,IAAAA,EAAhB,GAAAD,IAAA,CAA4B,CAA5B,CAAgCA,IAJ7C,CAMIV,cAAgB,IAAK,EAEzBQ,yBAAA,EAuCAZ,eAAA,CAAegB,KAAf,CARAA,QAAc,CAACC,MAAD,CAAS,CACrBJ,WAAA,CAAcI,MAAd,CAAqBJ,WACrBN,YAAA,CAAcU,MAAd,CAAqBV,WACrBC,OAAA,CAASS,MAAT,CAAgBT,MAEhBI,yBAAA,EALqB,CAUvB,OAAOZ,eAlD2B,CAFrBT;OAAA,CAAQ,qEAAR,CAR8H;",
"sources":["node_modules/react-virtualized/dist/commonjs/Masonry/createCellPositioner.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_virtualized$dist$commonjs$Masonry$createCellPositioner\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createCellPositioner;\n\nvar _Masonry = require('./Masonry');\n\nfunction createCellPositioner(_ref) {\n  var cellMeasurerCache = _ref.cellMeasurerCache,\n      columnCount = _ref.columnCount,\n      columnWidth = _ref.columnWidth,\n      _ref$spacer = _ref.spacer,\n      spacer = _ref$spacer === undefined ? 0 : _ref$spacer;\n\n  var columnHeights = void 0;\n\n  initOrResetDerivedValues();\n\n  function cellPositioner(index) {\n    // Find the shortest column and use it.\n    var columnIndex = 0;\n    for (var i = 1; i < columnHeights.length; i++) {\n      if (columnHeights[i] < columnHeights[columnIndex]) {\n        columnIndex = i;\n      }\n    }\n\n    var left = columnIndex * (columnWidth + spacer);\n    var top = columnHeights[columnIndex] || 0;\n\n    columnHeights[columnIndex] = top + cellMeasurerCache.getHeight(index) + spacer;\n\n    return {\n      left: left,\n      top: top\n    };\n  }\n\n  function initOrResetDerivedValues() {\n    // Track the height of each column.\n    // Layout algorithm below always inserts into the shortest column.\n    columnHeights = [];\n    for (var i = 0; i < columnCount; i++) {\n      columnHeights[i] = 0;\n    }\n  }\n\n  function reset(params) {\n    columnCount = params.columnCount;\n    columnWidth = params.columnWidth;\n    spacer = params.spacer;\n\n    initOrResetDerivedValues();\n  }\n\n  cellPositioner.reset = reset;\n\n  return cellPositioner;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","default","createCellPositioner","_ref","cellPositioner","index","columnIndex","i","columnHeights","length","left","columnWidth","spacer","top","cellMeasurerCache","getHeight","initOrResetDerivedValues","columnCount","_ref$spacer","undefined","reset","params"]
}
