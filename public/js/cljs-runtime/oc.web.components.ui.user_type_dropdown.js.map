{"version":3,"sources":["oc/web/components/ui/user_type_dropdown.cljs"],"mappings":";AAOA,AAAA,AAAAA,AAAA,AAAAC,AAAUS;AAAV,AAAA,AAAAR,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AACWU;AADX,AAAAN,AAAAJ,AAAA,AACmBW;AADnB,AAAAP,AAAAJ,AAAA,AAC6BY;AAD7B,AAAAR,AAAAJ,AAAA,AACuCa;AADvC,AAAAT,AAAAJ,AAAA,AACkDc;AADlD,AAAAV,AAAAJ,AAAA,AAC4De;AAD5D,AAAA,AAAA,AAEQC,AAAiB,AAAA,AAAiBN;AAF1C,AAAA,AAAAL,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAKaW,AAIMD,AACX,AAACE,AAAe,AAACC,AAA4BP,AAE3BK;AAZ1B,AAcsB,AAAM,AAACG,AAAIP;AAAX,AACE,AAAA,AAAA,AAACA,AAAAA,AAAAA;;AADH;;AAdtB,AAAAL,AAAA,AAAA,AAAA,AAAAF,AAAA,AAAA,AAAA,AAgBkB,AAAA,AAAA,AAAA,AAAM,AAAA,AAACe,AAAET;AAhB3B,AAmBsB,AAAM,AAACQ,AAAIP;AAAX,AACE,AAAA,AAAA,AAACA,AAAAA,AAAAA;;AADH;;AAnBtB,AAAAL,AAAA,AAAA,AAAA,AAAAD,AAqBkB,AAAA,AAAA,AAAA,AAAM,AAAA,AAACc,AAAET,AAEnB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAUE;AAAV,AAEgB,AAAM,AAACM,AAAIP;AAAX,AACA,AAAA,AAAA,AAACA,AAAAA,AAAAA;;AADD;;AAzBxB,AAAAN,AAuBQ,AAAA,AAIY,AAAA,AAAA,AAAA,AAAM,AAAA,AAACc,AAAET,AAErB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAM,AAACQ,AAAIL;AAAX,AAEgB,AAACA,AAAAA,AAAAA;AAFjB,AAAA;AA7BR,AAAA,AAA+BL","names":["rum.core/build-defc","p__39838","map__39839","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","js/React.createElement","sablono.interpreter/interpret","sablono.util/join-classes","oc.web.components.ui.user-type-dropdown/user-type-dropdown","rum.core/static","user-id","user-type","on-change","hide-admin","on-remove","disabled?","user-dropdown-id","cuerdas.core/capital","oc.web.utils.user/user-role-string","cljs.core/fn?","cljs.core._EQ_"],"sourcesContent":["(ns oc.web.components.ui.user-type-dropdown\n  \"\"\n  (:require [rum.core :as rum]\n            [cuerdas.core :as string]\n            [dommy.core :as dommy :refer-macros (sel1)]\n            [oc.web.utils.user :as user-utils]))\n\n(rum/defc user-type-dropdown < rum/static\n  [{:keys [user-id user-type on-change hide-admin on-remove disabled?]}]\n  (let [user-dropdown-id (str \"dropdown-\" user-id)]\n    [:div.dropdown\n      [:button.btn-reset.user-type-btn.dropdown-toggle.oc-input\n        {:id user-dropdown-id\n         :data-toggle \"dropdown\"\n         :aria-haspopup true\n         :aria-expanded false\n         :disabled disabled?}\n        (string/capital (user-utils/user-role-string user-type))]\n      [:ul.dropdown-menu.user-type-dropdown-menu\n        {:aria-labelledby user-dropdown-id}\n        [:li\n          {:on-click #(when (fn? on-change)\n                        (on-change :viewer))\n           :class (when (= user-type :viewer) \"selected\")}\n          \"Viewer\"]\n        [:li\n          {:on-click #(when (fn? on-change)\n                        (on-change :author))\n           :class (when (= user-type :author) \"selected\")}\n          \"Contributor\"]\n        (when-not hide-admin\n          [:li\n            {:on-click #(when (fn? on-change)\n                        (on-change :admin))\n             :class (when (= user-type :admin) \"selected\")}\n            \"Admin\"])\n        (when (fn? on-remove)\n          [:li.remove-li\n            {:on-click #(on-remove)}\n            \"Remove User\"])]]))"]}