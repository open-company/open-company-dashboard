shadow$provide.module$node_modules$react_virtualized$dist$commonjs$Grid$defaultCellRangeRenderer=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=function(_ref){var cellCache=_ref.cellCache,cellRenderer=_ref.cellRenderer,columnSizeAndPositionManager=_ref.columnSizeAndPositionManager,columnStartIndex=_ref.columnStartIndex,columnStopIndex=_ref.columnStopIndex,deferredMeasurementCache=_ref.deferredMeasurementCache,horizontalOffsetAdjustment=
_ref.horizontalOffsetAdjustment,isScrolling=_ref.isScrolling,isScrollingOptOut=_ref.isScrollingOptOut,parent=_ref.parent,rowSizeAndPositionManager=_ref.rowSizeAndPositionManager,rowStartIndex=_ref.rowStartIndex,rowStopIndex=_ref.rowStopIndex,styleCache=_ref.styleCache,verticalOffsetAdjustment=_ref.verticalOffsetAdjustment,visibleColumnIndices=_ref.visibleColumnIndices;_ref=_ref.visibleRowIndices;var renderedCells=[],areOffsetsAdjusted=columnSizeAndPositionManager.areOffsetsAdjusted()||rowSizeAndPositionManager.areOffsetsAdjusted();
for(areOffsetsAdjusted=!isScrolling&&!areOffsetsAdjusted;rowStartIndex<=rowStopIndex;rowStartIndex++)for(var rowDatum=rowSizeAndPositionManager.getSizeAndPositionOfCell(rowStartIndex),columnIndex=columnStartIndex;columnIndex<=columnStopIndex;columnIndex++){var columnDatum=columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex),isVisible=columnIndex>=visibleColumnIndices.start&&columnIndex<=visibleColumnIndices.stop&&rowStartIndex>=_ref.start&&rowStartIndex<=_ref.stop,key=rowStartIndex+
"-"+columnIndex;areOffsetsAdjusted&&styleCache[key]?columnDatum=styleCache[key]:deferredMeasurementCache&&!deferredMeasurementCache.has(rowStartIndex,columnIndex)?columnDatum={height:"auto",left:0,position:"absolute",top:0,width:"auto"}:(columnDatum={height:rowDatum.size,left:columnDatum.offset+horizontalOffsetAdjustment,position:"absolute",top:rowDatum.offset+verticalOffsetAdjustment,width:columnDatum.size},styleCache[key]=columnDatum);isVisible={columnIndex:columnIndex,isScrolling:isScrolling,isVisible:isVisible,
key:key,parent:parent,rowIndex:rowStartIndex,style:columnDatum};!isScrollingOptOut&&!isScrolling||horizontalOffsetAdjustment||verticalOffsetAdjustment?key=cellRenderer(isVisible):(cellCache[key]||(cellCache[key]=cellRenderer(isVisible)),key=cellCache[key]);if(null!=key&&!1!==key){if(isVisible=key)isVisible.type&&isVisible.type.__internalCellMeasurerFlag&&(isVisible=isVisible.props.children),isVisible&&isVisible.props&&void 0===isVisible.props.style&&!0!==parent.__warnedAboutMissingStyle&&(parent.__warnedAboutMissingStyle=
!0,console.warn("Rendered cell should include style property for positioning."));renderedCells.push(key)}}return renderedCells};require("module$node_modules$react_virtualized$dist$commonjs$Grid$types")}
//# sourceMappingURL=module$node_modules$react_virtualized$dist$commonjs$Grid$defaultCellRangeRenderer.js.map
