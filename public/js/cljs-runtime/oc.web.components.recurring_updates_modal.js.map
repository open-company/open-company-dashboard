{"version":3,"sources":["oc/web/components/recurring_updates_modal.cljs"],"mappings":"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","names":["rum.core/build-defcs","js/React.createElement","cljs.core.into_array","iter__4529__auto__","s__40494","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__40496","cljs.core/chunk-buffer","i__40495","cljs.core/-nth","cljs.core/chunk-append","sablono.util/join-classes","sablono.interpreter/interpret","attrs40503","cljs.core.apply","cljs.core/map?","sablono.interpreter/attributes","sablono.normalize.merge_with_class","attrs40505","cljs.core/chunk-cons","cljs.core/chunk","iter__40493","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","attrs40513","oc.web.components.recurring-updates-modal/recurring-updates-modal","rum.core/reactive","org.martinklepsch.derivatives.drv","s","oc.web.actions.reminder/load-reminders-roster","oc.web.actions.reminder/load-reminders","reminders-data","org.martinklepsch.derivatives/react","reminders-list","is-tablet-or-mobile?","oc.web.lib.responsive/is-tablet-or-mobile?","oc.web.actions.nav-sidebar/close-all-panels","oc.web.actions.reminder/new-reminder","oc.web.actions.nav-sidebar/close-reminders","reminder","patch-link","oc.web.lib.utils.link_for","now-year","oc.web.lib.utils/js-date","next-send-date","oc.web.lib.utils.js_date","show-year","cljs.core.not_EQ_","oc.web.actions.reminder/edit-reminder","oc.lib.user.name_for","G__40502","G__40506","oc.web.components.ui.user-avatar/user-avatar-image","oc.web.lib.utils.get_week_day","oc.web.lib.utils.date_string","cljs.core/name","cljs.core/chunk-first"],"sourcesContent":["(ns oc.web.components.recurring-updates-modal\n  (:require [rum.core :as rum]\n            [clojure.string :as s]\n            [org.martinklepsch.derivatives :as drv]\n            [oc.lib.user :as user-lib]\n            [oc.web.dispatcher :as dis]\n            [oc.web.lib.utils :as utils]\n            [oc.web.lib.responsive :as responsive]\n            [oc.web.actions.nav-sidebar :as nav-actions]\n            [oc.web.actions.reminder :as reminder-actions]\n            [oc.web.components.ui.user-avatar :refer (user-avatar-image)]))\n\n(rum/defcs recurring-updates-modal <\n  rum/reactive\n  (drv/drv :reminders-data)\n  {:did-mount (fn [s]\n    (reminder-actions/load-reminders-roster)\n    (reminder-actions/load-reminders)\n    s)}\n  [s]\n  (let [reminders-data (drv/react s :reminders-data)\n        reminders-list (:items reminders-data)\n        is-tablet-or-mobile? (responsive/is-tablet-or-mobile?)]\n    [:div.recurring-updates-modal-container\n      [:button.mlb-reset.modal-close-bt\n        {:on-click nav-actions/close-all-panels}]\n      [:div.recurring-updates-modal\n        [:div.recurring-updates-modal-header\n          [:div.recurring-updates-modal-header-title\n            \"Recurring updates\"]\n          [:button.mlb-reset.new-recurring-update-bt\n            {:on-click reminder-actions/new-reminder}\n            \"New\"]\n          [:button.mlb-reset.cancel-bt\n            {:on-click nav-actions/close-reminders}\n            \"Back\"]]\n        (if (seq reminders-list)\n          [:div.recurring-updates-list\n            (for [reminder reminders-list\n                  :let [patch-link (utils/link-for (:links reminder) \"partial-update\")\n                        now-year (.getFullYear (utils/js-date))\n                        next-send-date (utils/js-date (:next-send reminder))\n                        show-year (not= now-year (.getFullYear next-send-date))]]\n              [:div.recurring-updates-list-item.group\n                {:key (str \"reminder-\" (:uuid reminder))\n                 :class (when patch-link \"editable-reminder\")\n                 :on-click #(when patch-link\n                              (reminder-actions/edit-reminder (:uuid reminder)))}\n                [:div.reminder-assignee\n                  {:title (user-lib/name-for (:assignee reminder))\n                   :data-toggle (when-not is-tablet-or-mobile? \"tooltip\")\n                   :data-placement \"top\"\n                   :data-container \"body\"\n                   :data-delay \"{\\\"show\\\":\\\"500\\\", \\\"hide\\\":\\\"0\\\"}\"}\n                  (user-avatar-image (:assignee reminder))]\n                [:div.reminder-data\n                  [:div.reminder-title\n                    (:headline reminder)]\n                  [:div.reminder-description\n                    (str\n                     (user-lib/name-for (:assignee reminder))\n                     \", \"\n                     (utils/get-week-day (.getDay next-send-date) true)\n                     \" \"\n                     (utils/date-string next-send-date [:short-month (when show-year :year)])\n                     \" (\" (name (:frequency reminder)) \")\")]]])]\n            [:div.recurring-updates-empty-list\n              [:div.recurring-updates-empty-list-title\n                \"Set up recurring updates\"]\n              [:div.recurring-updates-empty-list-desc\n                (str\n                 \"Wut reminds you when it's time to update your team. \"\n                 \"You can create reminders for yourself and others.\")]])]]))"]}