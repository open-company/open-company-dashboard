{"version":3,"sources":["oc/web/components/ui/media_video_modal.cljs"],"mappings":"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","names":["oc.web.components.ui.media-video-modal/media-video-modal-height","oc.web.components.ui.media-video-modal/youtube-regexp","oc.web.components.ui.media-video-modal/youtube-short-regexp","oc.web.components.ui.media-video-modal/vimeo-regexp","oc.web.components.ui.media-video-modal/loom-regexp","oc.web.components.ui.media-video-modal/get-video-data","url","yr","js/RegExp","yr2","vr","loomr","y-groups","y2-groups","v-groups","loom-groups","cljs.core.nth","or__4126__auto__","oc.web.components.ui.media-video-modal/get-vimeo-thumbnail-success","s","video","res","resp","thumbnail","video-data","cljs.core.assoc","dismiss-modal-cb","cljs.core/first","oc.web.dispatcher/dispatch!","oc.web.components.ui.media-video-modal/_retry","cljs.core.atom","oc.web.components.ui.media-video-modal/get-vimeo-thumbnail-retry","cljs.core.swap_BANG_","cljs.core/inc","oc.web.components.ui.media-video-modal/get-vimeo-thumbnail","p1__45793#","js/$","oc.web.components.ui.media-video-modal/valid-video-url?","trimmed-url","cuerdas.core.trim","cljs.core/seq","oc.web.components.ui.media-video-modal/video-add-click","cljs.core/deref","cljs.core._EQ_","rum.core/build-defcs","p__45795","map__45796","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","js/React.createElement","sablono.util/join-classes","sablono.interpreter/create-element","p1__45794#","oc.web.components.ui.media-video-modal/media-video-modal","rum.core/reactive","rum.core.local","org.martinklepsch.derivatives.drv","oc.web.mixins.ui/first-render-mixin","outer-container-selector","temp__5735__auto__","picker-el","js/document","dommy.core/selector","cljs.core.concat","cljs.core/reset!","video-field","rum.core/ref-node","fullscreen","dismiss-cb","offset-element-selector","current-user-data","org.martinklepsch.derivatives/react","valid-url","scrolling-element","win-height","js/window","top-offset-limit","scroll-top","top-position","x__4214__auto__","y__4215__auto__","relative-position","adjusted-position","e","and__4115__auto__","clojure.string/blank?"],"sourcesContent":["(ns oc.web.components.ui.media-video-modal\n  (:require [rum.core :as rum]\n            [cuerdas.core :as string]\n            [org.martinklepsch.derivatives :as drv]\n            [dommy.core :as dommy :refer-macros (sel1)]\n            [oc.web.dispatcher :as dis]\n            [oc.web.lib.utils :as utils]\n            [oc.web.mixins.ui :refer (first-render-mixin)]))\n\n(def media-video-modal-height 153)\n\n(def youtube-regexp\n \"https?://(?:www\\\\.|m\\\\.)*(?:youtube\\\\.com|youtu\\\\.be)/watch/?\\\\?(?:(?:time_continue|t)=\\\\d+s?&)?v=([a-zA-Z0-9_-]{11}).*\")\n(def youtube-short-regexp\n \"https?://(?:www\\\\.|m\\\\.)*(?:youtube\\\\.com|youtu\\\\.be)/([a-zA-Z0-9_-]{11}/?)\")\n\n; https://vimeo.com/223518754 https://vimeo.com/groups/asd/223518754 https://vimeo.com/channels/asd/223518754\n(def vimeo-regexp\n (str\n  \"(?:http|https)?:\\\\/\\\\/(?:www\\\\.)?vimeo.com\\\\/\"\n  \"(?:channels\\\\/(?:\\\\w+\\\\/)?|groups\\\\/(?:[?:^\\\\/]*)\"\n  \"\\\\/videos\\\\/|)(\\\\d+)(?:|\\\\/\\\\?)\"))\n\n(def loom-regexp\n (str\n  \"(?:http|https)?:\\\\/\\\\/(?:www\\\\.)?(?:useloom|loom).com\\\\/share\\\\/\"\n  \"([a-zA-Z0-9_-]*/?)\"))\n\n(defn get-video-data [url]\n  (let [yr (js/RegExp youtube-regexp \"ig\")\n        yr2 (js/RegExp youtube-short-regexp \"ig\")\n        vr (js/RegExp vimeo-regexp \"ig\")\n        loomr (js/RegExp loom-regexp \"ig\")\n        y-groups (.exec yr url)\n        y2-groups (.exec yr2 url)\n        v-groups (.exec vr url)\n        loom-groups (.exec loomr url)]\n    {:id (cond\n          (nth y-groups 1)\n          (nth y-groups 1)\n\n          (nth y2-groups 1)\n          (nth y2-groups 1)\n\n          (nth v-groups 1)\n          (nth v-groups 1)\n\n          (nth loom-groups 1)\n          (nth loom-groups 1))\n     :type (cond\n            (or (nth y-groups 1) (nth y2-groups 1))\n            :youtube\n            (nth v-groups 1)\n            :vimeo\n            (nth loom-groups 1)\n            :loom)}))\n\n(defn- get-vimeo-thumbnail-success [s video res]\n  (let [resp (aget res 0)\n        thumbnail (aget resp \"thumbnail_medium\")\n        video-data (assoc video :thumbnail thumbnail)\n        dismiss-modal-cb (:dismiss-cb (first (:rum/args s)))]\n    (dis/dispatch! [:input [:media-input :media-video] video-data])\n    (dismiss-modal-cb)))\n\n(def _retry (atom 0))\n\n(declare get-vimeo-thumbnail)\n\n(defn- get-vimeo-thumbnail-retry [s video]\n  ;; Increment the retry count\n  (if (< (swap! _retry inc) 3)\n    ; Retry at most 3 times to load the video details\n    (get-vimeo-thumbnail s video)\n    ;; Add the video without thumbnail\n    (do\n      (dis/dispatch! [:input [:media-input :media-video] video])\n      (let [dismiss-modal-cb (:dismiss-cb (first (:rum/args s)))]\n        (dismiss-modal-cb)))))\n\n(defn- get-vimeo-thumbnail [s video]\n  (.ajax js/$\n    #js {\n      :method \"GET\"\n      :url (str \"https://vimeo.com/api/v2/video/\" (:id video) \".json\")\n      :success #(get-vimeo-thumbnail-success s video %)\n      :error #(get-vimeo-thumbnail-retry s video)}))\n\n(defn valid-video-url? [url]\n  (let [trimmed-url (string/trim url)\n        yr (js/RegExp youtube-regexp \"ig\")\n        yr2 (js/RegExp youtube-short-regexp \"ig\")\n        vr (js/RegExp vimeo-regexp \"ig\")\n        loomr (js/RegExp loom-regexp \"ig\")]\n    (when (seq trimmed-url)\n      (or (.match trimmed-url yr)\n          (.match trimmed-url yr2)\n          (.match trimmed-url vr)\n          (.match trimmed-url loomr)))))\n\n(defn video-add-click [s]\n  (let [video-data (get-video-data @(::video-url s))\n        dismiss-modal-cb (:dismiss-cb (first (:rum/args s)))]\n    (if (= :vimeo (:type video-data))\n      (get-vimeo-thumbnail s video-data)\n      (do\n        (dis/dispatch! [:input [:media-input :media-video] video-data])\n        (dismiss-modal-cb)))))\n\n(rum/defcs media-video-modal < rum/reactive\n                               ;; Locals\n                               (rum/local false ::dismiss)\n                               (rum/local \"\" ::video-url)\n                               (rum/local false ::video-url-focused)\n                               (rum/local 0 ::offset-top)\n                               ;; Derivatives\n                               (drv/drv :current-user-data)\n                               ;; Mixins\n                               first-render-mixin\n                               {:will-mount (fn [s]\n                                 (let [outer-container-selector (:outer-container-selector (first (:rum/args s)))]\n                                   (when-let [picker-el (sel1 (concat outer-container-selector [:div.medium-editor-media-picker]))]\n                                     (reset! (::offset-top s) (.-offsetTop picker-el))))\n                                 s)\n                                :did-mount (fn [s]\n                                 (when-let [video-field (rum/ref-node s \"video-input\")]\n                                  (.focus video-field))\n                                s)}\n  [s {:keys [fullscreen dismiss-cb outer-container-selector offset-element-selector]}]\n  (let [current-user-data (drv/react s :current-user-data)\n        valid-url (valid-video-url? @(::video-url s))\n        scrolling-element (if fullscreen (sel1 outer-container-selector) (.-scrollingElement js/document))\n        win-height (or (.-clientHeight (.-documentElement js/document))\n                       (.-innerHeight js/window))\n        top-offset-limit (.-offsetTop (sel1 offset-element-selector))\n        scroll-top (.-scrollTop scrolling-element)\n        top-position (max 0 @(::offset-top s))\n        relative-position (+ top-position\n                             top-offset-limit\n                             (* scroll-top -1)\n                             media-video-modal-height)\n        adjusted-position (if (> relative-position win-height)\n                            (max 0 (- top-position (- relative-position win-height) 16))\n                            top-position)]\n    [:div.media-video-modal-container\n      {:class (when @(::video-url-focused s) \"video-url-focused\")\n       :style {:top (str adjusted-position \"px\")}}\n      [:div.media-video-modal-title\n        \"Embed video\"]\n      [:input.media-video-modal-input.oc-input\n          {:type \"text\"\n           :value @(::video-url s)\n           :ref \"video-input\"\n           :on-change #(reset! (::video-url s) (.. % -target -value))\n           :on-focus #(reset! (::video-url-focused s) true)\n           :on-key-press (fn [e]\n                           (when (and valid-url\n                                      (= (.-key e) \"Enter\"))\n                             (video-add-click s)))\n           :on-blur #(when (clojure.string/blank? @(::video-url s))\n                       (reset! (::video-url-focused s) false))\n           :placeholder \"Paste the video link\u2026\"}]\n      [:button.mlb-reset.embed-video-bt\n        {:class (when-not valid-url \"disabled\")\n         :on-click #(when valid-url\n                      (video-add-click s))}\n        \"Embed video\"]\n      [:div.media-video-description\n        \"Works with Loom, Youtube, and Vimeo\"]]))"]}