shadow$provide.module$node_modules$core_js$library$modules$_for_of=function(global,require,module,exports){var ctx=require("module$node_modules$core_js$library$modules$_ctx"),call=require("module$node_modules$core_js$library$modules$_iter_call"),isArrayIter=require("module$node_modules$core_js$library$modules$_is_array_iter"),anObject=require("module$node_modules$core_js$library$modules$_an_object"),toLength=require("module$node_modules$core_js$library$modules$_to_length"),getIterFn=require("module$node_modules$core_js$library$modules$core_get_iterator_method"),
BREAK={},RETURN={};exports=module.exports=function(iterable,entries,fn,that,ITERATOR){ITERATOR=ITERATOR?function(){return iterable}:getIterFn(iterable);fn=ctx(fn,that,entries?2:1);that=0;var length,step;if("function"!=typeof ITERATOR)throw TypeError(iterable+" is not iterable!");if(isArrayIter(ITERATOR))for(length=toLength(iterable.length);length>that;that++){if(ITERATOR=entries?fn(anObject(step=iterable[that])[0],step[1]):fn(iterable[that]),ITERATOR===BREAK||ITERATOR===RETURN)return ITERATOR}else for(that=
ITERATOR.call(iterable);!(step=that.next()).done;)if(ITERATOR=call(that,fn,step.value,entries),ITERATOR===BREAK||ITERATOR===RETURN)return ITERATOR};exports.BREAK=BREAK;exports.RETURN=RETURN}
//# sourceMappingURL=module$node_modules$core_js$library$modules$_for_of.js.map
