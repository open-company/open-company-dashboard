shadow$provide.module$node_modules$react_virtualized$dist$commonjs$Collection$utils$calculateSizeAndPositionData=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=function(_ref){var cellCount=_ref.cellCount,cellSizeAndPositionGetter=_ref.cellSizeAndPositionGetter,cellMetadata=[];_ref=new _SectionManager2.default(_ref.sectionSize);for(var height=0,width=0,index=0;index<cellCount;index++){var cellMetadatum=cellSizeAndPositionGetter({index:index});
if(null==cellMetadatum.height||isNaN(cellMetadatum.height)||null==cellMetadatum.width||isNaN(cellMetadatum.width)||null==cellMetadatum.x||isNaN(cellMetadatum.x)||null==cellMetadatum.y||isNaN(cellMetadatum.y))throw Error("Invalid metadata returned for cell "+index+":\n        x:"+cellMetadatum.x+", y:"+cellMetadatum.y+", width:"+cellMetadatum.width+", height:"+cellMetadatum.height);height=Math.max(height,cellMetadatum.y+cellMetadatum.height);width=Math.max(width,cellMetadatum.x+cellMetadatum.width);
cellMetadata[index]=cellMetadatum;_ref.registerCell({cellMetadatum:cellMetadatum,index:index})}return{cellMetadata:cellMetadata,height:height,sectionManager:_ref,width:width}};var _SectionManager2=(global=require("module$node_modules$react_virtualized$dist$commonjs$Collection$SectionManager"))&&global.__esModule?global:{default:global}}
//# sourceMappingURL=module$node_modules$react_virtualized$dist$commonjs$Collection$utils$calculateSizeAndPositionData.js.map
