{
"version":3,
"file":"module$node_modules$scheduler$cjs$scheduler_development.js",
"lineCount":24,
"mappings":"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",
"sources":["node_modules/scheduler/cjs/scheduler.development.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$scheduler$cjs$scheduler_development\"] = function(global,require,module,exports) {\n/** @license React v0.17.0\n * scheduler.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar enableSchedulerDebugging = false;\nvar enableIsInputPending = false;\nvar enableMessageLoopImplementation = true;\nvar enableProfiling = true;\n\n// works by scheduling a requestAnimationFrame, storing the time for the start\n// of the frame, then scheduling a postMessage which gets scheduled after paint.\n// Within the postMessage handler do as much work as possible until time + frame\n// rate. By separating the idle call into a separate event tick we ensure that\n// layout, paint and other browser work is counted against the available time.\n// The frame rate is dynamically adjusted.\n\nvar requestHostCallback;\n\nvar requestHostTimeout;\nvar cancelHostTimeout;\nvar shouldYieldToHost;\nvar requestPaint;\n\n\n\nif ( // If Scheduler runs in a non-DOM environment, it falls back to a naive\n// implementation using setTimeout.\ntypeof window === 'undefined' || // Check if MessageChannel is supported, too.\ntypeof MessageChannel !== 'function') {\n  // If this accidentally gets imported in a non-browser environment, e.g. JavaScriptCore,\n  // fallback to a naive implementation.\n  var _callback = null;\n  var _timeoutID = null;\n\n  var _flushCallback = function () {\n    if (_callback !== null) {\n      try {\n        var currentTime = exports.unstable_now();\n        var hasRemainingTime = true;\n\n        _callback(hasRemainingTime, currentTime);\n\n        _callback = null;\n      } catch (e) {\n        setTimeout(_flushCallback, 0);\n        throw e;\n      }\n    }\n  };\n\n  var initialTime = Date.now();\n\n  exports.unstable_now = function () {\n    return Date.now() - initialTime;\n  };\n\n  requestHostCallback = function (cb) {\n    if (_callback !== null) {\n      // Protect against re-entrancy.\n      setTimeout(requestHostCallback, 0, cb);\n    } else {\n      _callback = cb;\n      setTimeout(_flushCallback, 0);\n    }\n  };\n\n  requestHostTimeout = function (cb, ms) {\n    _timeoutID = setTimeout(cb, ms);\n  };\n\n  cancelHostTimeout = function () {\n    clearTimeout(_timeoutID);\n  };\n\n  shouldYieldToHost = function () {\n    return false;\n  };\n\n  requestPaint = exports.unstable_forceFrameRate = function () {};\n} else {\n  // Capture local references to native APIs, in case a polyfill overrides them.\n  var performance = window.performance;\n  var _Date = window.Date;\n  var _setTimeout = window.setTimeout;\n  var _clearTimeout = window.clearTimeout;\n  var requestAnimationFrame = window.requestAnimationFrame;\n  var cancelAnimationFrame = window.cancelAnimationFrame;\n\n  if (typeof console !== 'undefined') {\n    // TODO: Remove fb.me link\n    if (typeof requestAnimationFrame !== 'function') {\n      console.error(\"This browser doesn't support requestAnimationFrame. \" + 'Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');\n    }\n\n    if (typeof cancelAnimationFrame !== 'function') {\n      console.error(\"This browser doesn't support cancelAnimationFrame. \" + 'Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');\n    }\n  }\n\n  if (typeof performance === 'object' && typeof performance.now === 'function') {\n    exports.unstable_now = function () {\n      return performance.now();\n    };\n  } else {\n    var _initialTime = _Date.now();\n\n    exports.unstable_now = function () {\n      return _Date.now() - _initialTime;\n    };\n  }\n\n  var isRAFLoopRunning = false;\n  var isMessageLoopRunning = false;\n  var scheduledHostCallback = null;\n  var rAFTimeoutID = -1;\n  var taskTimeoutID = -1;\n  var frameLength = enableMessageLoopImplementation ? // We won't attempt to align with the vsync. Instead we'll yield multiple\n  // times per frame, often enough to keep it responsive even at really\n  // high frame rates > 120.\n  5 : // Use a heuristic to measure the frame rate and yield at the end of the\n  // frame. We start out assuming that we run at 30fps but then the\n  // heuristic tracking will adjust this value to a faster fps if we get\n  // more frequent animation frames.\n  33.33;\n  var prevRAFTime = -1;\n  var prevRAFInterval = -1;\n  var frameDeadline = 0;\n  var fpsLocked = false; // TODO: Make this configurable\n  // TODO: Adjust this based on priority?\n\n  var maxFrameLength = 300;\n  var needsPaint = false;\n\n  if (enableIsInputPending && navigator !== undefined && navigator.scheduling !== undefined && navigator.scheduling.isInputPending !== undefined) {\n    var scheduling = navigator.scheduling;\n\n    shouldYieldToHost = function () {\n      var currentTime = exports.unstable_now();\n\n      if (currentTime >= frameDeadline) {\n        // There's no time left in the frame. We may want to yield control of\n        // the main thread, so the browser can perform high priority tasks. The\n        // main ones are painting and user input. If there's a pending paint or\n        // a pending input, then we should yield. But if there's neither, then\n        // we can yield less often while remaining responsive. We'll eventually\n        // yield regardless, since there could be a pending paint that wasn't\n        // accompanied by a call to `requestPaint`, or other main thread tasks\n        // like network events.\n        if (needsPaint || scheduling.isInputPending()) {\n          // There is either a pending paint or a pending input.\n          return true;\n        } // There's no pending input. Only yield if we've reached the max\n        // frame length.\n\n\n        return currentTime >= frameDeadline + maxFrameLength;\n      } else {\n        // There's still time left in the frame.\n        return false;\n      }\n    };\n\n    requestPaint = function () {\n      needsPaint = true;\n    };\n  } else {\n    // `isInputPending` is not available. Since we have no way of knowing if\n    // there's pending input, always yield at the end of the frame.\n    shouldYieldToHost = function () {\n      return exports.unstable_now() >= frameDeadline;\n    }; // Since we yield every frame regardless, `requestPaint` has no effect.\n\n\n    requestPaint = function () {};\n  }\n\n  exports.unstable_forceFrameRate = function (fps) {\n    if (fps < 0 || fps > 125) {\n      console.error('forceFrameRate takes a positive int between 0 and 125, ' + 'forcing framerates higher than 125 fps is not unsupported');\n      return;\n    }\n\n    if (fps > 0) {\n      frameLength = Math.floor(1000 / fps);\n      fpsLocked = true;\n    } else {\n      // reset the framerate\n      frameLength = 33.33;\n      fpsLocked = false;\n    }\n  };\n\n  var performWorkUntilDeadline = function () {\n    if (enableMessageLoopImplementation) {\n      if (scheduledHostCallback !== null) {\n        var currentTime = exports.unstable_now(); // Yield after `frameLength` ms, regardless of where we are in the vsync\n        // cycle. This means there's always time remaining at the beginning of\n        // the message event.\n\n        frameDeadline = currentTime + frameLength;\n        var hasTimeRemaining = true;\n\n        try {\n          var hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);\n\n          if (!hasMoreWork) {\n            isMessageLoopRunning = false;\n            scheduledHostCallback = null;\n          } else {\n            // If there's more work, schedule the next message event at the end\n            // of the preceding one.\n            port.postMessage(null);\n          }\n        } catch (error) {\n          // If a scheduler task throws, exit the current browser task so the\n          // error can be observed.\n          port.postMessage(null);\n          throw error;\n        }\n      } else {\n        isMessageLoopRunning = false;\n      } // Yielding to the browser will give it a chance to paint, so we can\n      // reset this.\n\n\n      needsPaint = false;\n    } else {\n      if (scheduledHostCallback !== null) {\n        var _currentTime = exports.unstable_now();\n\n        var _hasTimeRemaining = frameDeadline - _currentTime > 0;\n\n        try {\n          var _hasMoreWork = scheduledHostCallback(_hasTimeRemaining, _currentTime);\n\n          if (!_hasMoreWork) {\n            scheduledHostCallback = null;\n          }\n        } catch (error) {\n          // If a scheduler task throws, exit the current browser task so the\n          // error can be observed, and post a new task as soon as possible\n          // so we can continue where we left off.\n          port.postMessage(null);\n          throw error;\n        }\n      } // Yielding to the browser will give it a chance to paint, so we can\n      // reset this.\n\n\n      needsPaint = false;\n    }\n  };\n\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = performWorkUntilDeadline;\n\n  var onAnimationFrame = function (rAFTime) {\n    if (scheduledHostCallback === null) {\n      // No scheduled work. Exit.\n      prevRAFTime = -1;\n      prevRAFInterval = -1;\n      isRAFLoopRunning = false;\n      return;\n    } // Eagerly schedule the next animation callback at the beginning of the\n    // frame. If the scheduler queue is not empty at the end of the frame, it\n    // will continue flushing inside that callback. If the queue *is* empty,\n    // then it will exit immediately. Posting the callback at the start of the\n    // frame ensures it's fired within the earliest possible frame. If we\n    // waited until the end of the frame to post the callback, we risk the\n    // browser skipping a frame and not firing the callback until the frame\n    // after that.\n\n\n    isRAFLoopRunning = true;\n    requestAnimationFrame(function (nextRAFTime) {\n      _clearTimeout(rAFTimeoutID);\n\n      onAnimationFrame(nextRAFTime);\n    }); // requestAnimationFrame is throttled when the tab is backgrounded. We\n    // don't want to stop working entirely. So we'll fallback to a timeout loop.\n    // TODO: Need a better heuristic for backgrounded work.\n\n    var onTimeout = function () {\n      frameDeadline = exports.unstable_now() + frameLength / 2;\n      performWorkUntilDeadline();\n      rAFTimeoutID = _setTimeout(onTimeout, frameLength * 3);\n    };\n\n    rAFTimeoutID = _setTimeout(onTimeout, frameLength * 3);\n\n    if (prevRAFTime !== -1 && // Make sure this rAF time is different from the previous one. This check\n    // could fail if two rAFs fire in the same frame.\n    rAFTime - prevRAFTime > 0.1) {\n      var rAFInterval = rAFTime - prevRAFTime;\n\n      if (!fpsLocked && prevRAFInterval !== -1) {\n        // We've observed two consecutive frame intervals. We'll use this to\n        // dynamically adjust the frame rate.\n        //\n        // If one frame goes long, then the next one can be short to catch up.\n        // If two frames are short in a row, then that's an indication that we\n        // actually have a higher frame rate than what we're currently\n        // optimizing. For example, if we're running on 120hz display or 90hz VR\n        // display. Take the max of the two in case one of them was an anomaly\n        // due to missed frame deadlines.\n        if (rAFInterval < frameLength && prevRAFInterval < frameLength) {\n          frameLength = rAFInterval < prevRAFInterval ? prevRAFInterval : rAFInterval;\n\n          if (frameLength < 8.33) {\n            // Defensive coding. We don't support higher frame rates than 120hz.\n            // If the calculated frame length gets lower than 8, it is probably\n            // a bug.\n            frameLength = 8.33;\n          }\n        }\n      }\n\n      prevRAFInterval = rAFInterval;\n    }\n\n    prevRAFTime = rAFTime;\n    frameDeadline = rAFTime + frameLength; // We use the postMessage trick to defer idle work until after the repaint.\n\n    port.postMessage(null);\n  };\n\n  requestHostCallback = function (callback) {\n    scheduledHostCallback = callback;\n\n    if (enableMessageLoopImplementation) {\n      if (!isMessageLoopRunning) {\n        isMessageLoopRunning = true;\n        port.postMessage(null);\n      }\n    } else {\n      if (!isRAFLoopRunning) {\n        // Start a rAF loop.\n        isRAFLoopRunning = true;\n        requestAnimationFrame(function (rAFTime) {\n          onAnimationFrame(rAFTime);\n        });\n      }\n    }\n  };\n\n  requestHostTimeout = function (callback, ms) {\n    taskTimeoutID = _setTimeout(function () {\n      callback(exports.unstable_now());\n    }, ms);\n  };\n\n  cancelHostTimeout = function () {\n    _clearTimeout(taskTimeoutID);\n\n    taskTimeoutID = -1;\n  };\n}\n\nfunction push(heap, node) {\n  var index = heap.length;\n  heap.push(node);\n  siftUp(heap, node, index);\n}\nfunction peek(heap) {\n  var first = heap[0];\n  return first === undefined ? null : first;\n}\nfunction pop(heap) {\n  var first = heap[0];\n\n  if (first !== undefined) {\n    var last = heap.pop();\n\n    if (last !== first) {\n      heap[0] = last;\n      siftDown(heap, last, 0);\n    }\n\n    return first;\n  } else {\n    return null;\n  }\n}\n\nfunction siftUp(heap, node, i) {\n  var index = i;\n\n  while (true) {\n    var parentIndex = Math.floor((index - 1) / 2);\n    var parent = heap[parentIndex];\n\n    if (parent !== undefined && compare(parent, node) > 0) {\n      // The parent is larger. Swap positions.\n      heap[parentIndex] = node;\n      heap[index] = parent;\n      index = parentIndex;\n    } else {\n      // The parent is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction siftDown(heap, node, i) {\n  var index = i;\n  var length = heap.length;\n\n  while (index < length) {\n    var leftIndex = (index + 1) * 2 - 1;\n    var left = heap[leftIndex];\n    var rightIndex = leftIndex + 1;\n    var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.\n\n    if (left !== undefined && compare(left, node) < 0) {\n      if (right !== undefined && compare(right, left) < 0) {\n        heap[index] = right;\n        heap[rightIndex] = node;\n        index = rightIndex;\n      } else {\n        heap[index] = left;\n        heap[leftIndex] = node;\n        index = leftIndex;\n      }\n    } else if (right !== undefined && compare(right, node) < 0) {\n      heap[index] = right;\n      heap[rightIndex] = node;\n      index = rightIndex;\n    } else {\n      // Neither child is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction compare(a, b) {\n  // Compare sort index first, then task id.\n  var diff = a.sortIndex - b.sortIndex;\n  return diff !== 0 ? diff : a.id - b.id;\n}\n\n// TODO: Use symbols?\nvar NoPriority = 0;\nvar ImmediatePriority = 1;\nvar UserBlockingPriority = 2;\nvar NormalPriority = 3;\nvar LowPriority = 4;\nvar IdlePriority = 5;\n\nvar runIdCounter = 0;\nvar mainThreadIdCounter = 0;\nvar profilingStateSize = 4;\nvar sharedProfilingBuffer = enableProfiling ? // $FlowFixMe Flow doesn't know about SharedArrayBuffer\ntypeof SharedArrayBuffer === 'function' ? new SharedArrayBuffer(profilingStateSize * Int32Array.BYTES_PER_ELEMENT) : // $FlowFixMe Flow doesn't know about ArrayBuffer\ntypeof ArrayBuffer === 'function' ? new ArrayBuffer(profilingStateSize * Int32Array.BYTES_PER_ELEMENT) : null // Don't crash the init path on IE9\n: null;\nvar profilingState = enableProfiling && sharedProfilingBuffer !== null ? new Int32Array(sharedProfilingBuffer) : []; // We can't read this but it helps save bytes for null checks\n\nvar PRIORITY = 0;\nvar CURRENT_TASK_ID = 1;\nvar CURRENT_RUN_ID = 2;\nvar QUEUE_SIZE = 3;\n\nif (enableProfiling) {\n  profilingState[PRIORITY] = NoPriority; // This is maintained with a counter, because the size of the priority queue\n  // array might include canceled tasks.\n\n  profilingState[QUEUE_SIZE] = 0;\n  profilingState[CURRENT_TASK_ID] = 0;\n} // Bytes per element is 4\n\n\nvar INITIAL_EVENT_LOG_SIZE = 131072;\nvar MAX_EVENT_LOG_SIZE = 524288; // Equivalent to 2 megabytes\n\nvar eventLogSize = 0;\nvar eventLogBuffer = null;\nvar eventLog = null;\nvar eventLogIndex = 0;\nvar TaskStartEvent = 1;\nvar TaskCompleteEvent = 2;\nvar TaskErrorEvent = 3;\nvar TaskCancelEvent = 4;\nvar TaskRunEvent = 5;\nvar TaskYieldEvent = 6;\nvar SchedulerSuspendEvent = 7;\nvar SchedulerResumeEvent = 8;\n\nfunction logEvent(entries) {\n  if (eventLog !== null) {\n    var offset = eventLogIndex;\n    eventLogIndex += entries.length;\n\n    if (eventLogIndex + 1 > eventLogSize) {\n      eventLogSize *= 2;\n\n      if (eventLogSize > MAX_EVENT_LOG_SIZE) {\n        console.error(\"Scheduler Profiling: Event log exceeded maximum size. Don't \" + 'forget to call `stopLoggingProfilingEvents()`.');\n        stopLoggingProfilingEvents();\n        return;\n      }\n\n      var newEventLog = new Int32Array(eventLogSize * 4);\n      newEventLog.set(eventLog);\n      eventLogBuffer = newEventLog.buffer;\n      eventLog = newEventLog;\n    }\n\n    eventLog.set(entries, offset);\n  }\n}\n\nfunction startLoggingProfilingEvents() {\n  eventLogSize = INITIAL_EVENT_LOG_SIZE;\n  eventLogBuffer = new ArrayBuffer(eventLogSize * 4);\n  eventLog = new Int32Array(eventLogBuffer);\n  eventLogIndex = 0;\n}\nfunction stopLoggingProfilingEvents() {\n  var buffer = eventLogBuffer;\n  eventLogSize = 0;\n  eventLogBuffer = null;\n  eventLog = null;\n  eventLogIndex = 0;\n  return buffer;\n}\nfunction markTaskStart(task, ms) {\n  if (enableProfiling) {\n    profilingState[QUEUE_SIZE]++;\n\n    if (eventLog !== null) {\n      // performance.now returns a float, representing milliseconds. When the\n      // event is logged, it's coerced to an int. Convert to microseconds to\n      // maintain extra degrees of precision.\n      logEvent([TaskStartEvent, ms * 1000, task.id, task.priorityLevel]);\n    }\n  }\n}\nfunction markTaskCompleted(task, ms) {\n  if (enableProfiling) {\n    profilingState[PRIORITY] = NoPriority;\n    profilingState[CURRENT_TASK_ID] = 0;\n    profilingState[QUEUE_SIZE]--;\n\n    if (eventLog !== null) {\n      logEvent([TaskCompleteEvent, ms * 1000, task.id]);\n    }\n  }\n}\nfunction markTaskCanceled(task, ms) {\n  if (enableProfiling) {\n    profilingState[QUEUE_SIZE]--;\n\n    if (eventLog !== null) {\n      logEvent([TaskCancelEvent, ms * 1000, task.id]);\n    }\n  }\n}\nfunction markTaskErrored(task, ms) {\n  if (enableProfiling) {\n    profilingState[PRIORITY] = NoPriority;\n    profilingState[CURRENT_TASK_ID] = 0;\n    profilingState[QUEUE_SIZE]--;\n\n    if (eventLog !== null) {\n      logEvent([TaskErrorEvent, ms * 1000, task.id]);\n    }\n  }\n}\nfunction markTaskRun(task, ms) {\n  if (enableProfiling) {\n    runIdCounter++;\n    profilingState[PRIORITY] = task.priorityLevel;\n    profilingState[CURRENT_TASK_ID] = task.id;\n    profilingState[CURRENT_RUN_ID] = runIdCounter;\n\n    if (eventLog !== null) {\n      logEvent([TaskRunEvent, ms * 1000, task.id, runIdCounter]);\n    }\n  }\n}\nfunction markTaskYield(task, ms) {\n  if (enableProfiling) {\n    profilingState[PRIORITY] = NoPriority;\n    profilingState[CURRENT_TASK_ID] = 0;\n    profilingState[CURRENT_RUN_ID] = 0;\n\n    if (eventLog !== null) {\n      logEvent([TaskYieldEvent, ms * 1000, task.id, runIdCounter]);\n    }\n  }\n}\nfunction markSchedulerSuspended(ms) {\n  if (enableProfiling) {\n    mainThreadIdCounter++;\n\n    if (eventLog !== null) {\n      logEvent([SchedulerSuspendEvent, ms * 1000, mainThreadIdCounter]);\n    }\n  }\n}\nfunction markSchedulerUnsuspended(ms) {\n  if (enableProfiling) {\n    if (eventLog !== null) {\n      logEvent([SchedulerResumeEvent, ms * 1000, mainThreadIdCounter]);\n    }\n  }\n}\n\n/* eslint-disable no-var */\n// Math.pow(2, 30) - 1\n// 0b111111111111111111111111111111\n\nvar maxSigned31BitInt = 1073741823; // Times out immediately\n\nvar IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out\n\nvar USER_BLOCKING_PRIORITY = 250;\nvar NORMAL_PRIORITY_TIMEOUT = 5000;\nvar LOW_PRIORITY_TIMEOUT = 10000; // Never times out\n\nvar IDLE_PRIORITY = maxSigned31BitInt; // Tasks are stored on a min heap\n\nvar taskQueue = [];\nvar timerQueue = []; // Incrementing id counter. Used to maintain insertion order.\n\nvar taskIdCounter = 1; // Pausing the scheduler is useful for debugging.\n\nvar isSchedulerPaused = false;\nvar currentTask = null;\nvar currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrancy.\n\nvar isPerformingWork = false;\nvar isHostCallbackScheduled = false;\nvar isHostTimeoutScheduled = false;\n\nfunction advanceTimers(currentTime) {\n  // Check for tasks that are no longer delayed and add them to the queue.\n  var timer = peek(timerQueue);\n\n  while (timer !== null) {\n    if (timer.callback === null) {\n      // Timer was cancelled.\n      pop(timerQueue);\n    } else if (timer.startTime <= currentTime) {\n      // Timer fired. Transfer to the task queue.\n      pop(timerQueue);\n      timer.sortIndex = timer.expirationTime;\n      push(taskQueue, timer);\n\n      if (enableProfiling) {\n        markTaskStart(timer, currentTime);\n        timer.isQueued = true;\n      }\n    } else {\n      // Remaining timers are pending.\n      return;\n    }\n\n    timer = peek(timerQueue);\n  }\n}\n\nfunction handleTimeout(currentTime) {\n  isHostTimeoutScheduled = false;\n  advanceTimers(currentTime);\n\n  if (!isHostCallbackScheduled) {\n    if (peek(taskQueue) !== null) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    } else {\n      var firstTimer = peek(timerQueue);\n\n      if (firstTimer !== null) {\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n      }\n    }\n  }\n}\n\nfunction flushWork(hasTimeRemaining, initialTime) {\n  if (enableProfiling) {\n    markSchedulerUnsuspended(initialTime);\n  } // We'll need a host callback the next time work is scheduled.\n\n\n  isHostCallbackScheduled = false;\n\n  if (isHostTimeoutScheduled) {\n    // We scheduled a timeout but it's no longer needed. Cancel it.\n    isHostTimeoutScheduled = false;\n    cancelHostTimeout();\n  }\n\n  isPerformingWork = true;\n  var previousPriorityLevel = currentPriorityLevel;\n\n  try {\n    if (enableProfiling) {\n      try {\n        return workLoop(hasTimeRemaining, initialTime);\n      } catch (error) {\n        if (currentTask !== null) {\n          var currentTime = exports.unstable_now();\n          markTaskErrored(currentTask, currentTime);\n          currentTask.isQueued = false;\n        }\n\n        throw error;\n      }\n    } else {\n      // No catch in prod codepath.\n      return workLoop(hasTimeRemaining, initialTime);\n    }\n  } finally {\n    currentTask = null;\n    currentPriorityLevel = previousPriorityLevel;\n    isPerformingWork = false;\n\n    if (enableProfiling) {\n      var _currentTime = exports.unstable_now();\n\n      markSchedulerSuspended(_currentTime);\n    }\n  }\n}\n\nfunction workLoop(hasTimeRemaining, initialTime) {\n  var currentTime = initialTime;\n  advanceTimers(currentTime);\n  currentTask = peek(taskQueue);\n\n  while (currentTask !== null && !(enableSchedulerDebugging && isSchedulerPaused)) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      // This currentTask hasn't expired, and we've reached the deadline.\n      break;\n    }\n\n    var callback = currentTask.callback;\n\n    if (callback !== null) {\n      currentTask.callback = null;\n      currentPriorityLevel = currentTask.priorityLevel;\n      var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      markTaskRun(currentTask, currentTime);\n      var continuationCallback = callback(didUserCallbackTimeout);\n      currentTime = exports.unstable_now();\n\n      if (typeof continuationCallback === 'function') {\n        currentTask.callback = continuationCallback;\n        markTaskYield(currentTask, currentTime);\n      } else {\n        if (enableProfiling) {\n          markTaskCompleted(currentTask, currentTime);\n          currentTask.isQueued = false;\n        }\n\n        if (currentTask === peek(taskQueue)) {\n          pop(taskQueue);\n        }\n      }\n\n      advanceTimers(currentTime);\n    } else {\n      pop(taskQueue);\n    }\n\n    currentTask = peek(taskQueue);\n  } // Return whether there's additional work\n\n\n  if (currentTask !== null) {\n    return true;\n  } else {\n    var firstTimer = peek(timerQueue);\n\n    if (firstTimer !== null) {\n      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n\n    return false;\n  }\n}\n\nfunction unstable_runWithPriority(priorityLevel, eventHandler) {\n  switch (priorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n    case LowPriority:\n    case IdlePriority:\n      break;\n\n    default:\n      priorityLevel = NormalPriority;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_next(eventHandler) {\n  var priorityLevel;\n\n  switch (currentPriorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n      // Shift down to normal priority\n      priorityLevel = NormalPriority;\n      break;\n\n    default:\n      // Anything lower than normal priority should remain at the current level.\n      priorityLevel = currentPriorityLevel;\n      break;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_wrapCallback(callback) {\n  var parentPriorityLevel = currentPriorityLevel;\n  return function () {\n    // This is a fork of runWithPriority, inlined for performance.\n    var previousPriorityLevel = currentPriorityLevel;\n    currentPriorityLevel = parentPriorityLevel;\n\n    try {\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n    }\n  };\n}\n\nfunction timeoutForPriorityLevel(priorityLevel) {\n  switch (priorityLevel) {\n    case ImmediatePriority:\n      return IMMEDIATE_PRIORITY_TIMEOUT;\n\n    case UserBlockingPriority:\n      return USER_BLOCKING_PRIORITY;\n\n    case IdlePriority:\n      return IDLE_PRIORITY;\n\n    case LowPriority:\n      return LOW_PRIORITY_TIMEOUT;\n\n    case NormalPriority:\n    default:\n      return NORMAL_PRIORITY_TIMEOUT;\n  }\n}\n\nfunction unstable_scheduleCallback(priorityLevel, callback, options) {\n  var currentTime = exports.unstable_now();\n  var startTime;\n  var timeout;\n\n  if (typeof options === 'object' && options !== null) {\n    var delay = options.delay;\n\n    if (typeof delay === 'number' && delay > 0) {\n      startTime = currentTime + delay;\n    } else {\n      startTime = currentTime;\n    }\n\n    timeout = typeof options.timeout === 'number' ? options.timeout : timeoutForPriorityLevel(priorityLevel);\n  } else {\n    timeout = timeoutForPriorityLevel(priorityLevel);\n    startTime = currentTime;\n  }\n\n  var expirationTime = startTime + timeout;\n  var newTask = {\n    id: taskIdCounter++,\n    callback: callback,\n    priorityLevel: priorityLevel,\n    startTime: startTime,\n    expirationTime: expirationTime,\n    sortIndex: -1\n  };\n\n  if (enableProfiling) {\n    newTask.isQueued = false;\n  }\n\n  if (startTime > currentTime) {\n    // This is a delayed task.\n    newTask.sortIndex = startTime;\n    push(timerQueue, newTask);\n\n    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {\n      // All tasks are delayed, and this is the task with the earliest delay.\n      if (isHostTimeoutScheduled) {\n        // Cancel an existing timeout.\n        cancelHostTimeout();\n      } else {\n        isHostTimeoutScheduled = true;\n      } // Schedule a timeout.\n\n\n      requestHostTimeout(handleTimeout, startTime - currentTime);\n    }\n  } else {\n    newTask.sortIndex = expirationTime;\n    push(taskQueue, newTask);\n\n    if (enableProfiling) {\n      markTaskStart(newTask, currentTime);\n      newTask.isQueued = true;\n    } // Schedule a host callback, if needed. If we're already performing work,\n    // wait until the next time we yield.\n\n\n    if (!isHostCallbackScheduled && !isPerformingWork) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    }\n  }\n\n  return newTask;\n}\n\nfunction unstable_pauseExecution() {\n  isSchedulerPaused = true;\n}\n\nfunction unstable_continueExecution() {\n  isSchedulerPaused = false;\n\n  if (!isHostCallbackScheduled && !isPerformingWork) {\n    isHostCallbackScheduled = true;\n    requestHostCallback(flushWork);\n  }\n}\n\nfunction unstable_getFirstCallbackNode() {\n  return peek(taskQueue);\n}\n\nfunction unstable_cancelCallback(task) {\n  if (enableProfiling) {\n    if (task.isQueued) {\n      var currentTime = exports.unstable_now();\n      markTaskCanceled(task, currentTime);\n      task.isQueued = false;\n    }\n  } // Null out the callback to indicate the task has been canceled. (Can't\n  // remove from the queue because you can't remove arbitrary nodes from an\n  // array based heap, only the first one.)\n\n\n  task.callback = null;\n}\n\nfunction unstable_getCurrentPriorityLevel() {\n  return currentPriorityLevel;\n}\n\nfunction unstable_shouldYield() {\n  var currentTime = exports.unstable_now();\n  advanceTimers(currentTime);\n  var firstTask = peek(taskQueue);\n  return firstTask !== currentTask && currentTask !== null && firstTask !== null && firstTask.callback !== null && firstTask.startTime <= currentTime && firstTask.expirationTime < currentTask.expirationTime || shouldYieldToHost();\n}\n\nvar unstable_requestPaint = requestPaint;\nvar unstable_Profiling = enableProfiling ? {\n  startLoggingProfilingEvents: startLoggingProfilingEvents,\n  stopLoggingProfilingEvents: stopLoggingProfilingEvents,\n  sharedProfilingBuffer: sharedProfilingBuffer\n} : null;\n\nexports.unstable_ImmediatePriority = ImmediatePriority;\nexports.unstable_UserBlockingPriority = UserBlockingPriority;\nexports.unstable_NormalPriority = NormalPriority;\nexports.unstable_IdlePriority = IdlePriority;\nexports.unstable_LowPriority = LowPriority;\nexports.unstable_runWithPriority = unstable_runWithPriority;\nexports.unstable_next = unstable_next;\nexports.unstable_scheduleCallback = unstable_scheduleCallback;\nexports.unstable_cancelCallback = unstable_cancelCallback;\nexports.unstable_wrapCallback = unstable_wrapCallback;\nexports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;\nexports.unstable_shouldYield = unstable_shouldYield;\nexports.unstable_requestPaint = unstable_requestPaint;\nexports.unstable_continueExecution = unstable_continueExecution;\nexports.unstable_pauseExecution = unstable_pauseExecution;\nexports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;\nexports.unstable_Profiling = unstable_Profiling;\n  })();\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","push","heap","node","index","length","parentIndex","Math","floor","parent","undefined","compare","peek","first","pop","last","i","leftIndex","left","rightIndex","right","a","b","diff","sortIndex","id","logEvent","entries","eventLog","offset","eventLogIndex","eventLogSize","MAX_EVENT_LOG_SIZE","console","error","stopLoggingProfilingEvents","newEventLog","Int32Array","set","eventLogBuffer","buffer","markTaskStart","task","ms","profilingState","QUEUE_SIZE","TaskStartEvent","priorityLevel","advanceTimers","currentTime","timer","timerQueue","callback","startTime","expirationTime","taskQueue","isQueued","handleTimeout","isHostTimeoutScheduled","isHostCallbackScheduled","requestHostCallback","flushWork","firstTimer","requestHostTimeout","hasTimeRemaining","initialTime","SchedulerResumeEvent","mainThreadIdCounter","cancelHostTimeout","isPerformingWork","previousPriorityLevel","currentPriorityLevel","currentTask","shouldYieldToHost","didUserCallbackTimeout","runIdCounter","PRIORITY","CURRENT_TASK_ID","CURRENT_RUN_ID","TaskRunEvent","continuationCallback","unstable_now","NoPriority","TaskYieldEvent","TaskCompleteEvent","TaskErrorEvent","_currentTime","SchedulerSuspendEvent","timeoutForPriorityLevel","ImmediatePriority","IMMEDIATE_PRIORITY_TIMEOUT","UserBlockingPriority","USER_BLOCKING_PRIORITY","IdlePriority","maxSigned31BitInt","LowPriority","LOW_PRIORITY_TIMEOUT","NORMAL_PRIORITY_TIMEOUT","Object","defineProperty","value","window","MessageChannel","_callback","_timeoutID","_flushCallback","hasRemainingTime","e","setTimeout","Date","now","exports.unstable_now","cb","clearTimeout","requestPaint","unstable_forceFrameRate","exports.unstable_forceFrameRate","performance","_Date","_setTimeout","_clearTimeout","requestAnimationFrame","cancelAnimationFrame","_initialTime","isMessageLoopRunning","scheduledHostCallback","taskTimeoutID","frameLength","frameDeadline","fps","channel","port","port2","port1","onmessage","performWorkUntilDeadline","hasMoreWork","postMessage","sharedProfilingBuffer","SharedArrayBuffer","profilingStateSize","BYTES_PER_ELEMENT","ArrayBuffer","taskIdCounter","NormalPriority","unstable_Profiling","startLoggingProfilingEvents","INITIAL_EVENT_LOG_SIZE","unstable_ImmediatePriority","unstable_UserBlockingPriority","unstable_NormalPriority","unstable_IdlePriority","unstable_LowPriority","unstable_runWithPriority","eventHandler","unstable_next","unstable_scheduleCallback","options","delay","timeout","newTask","unstable_cancelCallback","TaskCancelEvent","unstable_wrapCallback","parentPriorityLevel","apply","arguments","unstable_getCurrentPriorityLevel","unstable_shouldYield","firstTask","unstable_requestPaint","unstable_continueExecution","unstable_pauseExecution","unstable_getFirstCallbackNode"]
}
