{
"version":3,
"file":"module$node_modules$core_js_pure$internals$string_multibyte.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,2DAAf,CAAgF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACxH,IAAIC,UAAYH,OAAA,CAAQ,uDAAR,CAAhB,CACII,uBAAyBJ,OAAA,CAAQ,qEAAR,CAGzBK,OAAAA,CAAeA,QAAS,CAACC,iBAAD,CAAoB,CAC9C,MAAO,SAAS,CAACC,KAAD,CAAQC,GAAR,CAAa,CACvBC,KAAAA,CAAIC,MAAA,CAAON,sBAAA,CAAuBG,KAAvB,CAAP,CACJI,IAAAA,CAAWR,SAAA,CAAUK,GAAV,CACf,KAAII,KAAOH,KAAPG,CAASC,MAAb,CACWC,MACX,IAAe,CAAf,CAAIH,GAAJ,EAAoBA,GAApB,EAAgCC,IAAhC,CAAsC,MAAON,kBAAA,CAAoB,EAApB,CAAyBS,IAAAA,EACtE;IAAAC,MAAQP,KAAA,CAAEQ,UAAF,CAAaN,GAAb,CACR,OAAe,MAAR,CAAAK,KAAA,EAA0B,KAA1B,CAAkBA,KAAlB,EAAoCL,GAApC,CAA+C,CAA/C,GAAqDC,IAArD,EACsC,KADtC,EACDE,MADC,CACQL,KAAA,CAAEQ,UAAF,CAAaN,GAAb,CAAwB,CAAxB,CADR,GACyD,KADzD,CACgDG,MADhD,CAEDR,iBAAA,CAAoBG,KAAA,CAAES,MAAF,CAASP,GAAT,CAApB,CAAyCK,KAFxC,CAGDV,iBAAA,CAAoBG,KAAA,CAAEU,KAAF,CAAQR,GAAR,CAAkBA,GAAlB,CAA6B,CAA7B,CAApB,EAAuDK,KAAvD,CAA+D,KAA/D,EAAyE,EAAzE,GAAgFF,MAAhF,CAAyF,KAAzF,EAAmG,KAV9E,CADiB,CAehDb,OAAA,CAAOC,OAAP,CAAiB,CAGfkB,OAAQf,MAAA,CAAa,CAAA,CAAb,CAHO,CAMfa,OAAQb,MAAA,CAAa,CAAA,CAAb,CANO,CApBuG;",
"sources":["node_modules/core-js-pure/internals/string-multibyte.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$core_js_pure$internals$string_multibyte\"] = function(global,require,module,exports) {\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.{ codePointAt, at }` methods implementation\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = String(requireObjectCoercible($this));\n    var position = toInteger(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = S.charCodeAt(position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING ? S.charAt(position) : first\n        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","toInteger","requireObjectCoercible","createMethod","CONVERT_TO_STRING","$this","pos","S","String","position","size","length","second","undefined","first","charCodeAt","charAt","slice","codeAt"]
}
