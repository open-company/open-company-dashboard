shadow$provide.module$node_modules$react_virtualized$dist$commonjs$MultiGrid$CellMeasurerCacheDecorator=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var _classCallCheck3=(global=require("module$node_modules$babel_runtime$helpers$classCallCheck"))&&global.__esModule?global:{default:global},_createClass3=(global=require("module$node_modules$babel_runtime$helpers$createClass"))&&global.__esModule?global:{default:global};require("module$node_modules$react_virtualized$dist$commonjs$CellMeasurer$index");
require=function(){function CellMeasurerCacheDecorator(){var _this=this,params=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};(0,_classCallCheck3.default)(this,CellMeasurerCacheDecorator);this.columnWidth=function(_ref){_this._cellMeasurerCache.columnWidth({index:_ref.index+_this._columnIndexOffset})};this.rowHeight=function(_ref2){_this._cellMeasurerCache.rowHeight({index:_ref2.index+_this._rowIndexOffset})};var _params$columnIndexOf=params.columnIndexOffset,_params$rowIndexOffse=params.rowIndexOffset;
this._cellMeasurerCache=params.cellMeasurerCache;this._columnIndexOffset=void 0===_params$columnIndexOf?0:_params$columnIndexOf;this._rowIndexOffset=void 0===_params$rowIndexOffse?0:_params$rowIndexOffse}(0,_createClass3.default)(CellMeasurerCacheDecorator,[{key:"clear",value:function(rowIndex,columnIndex){this._cellMeasurerCache.clear(rowIndex+this._rowIndexOffset,columnIndex+this._columnIndexOffset)}},{key:"clearAll",value:function(){this._cellMeasurerCache.clearAll()}},{key:"hasFixedHeight",value:function(){return this._cellMeasurerCache.hasFixedHeight()}},
{key:"hasFixedWidth",value:function(){return this._cellMeasurerCache.hasFixedWidth()}},{key:"getHeight",value:function(rowIndex){return this._cellMeasurerCache.getHeight(rowIndex+this._rowIndexOffset,(1<arguments.length&&void 0!==arguments[1]?arguments[1]:0)+this._columnIndexOffset)}},{key:"getWidth",value:function(rowIndex){return this._cellMeasurerCache.getWidth(rowIndex+this._rowIndexOffset,(1<arguments.length&&void 0!==arguments[1]?arguments[1]:0)+this._columnIndexOffset)}},{key:"has",value:function(rowIndex){return this._cellMeasurerCache.has(rowIndex+
this._rowIndexOffset,(1<arguments.length&&void 0!==arguments[1]?arguments[1]:0)+this._columnIndexOffset)}},{key:"set",value:function(rowIndex,columnIndex,width,height){this._cellMeasurerCache.set(rowIndex+this._rowIndexOffset,columnIndex+this._columnIndexOffset,width,height)}},{key:"defaultHeight",get:function(){return this._cellMeasurerCache.defaultHeight}},{key:"defaultWidth",get:function(){return this._cellMeasurerCache.defaultWidth}}]);return CellMeasurerCacheDecorator}();exports.default=require}
//# sourceMappingURL=module$node_modules$react_virtualized$dist$commonjs$MultiGrid$CellMeasurerCacheDecorator.js.map
