shadow$provide.module$node_modules$xregexp$lib$addons$build=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime_corejs3$helpers$interopRequireDefault");require("module$node_modules$$babel$runtime_corejs3$core_js_stable$object$define_property")(exports,"__esModule",{value:!0});exports.default=void 0;var _concat=global(require("module$node_modules$$babel$runtime_corejs3$core_js_stable$instance$concat")),_includes=global(require("module$node_modules$$babel$runtime_corejs3$core_js_stable$instance$includes")),
_map=global(require("module$node_modules$$babel$runtime_corejs3$core_js_stable$instance$map")),_reduce=global(require("module$node_modules$$babel$runtime_corejs3$core_js_stable$instance$reduce"));exports.default=function(XRegExp){function deanchor(pattern){var leadingAnchor=/^(?:\(\?:\))*\^/,trailingAnchor=/\$(?:\(\?:\))*$/;return leadingAnchor.test(pattern)&&trailingAnchor.test(pattern)&&trailingAnchor.test(pattern.replace(/\\[\s\S]/g,""))?pattern.replace(leadingAnchor,"").replace(trailingAnchor,
""):pattern}function asXRegExp(value,addFlagX){addFlagX=addFlagX?"x":"";return XRegExp.isRegExp(value)?value.xregexp&&value.xregexp.captureNames?value:XRegExp(value.source,addFlagX):XRegExp(value,addFlagX)}function interpolate(substitution){return substitution instanceof RegExp?substitution:XRegExp.escape(substitution)}function reduceToSubpatternsObject(subpatterns,interpolated,subpatternIndex){subpatterns["subpattern".concat(subpatternIndex)]=interpolated;return subpatterns}function embedSubpatternAfter(raw,
subpatternIndex,rawLiterals){return raw+(subpatternIndex<rawLiterals.length-1?"{{subpattern".concat(subpatternIndex,"}}"):"")}var subParts=/(\()(?!\?)|\\([1-9]\d*)|\\[\s\S]|\[(?:[^\\\]]|\\[\s\S])*\]/g,parts=XRegExp.union([/\({{([\w$]+)}}\)|{{([\w$]+)}}/,subParts],"g",{conjunction:"or"});XRegExp.tag=function(flags){return function(literals){for(var _context,_context2,_len=arguments.length,substitutions=Array(1<_len?_len-1:0),_key=1;_key<_len;_key++)substitutions[_key-1]=arguments[_key];_len=(0,_reduce.default)(_context=
(0,_map.default)(substitutions).call(substitutions,interpolate)).call(_context,reduceToSubpatternsObject,{});_context=(0,_map.default)(_context2=literals.raw).call(_context2,embedSubpatternAfter).join("");return XRegExp.build(_context,_len,flags)}};XRegExp.build=function(pattern,subs,flags){flags=flags||"";var addFlagX=(0,_includes.default)(flags).call(flags,"x"),inlineFlags=/^\(\?([\w$]+)\)/.exec(pattern);inlineFlags&&(flags=XRegExp._clipDuplicates(flags+inlineFlags[1]));var data={},p;for(p in subs)subs.hasOwnProperty(p)&&
(inlineFlags=asXRegExp(subs[p],addFlagX),data[p]={pattern:deanchor(inlineFlags.source),names:inlineFlags.xregexp.captureNames||[]});pattern=asXRegExp(pattern,addFlagX);var numCaps=0,numPriorCaps,numOuterCaps=0,outerCapsMap=[0],outerCapNames=pattern.xregexp.captureNames||[];pattern=pattern.source.replace(parts,function($0,$1,$2,$3,$4){var subName=$1||$2;if(subName){var _context3;if(!data.hasOwnProperty(subName))throw new ReferenceError("Undefined property ".concat($0));if($1){var capName=outerCapNames[numOuterCaps];
outerCapsMap[++numOuterCaps]=++numCaps;$0="(?\x3c".concat(capName||subName,"\x3e")}else $0="(?:";numPriorCaps=numCaps;$1=data[subName].pattern.replace(subParts,function(match,paren,backref){if(paren){if(capName=data[subName].names[numCaps-numPriorCaps],++numCaps,capName)return"(?\x3c".concat(capName,"\x3e")}else if(backref)return localCapIndex=+backref-1,data[subName].names[localCapIndex]?"\\k\x3c".concat(data[subName].names[localCapIndex],"\x3e"):"\\".concat(+backref+numPriorCaps);return match});
return(0,_concat.default)(_context3="".concat($0)).call(_context3,$1,")")}if($3){if(capName=outerCapNames[numOuterCaps],outerCapsMap[++numOuterCaps]=++numCaps,capName)return"(?\x3c".concat(capName,"\x3e")}else if($4){var localCapIndex=+$4-1;return outerCapNames[localCapIndex]?"\\k\x3c".concat(outerCapNames[localCapIndex],"\x3e"):"\\".concat(outerCapsMap[+$4])}return $0});return XRegExp(pattern,flags)}};module.exports=exports["default"]}
//# sourceMappingURL=module$node_modules$xregexp$lib$addons$build.js.map
