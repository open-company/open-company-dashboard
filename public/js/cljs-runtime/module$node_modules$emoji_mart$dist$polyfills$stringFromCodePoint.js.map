{
"version":3,
"file":"module$node_modules$emoji_mart$dist$polyfills$stringFromCodePoint.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,iEAAf,CAAsF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG9HC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAKAH,QAAA,CAAQI,OAAR,CAFcC,MAEd,CAA0BC,aAA1B,EAA2CC,QAA4B,EAAG,CAExE,IAAIC,UAAY,EAAhB,CAGIC,MAAQ,EAHZ,CAIIC,OAASC,SAATD,CAAmBA,MACvB,IAAI,CAACA,MAAL,CACE,MAAO,EAGT,KADA,IAAIE,OAAS,EACb,CAAO,EAAEH,KAAT,CAAiBC,MAAjB,CAAA,CAAyB,CACnBG,IAAAA,aAAYC,MAAA,CAAOH,SAAA,CAAUF,KAAV,CAAP,CAChB,IAAI,CAACM,QAAA,CAASF,YAAT,CAAL,EACY,CADZ,CACAA,YADA,EAEY,OAFZ,CAEAA,YAFA,EAGAG,IAAA,CAAKC,KAAL,CAAWJ,YAAX,CAHA,EAGyBA,YAHzB,CAKI,KAAMK,WAAA,CAAW,sBAAX;AAAoCL,YAApC,CAAN,CAEJ,GAAiB,KAAjB,EAAIA,YAAJ,CAEEL,SAAA,CAAUW,IAAV,CAAeN,YAAf,CAFF,KAGO,CAGLA,YAAA,EAAa,KACb,KAAAO,eAAiBP,YAAjBO,EAA8B,EAA9BA,EAAoC,KACpCC,aAAA,CAAeR,YAAf,CAA2B,IAA3B,CAAmC,KACnCL,UAAA,CAAUW,IAAV,CAAeC,aAAf,CAA8BC,YAA9B,CANK,CAQP,GAAIZ,KAAJ,CAAY,CAAZ,GAAkBC,MAAlB,EA9BaY,KA8Bb,CAA4Bd,SAA5B,CAAsCE,MAAtC,CACEE,MACA,EADUP,MAAA,CAAOkB,YAAP,CAAoBC,KAApB,CAA0B,IAA1B,CAAgChB,SAAhC,CACV,CAAAA,SAAA,CAAUE,MAAV,CAAmB,CAtBE,CAyBzB,MAAOE,OApCiE,CARoD;",
"sources":["node_modules/emoji-mart/dist/polyfills/stringFromCodePoint.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$emoji_mart$dist$polyfills$stringFromCodePoint\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _String = String;\n\nexports.default = _String.fromCodePoint || function stringFromCodePoint() {\n  var MAX_SIZE = 0x4000;\n  var codeUnits = [];\n  var highSurrogate;\n  var lowSurrogate;\n  var index = -1;\n  var length = arguments.length;\n  if (!length) {\n    return '';\n  }\n  var result = '';\n  while (++index < length) {\n    var codePoint = Number(arguments[index]);\n    if (!isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n    codePoint < 0 || // not a valid Unicode code point\n    codePoint > 0x10ffff || // not a valid Unicode code point\n    Math.floor(codePoint) != codePoint // not an integer\n    ) {\n        throw RangeError('Invalid code point: ' + codePoint);\n      }\n    if (codePoint <= 0xffff) {\n      // BMP code point\n      codeUnits.push(codePoint);\n    } else {\n      // Astral code point; split in surrogate halves\n      // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      codePoint -= 0x10000;\n      highSurrogate = (codePoint >> 10) + 0xd800;\n      lowSurrogate = codePoint % 0x400 + 0xdc00;\n      codeUnits.push(highSurrogate, lowSurrogate);\n    }\n    if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n      result += String.fromCharCode.apply(null, codeUnits);\n      codeUnits.length = 0;\n    }\n  }\n  return result;\n};\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","default","String","fromCodePoint","stringFromCodePoint","codeUnits","index","length","arguments","result","codePoint","Number","isFinite","Math","floor","RangeError","push","highSurrogate","lowSurrogate","MAX_SIZE","fromCharCode","apply"]
}
