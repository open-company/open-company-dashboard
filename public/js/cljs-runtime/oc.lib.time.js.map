{"version":3,"sources":["oc/lib/time.cljc"],"mappings":";AAWA,AAAKA,AACH,AAAA,AAAA,AAACC,AAAAA,AAAAA;AAEH;;;AAAA,AAAMC;AAAN,AAGE,AAACC,AAAeH,AAAiB,AAACI;;AAIpC,AAAA,AAAMC,AAAQC;AAAd,AACE,AAACC,AAAeD;;AAElB,AAAA,AAAME;AAAN,AACE,AAACH,AAAO,AAACD","names":["oc.lib.time/timestamp-format","cljs-time.format/formatters","oc.lib.time/current-timestamp","cljs-time.format/unparse","cljs-time.core/now","oc.lib.time/millis","t","cljs-time.coerce/to-long","oc.lib.time/now-ts"],"sourcesContent":["(ns oc.lib.time\n  \"Functions related to time and timestamps.\"\n  #?(:clj (:require [clj-time.format :as format]\n                    [clj-time.core :as time]\n                    [clj-time.coerce :as coerce])\n     :cljs (:require [cljs-time.format :as format]\n                     [cljs-time.core :as time]\n                     [cljs-time.coerce :as coerce])))\n\n;; ----- ISO 8601 timestamp -----\n\n(def timestamp-format\n  (format/formatters :date-time))\n\n(defn current-timestamp\n  \"ISO 8601 string timestamp for the current time.\"\n  []\n  (format/unparse timestamp-format (time/now)))\n\n;; ----- Timestamp in milliseconds -----\n\n(defn millis [t]\n  (coerce/to-long t))\n\n(defn now-ts []\n  (millis (time/now)))"]}