{"version":3,"sources":["oc/web/utils/stripe.cljs"],"mappings":";AAIA,AAAKA,AAAW,AAAA,AAACC;AAEjB,AAAA,AAAOC;AAAP,AACE,AAACC,AAAOH,AAAW,AAAAI,AAAYC;;AAEjC,AAAA,AAAME;AAAN,AACE,AAAM,AAAA,AAAAD,AAAA,AAAON;AAAb,AACE,AAACE;;AADH;;AADF,AAAAI,AAGGN;;AAEH,AAAA,AAAA,AAAAQ,AAAMM;AAAN,AAAA,AAAAL,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAK,AAAA,AAAA,AAAA,AAAAF;;;AAAA,AAAA,AAAA,AAAA,AAAAG,AAAMD,AAAsBS;AAA5B,AAAA,AAAAP,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAA4CQ;AAA5C,AACE,AAAMC,AAAE,AAAClB;AACHmB,AAAiB,AAAqBD,AACpB,AAACE,AAAQJ;AAFjC,AAGE,AAAOG,AACN,AAAKE;AAAL,AACC,AAAM,AAACC,AAAIL;AAAX,AACE,AAACA,AAAAA,AAAAA,AAASI,AAAAA;;AADZ;;;;;AANN,AAAA,AAAA,AAAMd;;AAAN;AAAA,AAAA,AAAA,AAAAI,AAAMJ;AAAN,AAAA,AAAAK,AAAA,AAAAC,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAA,AAAA,AAAAI,AAAA;AAAA,AAAA,AAAAA,AAAAH,AAAAD;;;AAAA","names":["oc.web.utils.stripe/stripe-obj","cljs.core.atom","oc.web.utils.stripe/init","cljs.core/reset!","js/Stripe","oc.web.local-settings/stripe-api-key","cljs.core/deref","oc.web.utils.stripe/stripe","var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","oc.web.utils.stripe/redirect-to-checkout","p__37964","vec__37965","cljs.core.nth","seq37962","G__37963","cljs.core/first","cljs.core/next","self__4723__auto__","session-data","callback","s","checkout-promise","cljs.core/clj->js","res","cljs.core/fn?"],"sourcesContent":["(ns oc.web.utils.stripe\n  (:require [taoensso.timbre :as timbre]\n            [oc.web.local-settings :as ls]))\n\n(def stripe-obj (atom nil))\n\n(defn- init []\n  (reset! stripe-obj (js/Stripe. ls/stripe-api-key)))\n\n(defn stripe []\n  (when (nil? @stripe-obj)\n    (init))\n  @stripe-obj)\n\n(defn redirect-to-checkout [session-data & [callback]]\n  (let [s (stripe)\n        checkout-promise (.redirectToCheckout s\n                          (clj->js session-data))]\n    (.then checkout-promise\n     (fn [res]\n      (when (fn? callback)\n        (callback res))))))"]}