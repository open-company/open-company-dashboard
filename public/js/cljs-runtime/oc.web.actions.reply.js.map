{"version":3,"sources":["oc/web/actions/reply.cljs"],"mappings":";AAMA,AAAA,AAAMA,AAAcC,AAAWC;AAA/B,AACE,AAAA,AAAA,AAACC,AAA6B,AAACC,AAAsBH,AAAWC;;AAElE,AAAA,AAAMG,AAAiBJ,AAAWC;AAAlC,AACE,AAAA,AAAA,AAACC,AAAkC,AAACC,AAAsBH,AAAWC;;AAEvE,AAAA,AAAMI,AAAmBL;AAAzB,AACE,AAAA,AAAA,AAACE,AAAwC,AAACC,AAAsBH;;AAElE,AAAA,AAAMM,AAAmBN,AAAWC;AAApC,AACE,AAAA,AAAA,AAACC,AAAkC,AAACC,AAAsBH,AAAWC;;AAEvE,AAAA,AAAMM,AAAgBP;AAAtB,AACE,AAAA,AAAA,AAACE,AAA+B,AAACC,AAAsBH;;AAEzD,AAAA,AAAMQ,AAAaR,AAAWS;AAA9B,AACE,AAAMC,AAAS,AAACC;AACVC,AAAa,AAAA,AAAAC,AAAA,AAACC,AAAoBC,AAAc,AAAA,AAAOL,AAAmBM;AAC1EC,AAAoB,AAACC,AAAiBR,AAASV,AAAWS,AAAiB,AAAA,AAAeG;AAC1FO,AAAkB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC,AAAMH;AAH/B,AAIE,AAAA,AAAA,AAACf,AAA4B,AAAA,AAAOQ,AAAUV,AAAWmB","names":["oc.web.actions.reply/reply-expand","entry-data","reply-data","oc.web.dispatcher/dispatch!","oc.web.dispatcher.current_org_slug","oc.web.actions.reply/reply-mark-seen","oc.web.actions.reply/replies-mark-seen","oc.web.actions.reply/reply-unwrap-body","oc.web.actions.reply/replies-expand","oc.web.actions.reply/replies-add","new-comment-data","org-data","oc.web.dispatcher.org_data","replies-data","cljs.core/deref","oc.web.dispatcher.container_data","oc.web.dispatcher/app-state","oc.web.dispatcher/recent-activity-sort","parsed-comment-data","oc.web.utils.activity.parse_comment","parsed-reply-data","cljs.core.merge"],"sourcesContent":["(ns oc.web.actions.reply\n  (:require [oc.web.dispatcher :as dis]\n            [oc.web.utils.activity :as au]))\n\n;; Reply actions\n\n(defn reply-expand [entry-data reply-data]\n  (dis/dispatch! [:reply-expand (dis/current-org-slug) entry-data reply-data]))\n\n(defn reply-mark-seen [entry-data reply-data]\n  (dis/dispatch! [:replies-mark-seen (dis/current-org-slug) entry-data reply-data]))\n\n(defn replies-mark-seen [entry-data]\n  (dis/dispatch! [:replies-entry-mark-seen (dis/current-org-slug) entry-data]))\n\n(defn reply-unwrap-body [entry-data reply-data]\n  (dis/dispatch! [:reply-unwrap-body (dis/current-org-slug) entry-data reply-data]))\n\n(defn replies-expand [entry-data]\n  (dis/dispatch! [:replies-expand (dis/current-org-slug) entry-data]))\n\n(defn replies-add [entry-data new-comment-data]\n  (let [org-data (dis/org-data)\n        replies-data (dis/container-data @dis/app-state (:slug org-data) :replies dis/recent-activity-sort)\n        parsed-comment-data (au/parse-comment org-data entry-data new-comment-data (:last-seen-at replies-data))\n        parsed-reply-data (merge parsed-comment-data {:unwrapped-body true :collapsed false :unseen false})]\n    (dis/dispatch! [:replies-add (:slug org-data) entry-data parsed-reply-data])))"]}