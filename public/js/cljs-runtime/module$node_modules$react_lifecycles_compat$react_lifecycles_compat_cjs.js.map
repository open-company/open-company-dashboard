{
"version":3,
"file":"module$node_modules$react_lifecycles_compat$react_lifecycles_compat_cjs.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/react-lifecycles-compat/react-lifecycles-compat.cjs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_lifecycles_compat$react_lifecycles_compat_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexports.polyfill = polyfill;\n\n};"],
"names":["shadow$provide","global","require","module","exports","componentWillMount","state","constructor","getDerivedStateFromProps","props","undefined","setState","componentWillReceiveProps","nextProps","updater","prevState","bind","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","Object","defineProperty","value","__suppressDeprecationWarning","polyfill","Component","prototype","isReactComponent","Error","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","displayName","name","newApiName","componentDidUpdate","prototype.componentDidUpdate","maybeSnapshot","call","snapshot"]
}
