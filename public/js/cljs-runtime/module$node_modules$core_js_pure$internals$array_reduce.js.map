{
"version":3,
"file":"module$node_modules$core_js_pure$internals$array_reduce.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,uDAAf,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACpH,IAAIC,UAAYH,OAAA,CAAQ,uDAAR,CAAhB,CACII,SAAWJ,OAAA,CAAQ,sDAAR,CADf,CAEIK,cAAgBL,OAAA,CAAQ,2DAAR,CAFpB,CAGIM,SAAWN,OAAA,CAAQ,sDAAR,CAGXO,OAAAA,CAAeA,QAAS,CAACC,QAAD,CAAW,CACrC,MAAO,SAAS,CAACC,IAAD,CAAOC,UAAP,CAAmBC,eAAnB,CAAoCC,IAApC,CAA0C,CACxDT,SAAA,CAAUO,UAAV,CACIG;IAAAA,CAAIT,QAAA,CAASK,IAAT,CACR,KAAIK,KAAOT,aAAA,CAAcQ,IAAd,CAAX,CACIE,OAAST,QAAA,CAASO,IAAT,CAAWE,MAAX,CADb,CAEIC,MAAQR,QAAA,CAAWO,MAAX,CAAoB,CAApB,CAAwB,CAFpC,CAGIE,EAAIT,QAAA,CAAW,EAAX,CAAgB,CACxB,IAAsB,CAAtB,CAAIG,eAAJ,CAAyB,IAAA,CAAA,CAAA,CAAa,CACpC,GAAIK,KAAJ,GAAaF,KAAb,CAAmB,CACjBF,IAAA,CAAOE,IAAA,CAAKE,KAAL,CACPA,MAAA,EAASC,CACT,MAHiB,CAKnBD,KAAA,EAASC,CACT,IAAIT,QAAA,CAAmB,CAAnB,CAAWQ,KAAX,CAAuBD,MAAvB,EAAiCC,KAArC,CACE,KAAME,UAAA,CAAU,6CAAV,CAAN,CARkC,CAWtC,IAAA,CAAMV,QAAA,CAAoB,CAApB,EAAWQ,KAAX,CAAwBD,MAAxB,CAAiCC,KAAvC,CAA8CA,KAA9C,EAAuDC,CAAvD,CAA8DD,KAAJ,GAAaF,KAAb,GACxDF,IADwD,CACjDF,UAAA,CAAWE,IAAX,CAAiBE,IAAA,CAAKE,KAAL,CAAjB,CAA8BA,KAA9B,CAAqCH,IAArC,CADiD,CAG1D,OAAOD,KArBiD,CADrB,CA0BvCX,OAAA,CAAOC,OAAP,CAAiB,CAGfiB,KAAMZ,MAAA,CAAa,CAAA,CAAb,CAHS,CAMfa,MAAOb,MAAA,CAAa,CAAA,CAAb,CANQ,CAjCmG;",
"sources":["node_modules/core-js-pure/internals/array-reduce.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$core_js_pure$internals$array_reduce\"] = function(global,require,module,exports) {\nvar aFunction = require('../internals/a-function');\nvar toObject = require('../internals/to-object');\nvar IndexedObject = require('../internals/indexed-object');\nvar toLength = require('../internals/to-length');\n\n// `Array.prototype.{ reduce, reduceRight }` methods implementation\nvar createMethod = function (IS_RIGHT) {\n  return function (that, callbackfn, argumentsLength, memo) {\n    aFunction(callbackfn);\n    var O = toObject(that);\n    var self = IndexedObject(O);\n    var length = toLength(O.length);\n    var index = IS_RIGHT ? length - 1 : 0;\n    var i = IS_RIGHT ? -1 : 1;\n    if (argumentsLength < 2) while (true) {\n      if (index in self) {\n        memo = self[index];\n        index += i;\n        break;\n      }\n      index += i;\n      if (IS_RIGHT ? index < 0 : length <= index) {\n        throw TypeError('Reduce of empty array with no initial value');\n      }\n    }\n    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {\n      memo = callbackfn(memo, self[index], index, O);\n    }\n    return memo;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.reduce` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.reduce\n  left: createMethod(false),\n  // `Array.prototype.reduceRight` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.reduceright\n  right: createMethod(true)\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","aFunction","toObject","IndexedObject","toLength","createMethod","IS_RIGHT","that","callbackfn","argumentsLength","memo","O","self","length","index","i","TypeError","left","right"]
}
