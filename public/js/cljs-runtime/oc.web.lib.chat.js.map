{"version":3,"sources":["oc/web/lib/chat.cljs"],"mappings":";AAMA,AAAA,AAAMA;AAAN,AACE,AAAM,AAAA,AAACC;AAAP,AACE,AAAAC,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAA,AAAA;AAAA,AAAA,AAAA;;AACA,AAAA,AAAA,AAACC;AAAD,AAAkB,AAAMC,AAAK,AAACC;AACNC,AAAQ,AAAA,AAAUF;AAClBG,AAAI,AAACC;AAFX,AAGC,AAAA,AAAWC,AACT,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC,AACkBJ,AACG,AAAA,AAAaF,AACnB,AAAA,AAACL,AACA,AAAA,AAAQK,AACF,AAACO,AAAE,AAAA,AAAA,AAAA,AAAIJ,AAAsBD,AAG7B,AAAA,AAAa,AAAA,AAAaF,AAGjC,AAAA,AAAOG,AACL,AAAA,AAAOA,AACD,AAAA,AAAaA,AAGjB,AAAA,AAAWH;;;AAtBtD","names":["oc.web.lib.chat/identify","oc.web.lib.jwt/get-key","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","oc.web.lib.utils/after","user","oc.web.dispatcher.current_user_data","user-id","org","oc.web.dispatcher.org_data","js/window","cljs.core/clj->js","cljs.core._EQ_"],"sourcesContent":["(ns oc.web.lib.chat\n  (:require [oc.web.dispatcher :as dispatcher]\n            [oc.web.lib.jwt :as jwt]\n            [oc.web.lib.utils :as utils]\n            [taoensso.timbre :as timbre]))\n\n(defn identify []\n  (when (jwt/get-key :email)\n    (timbre/info \"Identify user to Intercom\")\n    (utils/after 100 #(let [user (dispatcher/current-user-data)\n                            user-id (:user-id user)\n                            org (dispatcher/org-data)]\n                       (.Intercom js/window \"update\"\n                         (clj->js {; Intercom standard\n                                   :user_id user-id\n                                   :created_at (:created-at user)\n                                   :name (jwt/get-key :name)\n                                   :email (:email user)\n                                   :org_author? (= (-> org :author :user-id) user-id)\n                                   :avatar {\n                                     :type :avatar\n                                     :image_url (:avatar-url (:avatar-url user))\n                                   }\n                                   :company {\n                                     :id (:slug org)\n                                     :name (:name org)\n                                     :created_at (:created-at org)\n                                    }\n                                   ; custom\n                                   :timezone (:timezone user)}))))))"]}