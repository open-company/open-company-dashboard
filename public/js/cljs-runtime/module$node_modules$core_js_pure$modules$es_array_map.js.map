{
"version":3,
"file":"module$node_modules$core_js_pure$modules$es_array_map.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,qDAAf,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE9GC,MAAAA,CAAIH,OAAA,CAAQ,mDAAR,CACR,KAAII,KAAOJ,OAAA,CAAQ,4DAAR,CAAPI,CAA+CC,GAC/CC,OAAAA,CAA+BN,OAAA,CAAQ,6EAAR,CAC/BO,QAAAA,CAA0BP,OAAA,CAAQ,wEAAR,CAE1BQ,OAAAA,CAAsBF,MAAA,CAA6B,KAA7B,CAEtBG,QAAAA,CAAiBF,OAAA,CAAwB,KAAxB,CAKrBJ,OAAA,CAAE,CAAEO,OAAQ,OAAV;AAAmBC,MAAO,CAAA,CAA1B,CAAgCC,OAAQ,CAACJ,MAATI,EAAgC,CAACH,OAAjE,CAAF,CAAqF,CACnFJ,IAAKA,QAAY,CAACQ,UAAD,CAA6B,CAC5C,MAAOT,KAAA,CAAK,IAAL,CAAWS,UAAX,CAA0C,CAAnB,CAAAC,SAAA,CAAUC,MAAV,CAAuBD,SAAA,CAAU,CAAV,CAAvB,CAAsCE,IAAAA,EAA7D,CADqC,CADqC,CAArF,CAdkH;",
"sources":["node_modules/core-js-pure/modules/es.array.map.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$core_js_pure$modules$es_array_map\"] = function(global,require,module,exports) {\n'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n// FF49- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('map');\n\n// `Array.prototype.map` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","$","$map","map","arrayMethodHasSpeciesSupport","arrayMethodUsesToLength","HAS_SPECIES_SUPPORT","USES_TO_LENGTH","target","proto","forced","callbackfn","arguments","length","undefined"]
}
