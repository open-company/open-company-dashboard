{
"version":3,
"file":"module$node_modules$$sentry$browser$dist$transports$fetch.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/@sentry/browser/dist/transports/fetch.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sentry$browser$dist$transports$fetch\"] = function(global,require,module,exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@sentry/core\");\nvar types_1 = require(\"@sentry/types\");\nvar utils_1 = require(\"@sentry/utils\");\nvar base_1 = require(\"./base\");\nvar global = utils_1.getGlobalObject();\n/** `fetch` based transport */\nvar FetchTransport = /** @class */ (function (_super) {\n    tslib_1.__extends(FetchTransport, _super);\n    function FetchTransport() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** Locks transport after receiving 429 response */\n        _this._disabledUntil = new Date(Date.now());\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    FetchTransport.prototype.sendEvent = function (event) {\n        var _this = this;\n        if (new Date(Date.now()) < this._disabledUntil) {\n            return Promise.reject({\n                event: event,\n                reason: \"Transport locked till \" + this._disabledUntil + \" due to too many requests.\",\n                status: 429,\n            });\n        }\n        var sentryReq = core_1.eventToSentryRequest(event, this._api);\n        var options = {\n            body: sentryReq.body,\n            method: 'POST',\n            // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n            // https://caniuse.com/#feat=referrer-policy\n            // It doesn't. And it throw exception instead of ignoring this parameter...\n            // REF: https://github.com/getsentry/raven-js/issues/1233\n            referrerPolicy: (utils_1.supportsReferrerPolicy() ? 'origin' : ''),\n        };\n        if (this.options.fetchParameters !== undefined) {\n            Object.assign(options, this.options.fetchParameters);\n        }\n        if (this.options.headers !== undefined) {\n            options.headers = this.options.headers;\n        }\n        return this._buffer.add(new utils_1.SyncPromise(function (resolve, reject) {\n            global\n                .fetch(sentryReq.url, options)\n                .then(function (response) {\n                var status = types_1.Status.fromHttpCode(response.status);\n                if (status === types_1.Status.Success) {\n                    resolve({ status: status });\n                    return;\n                }\n                if (status === types_1.Status.RateLimit) {\n                    var now = Date.now();\n                    /**\n                     * \"The name is case-insensitive.\"\n                     * https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n                     */\n                    var retryAfterHeader = response.headers.get('Retry-After');\n                    _this._disabledUntil = new Date(now + utils_1.parseRetryAfterHeader(now, retryAfterHeader));\n                    utils_1.logger.warn(\"Too many requests, backing off till: \" + _this._disabledUntil);\n                }\n                reject(response);\n            })\n                .catch(reject);\n        }));\n    };\n    return FetchTransport;\n}(base_1.BaseTransport));\nexports.FetchTransport = FetchTransport;\n//# sourceMappingURL=fetch.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","tslib_1","core_1","types_1","utils_1","base_1","getGlobalObject","FetchTransport","_super","_this","apply","arguments","_disabledUntil","Date","now","__extends","prototype","sendEvent","FetchTransport.prototype.sendEvent","event","Promise","reject","reason","status","sentryReq","eventToSentryRequest","_api","options","body","method","referrerPolicy","supportsReferrerPolicy","undefined","fetchParameters","assign","headers","_buffer","add","SyncPromise","resolve","fetch","url","then","response","Status","fromHttpCode","Success","RateLimit","retryAfterHeader","get","parseRetryAfterHeader","logger","warn","catch","BaseTransport"]
}
