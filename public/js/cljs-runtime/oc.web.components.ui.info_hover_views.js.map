{"version":3,"sources":["oc/web/components/ui/info_hover_views.cljs"],"mappings":"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","names":["rum.core/build-defc","p__38938","map__38939","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","js/React.createElement","sablono.util/join-classes","attrs38941","cljs.core/map?","sablono.interpreter/attributes","sablono.normalize.merge_with_class","sablono.interpreter/interpret","attrs38942","p1__38937#","oc.web.components.ui.info-hover-views/board-info-view","rum.core/static","activity-data","above?","following","followers-count","oc.web.lib.utils/class-set","cljs.core.not_EQ_","oc.web.lib.utils/event-stop","oc.web.actions.nav_sidebar.nav_to_url_BANG_","oc.web.urls.board","G__38943","oc.web.components.ui.follow-button/follow-button","p__38945","map__38946","attrs38948","attrs38951","attrs38952","attrs38953","attrs38954","oc.web.components.ui.info-hover-views/user-info-view","user-data","user-id","my-profile?","hide-buttons","otf","inline?","hide-last-name?","timezone-location-string","oc.web.utils.user/timezone-location-string","G__38949","G__38950","oc.web.components.ui.user-avatar/user-avatar-image","and__4115__auto__","cljs.core/seq","p1__38944#","oc.web.actions.nav_sidebar.nav_to_author_BANG_","oc.web.urls.contributions","p__38955","map__38956","oc.web.components.ui.info-hover-views/user-info-otf","portal-el","props","cljs.core/not","oc.web.lib.responsive/is-mobile-size?","viewport-size","oc.web.utils.dom/viewport-size","pos","oc.web.utils.dom/viewport-offset","next-props","cljs.core.merge","rum.core/portal","G__38958","cljs.core.assoc","oc.web.components.ui.info-hover-views/default-positioning","oc.web.components.ui.info-hover-views/popup-size","oc.web.components.ui.info-hover-views/padding","oc.web.components.ui.info-hover-views/popup-offset","oc.web.lib.responsive/navbar-height","oc.web.components.ui.info-hover-views/check-hover","s","parent-el","vertical-position","horizontal-offset","oc.web.components.ui.info-hover-views/enter!","cljs.core/reset!","cljs.core/compare-and-set!","oc.web.components.ui.info-hover-views/leave!","oc.web.components.ui.info-hover-views/enter-ev","cljs.core/first","cljs.core/deref","js/window","oc.web.components.ui.info-hover-views/leave-ev","oc.web.components.ui.info-hover-views/click","e","rum.core/build-defcs","p__38968","map__38969","p1__38965#","oc.web.components.ui.info-hover-views/user-info-hover","rum.core/reactive","org.martinklepsch.derivatives.drv","rum.core.local","temp__33777__auto__","el","rum.core/dom-node","goog.events/listen","goog.events.EventType/CLICK","cljs.core.partial","goog.events.EventType/MOUSEENTER","goog.events.EventType/MOUSELEAVE","goog.events/unlistenByKey","disabled","current-user-id","leave-delay?","cljs.core._EQ_","users-info","org.martinklepsch.derivatives/react","active-user-data","complete-user-data","follow-publishers-list","cljs.core/set","cljs.core.map","following?","G__38979","followers-publishers-count","oc.web.lib.utils/button-clicked?","G__38980","p__38997","map__38998","p1__38996#","oc.web.components.ui.info-hover-views/board-info-hover","follow-boards-list","G__39003","followers-boards-count","G__39004"],"sourcesContent":["(ns oc.web.components.ui.info-hover-views\n  (:require-macros [if-let.core :refer (when-let*)])\n  (:require [rum.core :as rum]\n            [goog.events :as events]\n            [goog.events.EventType :as EventType]\n            [org.martinklepsch.derivatives :as drv]\n            [oc.web.urls :as oc-urls]\n            [oc.web.lib.utils :as utils]\n            [oc.web.utils.dom :as dom-utils]\n            [oc.web.utils.user :as user-utils]\n            [oc.web.lib.responsive :as responsive]\n            [oc.web.actions.user :as user-actions]\n            [oc.web.actions.nav-sidebar :as nav-actions]\n            [oc.web.components.ui.follow-button :refer (follow-button)]\n            [oc.web.components.ui.user-avatar :refer (user-avatar-image)]))\n\n(rum/defc board-info-view < rum/static\n  [{:keys [activity-data above? following followers-count]}]\n  [:div.board-info-view\n    {:class (utils/class-set {:above above?})}\n    [:div.board-info-header\n      [:div.board-info-right\n        [:div.board-info-name\n          (:board-name activity-data)]\n        [:div.board-info-subline\n          (when (pos? followers-count)\n            (str followers-count \" follower\" (when (not= followers-count 1) \"s\")))]]]\n    [:div.board-info-buttons.group\n      [:button.mlb-reset.posts-bt\n        {:on-click #(do\n                      (utils/event-stop %)\n                      (nav-actions/nav-to-url! % (:board-slug activity-data) (oc-urls/board (:board-slug activity-data))))}\n        \"Posts\"]\n      (follow-button {:following following\n                      :resource-type :board\n                      :resource-uuid (:board-uuid activity-data)})]])\n\n(rum/defc user-info-view < rum/static\n  [{:keys [user-data user-id my-profile? hide-buttons otf above? inline? following followers-count hide-last-name?]}]\n  (let [timezone-location-string (user-utils/timezone-location-string user-data)]\n    [:div.user-info-view\n      {:class (utils/class-set {:otf otf\n                                :inline inline?\n                                :above above?})}\n      [:div.user-info-header\n        (user-avatar-image user-data {:preferred-avatar-size 96})\n        [:div.user-info-right\n          [:div.user-info-name\n            (if (and hide-last-name?\n                     (seq (:first-name user-data)))\n              (:first-name user-data)\n              (:name user-data))]\n          (when (seq (:title user-data))\n            [:div.user-info-line\n              (:title user-data)])\n          (cond\n            (seq timezone-location-string)\n            [:div.user-info-subline\n              timezone-location-string]\n            (seq (:slack-username user-data))\n            [:div.user-info-subline.slack-icon\n              (:slack-username user-data)]\n            (seq (:email user-data))\n            [:div.user-info-subline\n              (:email user-data)])\n          [:div.user-info-subline\n            (when (pos? followers-count)\n              (str followers-count \" follower\" (when (not= followers-count 1) \"s\")))]\n          (when-not hide-buttons\n            [:button.mlb-reset.profile-bt\n              {:on-click #(nav-actions/nav-to-author! % (:user-id user-data) (oc-urls/contributions (:user-id user-data)))}\n              \"View profile and posts\"])]]\n      ; (when-not hide-buttons\n      ;   [:div.user-info-buttons.group\n      ;     [:button.mlb-reset.posts-bt\n      ;       {:on-click #(nav-actions/nav-to-author! % (:user-id user-data) (oc-urls/contributions (:user-id user-data)))}\n      ;       \"Posts\"]\n      ;     [:button.mlb-reset.profile-bt\n      ;       {:on-click #(nav-actions/show-user-info (:user-id user-data))}\n      ;       \"Profile\"]\n      ;     ; (when-not my-profile?\n      ;     ;   (follow-button {:following following :resource-type :user :resource-uuid (:user-id user-data)}))\n      ;     ])\n      ]))\n\n(rum/defc user-info-otf < rum/static\n  [{:keys [portal-el] :as props}]\n  (when (and (not (responsive/is-mobile-size?))\n             portal-el\n             (.-parentElement portal-el))\n    (let [viewport-size (dom-utils/viewport-size)\n          pos (dom-utils/viewport-offset portal-el)\n          above? (>= (:y pos) (/ (:height viewport-size) 2))\n          next-props (merge props {:above? above?\n                                   :otf true})]\n      (rum/portal (user-info-view (assoc next-props :above? above?)) portal-el))))\n\n(def ^:private default-positioning {:vertical-position nil :horizontal-position nil})\n\n(def ^:private popup-size\n  {:width 200\n   :height 211})\n\n(def ^:private padding 16)\n\n(def ^:private popup-offset\n  {:x padding\n   :y (+ padding responsive/navbar-height)})\n\n(defn- check-hover [s parent-el]\n  (let [pos (dom-utils/viewport-offset parent-el)\n        vertical-position (if (> (- (:y pos) (:y popup-offset)) (:height popup-size))\n                            :above\n                            :below)\n        horizontal-offset (if (> (:x pos) (:x popup-offset))\n                            0\n                            (if (neg? (:x pos))\n                              (+ (* (:x pos) -1) (:x popup-offset))\n                              (- (:x popup-offset) (:x pos))))]\n    {:vertical-position vertical-position\n     :horizontal-offset horizontal-offset}))\n\n(defn- enter! [s parent-el]\n  (reset! (::enter-timeout s) nil)\n  (when (compare-and-set! (::hovering s) false true)\n    (reset! (::positioning s) (check-hover s parent-el))))\n\n(defn- leave! [s]\n  (when (compare-and-set! (::hovering s) true false)\n    (reset! (::positioning s) default-positioning)))\n\n(defn- enter-ev [s parent-el]\n  (when-not (-> s :rum/args first :disabled)\n    (.clearTimeout js/window @(::enter-timeout s))\n    (.clearTimeout js/window @(::leave-timeout s))\n    (reset! (::enter-timeout s) (.setTimeout js/window #(enter! s parent-el) 500))))\n\n(defn- leave-ev [s]\n  (when-not (-> s :rum/args first :disabled)\n    (.clearTimeout js/window @(::enter-timeout s))\n    (.clearTimeout js/window @(::leave-timeout s))\n    (if (-> s :rum/args first :leave-delay?)\n      (reset! (::leave-timeout s) (.setTimeout js/window #(leave! s) 500))\n      (leave! s))))\n\n(defn- click [s e]\n  (let [user-id (-> s :rum/args first :user-data :user-id)]\n    (nav-actions/nav-to-author! e user-id (oc-urls/contributions user-id))))\n\n(rum/defcs user-info-hover <\n  rum/static\n  rum/reactive\n  (drv/drv :users-info-hover)\n  (drv/drv :follow-publishers-list)\n  (drv/drv :followers-publishers-count)\n  (rum/local nil ::mouse-enter)\n  (rum/local nil ::mouse-leave)\n  (rum/local nil ::click)\n  (rum/local default-positioning ::positioning)\n  (rum/local false ::hovering)\n  (rum/local nil ::enter-timeout)\n  (rum/local nil ::leave-timeout)\n  {:did-mount (fn [s]\n   (when-let* [el (rum/dom-node s)\n               parent-el (.-parentElement el)]\n    (if (responsive/is-mobile-size?)\n      (reset! (::click s) (events/listen parent-el EventType/CLICK\n       (partial click s)))\n      (do\n        (reset! (::mouse-enter s) (events/listen parent-el EventType/MOUSEENTER\n         #(enter-ev s parent-el)))\n        (reset! (::mouse-leave s) (events/listen parent-el EventType/MOUSELEAVE\n         #(leave-ev s))))))\n   s)\n   :will-unmount (fn [s]\n    (when @(::mouse-enter s)\n      (events/unlistenByKey @(::mouse-enter s))\n      (reset! (::mouse-enter s) nil))\n    (when @(::mouse-leave s)\n      (events/unlistenByKey @(::mouse-leave s))\n      (reset! (::mouse-leave s) nil))\n    (when @(::click s)\n      (events/unlistenByKey @(::click s))\n      (reset! (::click s) nil))\n    s)}\n  [s {:keys [disabled user-data current-user-id leave-delay?]}]\n  ;; Return an empty DOM for mobile since we don't show the hover popup\n  (if (responsive/is-mobile-size?)\n    [:div.info-hover-view]\n    (let [my-profile? (= (:user-id user-data) current-user-id)\n          pos @(::positioning s)\n          users-info (drv/react s :users-info-hover)\n          active-user-data (get users-info (:user-id user-data))\n          complete-user-data (merge user-data active-user-data)\n          follow-publishers-list (set (map :user-id (drv/react s :follow-publishers-list)))\n          following? (follow-publishers-list (:user-id user-data))\n          followers-publishers-count (drv/react s :followers-publishers-count)\n          followers-count (get followers-publishers-count (:user-id user-data))]\n      [:div.info-hover-view\n        {:class (utils/class-set {:show @(::hovering s)\n                                  (:vertical-position pos) true})\n         :on-click #(when-not (utils/button-clicked? %)\n                      (utils/event-stop %))\n         :style {:margin-left (str (:horizontal-offset pos) \"px\")}}\n        (user-info-view {:user-data complete-user-data\n                         :inline? (not active-user-data)\n                         :hide-buttons (not active-user-data)\n                         :my-profile? my-profile?\n                         :following following?\n                         :followers-count (:count followers-count)})])))\n\n(rum/defcs board-info-hover <\n  rum/static\n  rum/reactive\n  (drv/drv :org-data)\n  (drv/drv :follow-boards-list)\n  (drv/drv :followers-boards-count)\n  (rum/local nil ::mouse-enter)\n  (rum/local nil ::mouse-leave)\n  (rum/local nil ::click)\n  (rum/local default-positioning ::positioning)\n  (rum/local false ::hovering)\n  (rum/local nil ::enter-timeout)\n  (rum/local nil ::leave-timeout)\n  {:did-mount (fn [s]\n   (when-let* [el (rum/dom-node s)\n               parent-el (.-parentElement el)]\n    (if (responsive/is-mobile-size?)\n      (reset! (::click s) (events/listen parent-el EventType/CLICK\n       (partial click s)))\n      (do\n        (reset! (::mouse-enter s) (events/listen parent-el EventType/MOUSEENTER\n         #(enter-ev s parent-el)))\n        (reset! (::mouse-leave s) (events/listen parent-el EventType/MOUSELEAVE\n         #(leave-ev s))))))\n   s)\n   :will-unmount (fn [s]\n    (when @(::mouse-enter s)\n      (events/unlistenByKey @(::mouse-enter s))\n      (reset! (::mouse-enter s) nil))\n    (when @(::mouse-leave s)\n      (events/unlistenByKey @(::mouse-leave s))\n      (reset! (::mouse-leave s) nil))\n    (when @(::click s)\n      (events/unlistenByKey @(::click s))\n      (reset! (::click s) nil))\n    s)}\n  [s {:keys [disabled activity-data leave-delay?]}]\n  ;; Return an empty DOM for mobile since we don't show the hover popup\n  (if (responsive/is-mobile-size?)\n    [:div.info-hover-view]\n    (let [pos @(::positioning s)\n          follow-boards-list (set (map :uuid (drv/react s :follow-boards-list)))\n          following? (follow-boards-list (:board-uuid activity-data))\n          followers-boards-count (drv/react s :followers-boards-count)\n          followers-count (get followers-boards-count (:board-uuid activity-data))]\n      [:div.info-hover-view\n        {:class (utils/class-set {:show @(::hovering s)\n                                  (:vertical-position pos) true})\n         :on-click #(when-not (utils/button-clicked? %)\n                      (utils/event-stop %))\n         :style {:margin-left (str (:horizontal-offset pos) \"px\")}}\n        (board-info-view {:activity-data activity-data\n                          :following following?\n                          :followers-count (:count followers-count)})])))\n"]}