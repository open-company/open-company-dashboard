{"version":3,"sources":["oc/web/components/ui/stream_attachments.cljs"],"mappings":"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","names":["rum.core/build-defcs","sablono.interpreter/interpret","oc.web.components.ui.stream-attachments/stream-attachments","rum.core/reactive","rum.core.local","org.martinklepsch.derivatives.drv","s","attachments","expand-cb","remove-cb","atc-num","cljs.core/count","editable?","cljs.core/fn?","show-all?","is-mobile?","oc.web.lib.responsive/is-tablet-or-mobile?","attachments-num","attachments-list","cljs.core.take","should-show-expand?","attachment-uploading","org.martinklepsch.derivatives/react","or__4126__auto__","oc.web.components.ui.small-loading/small-loading","iter__4529__auto__","s__39446","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","b__39449","cljs.core/chunk-buffer","i__39447","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__39445","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","idx","cljs.core.range","atch","cljs.core.nth","atch-key","created-at","file-name","size","subtitle","clojure.string/lower-case","clojure.contrib.humanize.filesize","oc.web.lib.utils/hide-class","p1__39443#","oc.web.lib.utils/event-stop","oc.web.lib.utils/remove-tooltips","cljs.core/chunk-first"],"sourcesContent":["(ns oc.web.components.ui.stream-attachments\n  (:require [rum.core :as rum]\n            [org.martinklepsch.derivatives :as drv]\n            [oc.web.lib.utils :as utils]\n            [oc.web.utils.activity :as au]\n            [oc.web.lib.responsive :as responsive]\n            [oc.web.components.ui.small-loading :refer (small-loading)]\n            [clojure.contrib.humanize :refer (filesize)]\n            [goog.events :as events]\n            [goog.events.EventType :as EventType]))\n\n(rum/defcs stream-attachments < rum/reactive\n                                (rum/local false ::attachments-dropdown)\n                                (drv/drv :attachment-uploading)\n  [s attachments expand-cb remove-cb]\n  (let [atc-num (count attachments)\n        editable? (fn? remove-cb)\n        show-all? (not (fn? expand-cb))\n        is-mobile? (responsive/is-tablet-or-mobile?)\n        attachments-num (if show-all?\n                          (count attachments)\n                          (if is-mobile? 1 2))\n        attachments-list (if show-all?\n                           attachments\n                           (take attachments-num attachments))\n        should-show-expand? (> (count attachments) (count attachments-list))\n        attachment-uploading (drv/react s :attachment-uploading)]\n    (when (or (pos? atc-num)\n              attachment-uploading)\n      [:div.stream-attachments\n        [:div.stream-attachments-content.group\n          {:class (when-not show-all? \"collapsed\")}\n          (when attachment-uploading\n            [:div.stream-attachments-item.group\n              (small-loading)\n              [:span.attachment-uploading (str \"Uploading \" (or (:progress attachment-uploading) 0) \"%...\")]])\n          (for [idx (range (count attachments-list))\n                :let [atch (nth attachments-list idx)\n                      atch-key (str \"attachment-\" idx \"-\" (:file-url atch))\n                      created-at (:created-at atch)\n                      file-name (:file-name atch)\n                      size (:file-size atch)\n                      subtitle (when size\n                                 (clojure.string/lower-case (str \"(\" (filesize size :binary false :format \"%.2f\") \")\")))]]\n            [:div.stream-attachments-item.group\n              {:key atch-key}\n              [:a.group\n                {:href (:file-url atch)\n                 :target \"_blank\"}\n                [:div.attachment-info.group\n                  {:class (when editable? \"editable\")}\n                  [:div.attachment-icon]\n                  [:div.attachment-labels\n                    {:class (when editable? \"edit\")}\n                    [:span.attachment-name\n                      {:class utils/hide-class}\n                      file-name]\n                    [:span.attachment-description subtitle]]\n                  (when editable?\n                    [:button.mlb-reset.remove-attachment-bt\n                      {:data-toggle (when-not is-mobile? \"\" \"tooltip\")\n                       :data-placement \"top\"\n                       :data-container \"body\"\n                       :data-delay \"{\\\"show\\\":\\\"500\\\", \\\"hide\\\":\\\"0\\\"}\"\n                       :title \"Remove attachment\"\n                       :on-click #(do\n                                    (utils/event-stop %)\n                                    (utils/remove-tooltips)\n                                    (when (fn? remove-cb)\n                                      (remove-cb atch)))}])]]])\n          (when should-show-expand?\n            [:div.stream-attachments-show-more\n              {:on-click expand-cb}\n              (str \"+ \" (- (count attachments) (count attachments-list)) \" more\")])]])))"]}