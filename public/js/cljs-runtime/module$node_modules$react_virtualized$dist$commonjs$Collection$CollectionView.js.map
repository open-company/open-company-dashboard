{
"version":3,
"file":"module$node_modules$react_virtualized$dist$commonjs$Collection$CollectionView.js",
"lineCount":24,
"mappings":"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",
"sources":["node_modules/react-virtualized/dist/commonjs/Collection/CollectionView.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_virtualized$dist$commonjs$Collection$CollectionView\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _clsx = require('clsx');\n\nvar _clsx2 = _interopRequireDefault(_clsx);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _reactLifecyclesCompat = require('react-lifecycles-compat');\n\nvar _createCallbackMemoizer = require('../utils/createCallbackMemoizer');\n\nvar _createCallbackMemoizer2 = _interopRequireDefault(_createCallbackMemoizer);\n\nvar _scrollbarSize = require('dom-helpers/scrollbarSize');\n\nvar _scrollbarSize2 = _interopRequireDefault(_scrollbarSize);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nvar IS_SCROLLING_TIMEOUT = 150;\n\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView = function (_React$PureComponent) {\n  (0, _inherits3.default)(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _ref;\n\n    (0, _classCallCheck3.default)(this, CollectionView);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = CollectionView.__proto__ || (0, _getPrototypeOf2.default)(CollectionView)).call.apply(_ref, [this].concat(args)));\n\n    _this.state = {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    };\n    _this._calculateSizeAndPositionDataOnNextUpdate = false;\n    _this._onSectionRenderedMemoizer = (0, _createCallbackMemoizer2.default)();\n    _this._onScrollMemoizer = (0, _createCallbackMemoizer2.default)(false);\n\n    _this._invokeOnSectionRenderedHelper = function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    };\n\n    _this._setScrollingContainerRef = function (ref) {\n      _this._scrollingContainer = ref;\n    };\n\n    _this._updateScrollPositionForScrollToCell = function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    };\n\n    _this._onScroll = function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      }\n\n      // Prevent pointer events from interrupting a smooth scroll\n      _this._enablePointerEventsAfterDelay();\n\n      // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop));\n\n      // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED;\n\n        // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    };\n\n    _this._scrollbarSize = (0, _scrollbarSize2.default)();\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n    return _this;\n  }\n\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  (0, _createClass3.default)(CollectionView, [{\n    key: 'recomputeCellSizesAndPositions',\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props = this.props,\n          cellLayoutManager = _props.cellLayoutManager,\n          scrollLeft = _props.scrollLeft,\n          scrollToCell = _props.scrollToCell,\n          scrollTop = _props.scrollTop;\n\n      // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = (0, _scrollbarSize2.default)();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({ scrollLeft: scrollLeft, scrollTop: scrollTop });\n      }\n\n      // Update onSectionRendered callback.\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width;\n\n      // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _props2 = this.props,\n          height = _props2.height,\n          scrollToAlignment = _props2.scrollToAlignment,\n          scrollToCell = _props2.scrollToCell,\n          width = _props2.width;\n      var _state = this.state,\n          scrollLeft = _state.scrollLeft,\n          scrollPositionChangeReason = _state.scrollPositionChangeReason,\n          scrollTop = _state.scrollTop;\n\n      // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      }\n\n      // Update scroll offsets if the current :scrollToCell values requires it\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      }\n\n      // Update onRowsRendered callback if start/stop indices have changed\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props3 = this.props,\n          autoHeight = _props3.autoHeight,\n          cellCount = _props3.cellCount,\n          cellLayoutManager = _props3.cellLayoutManager,\n          className = _props3.className,\n          height = _props3.height,\n          horizontalOverscanSize = _props3.horizontalOverscanSize,\n          id = _props3.id,\n          noContentRenderer = _props3.noContentRenderer,\n          style = _props3.style,\n          verticalOverscanSize = _props3.verticalOverscanSize,\n          width = _props3.width;\n      var _state2 = this.state,\n          isScrolling = _state2.isScrolling,\n          scrollLeft = _state2.scrollLeft,\n          scrollTop = _state2.scrollTop;\n\n      // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width;\n\n      // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      };\n\n      // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0;\n\n      // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n\n      return React.createElement(\n        'div',\n        {\n          ref: this._setScrollingContainerRef,\n          'aria-label': this.props['aria-label'],\n          className: (0, _clsx2.default)('ReactVirtualized__Collection', className),\n          id: id,\n          onScroll: this._onScroll,\n          role: 'grid',\n          style: (0, _extends3.default)({}, collectionStyle, style),\n          tabIndex: 0 },\n        cellCount > 0 && React.createElement(\n          'div',\n          {\n            className: 'ReactVirtualized__Collection__innerScrollContainer',\n            style: {\n              height: totalHeight,\n              maxHeight: totalHeight,\n              maxWidth: totalWidth,\n              overflow: 'hidden',\n              pointerEvents: isScrolling ? 'none' : '',\n              width: totalWidth\n            } },\n          childrenToDisplay\n        ),\n        cellCount === 0 && noContentRenderer()\n      );\n    }\n\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: '_enablePointerEventsAfterDelay',\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n\n\n        isScrollingChange(false);\n\n        _this2._disablePointerEventsTimeoutId = null;\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: '_invokeOnScrollMemoizer',\n    value: function _invokeOnScrollMemoizer(_ref2) {\n      var _this3 = this;\n\n      var scrollLeft = _ref2.scrollLeft,\n          scrollTop = _ref2.scrollTop,\n          totalHeight = _ref2.totalHeight,\n          totalWidth = _ref2.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref3) {\n          var scrollLeft = _ref3.scrollLeft,\n              scrollTop = _ref3.scrollTop;\n          var _props4 = _this3.props,\n              height = _props4.height,\n              onScroll = _props4.onScroll,\n              width = _props4.width;\n\n\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: '_setScrollPosition',\n    value: function _setScrollPosition(_ref4) {\n      var scrollLeft = _ref4.scrollLeft,\n          scrollTop = _ref4.scrollTop;\n\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n  return CollectionView;\n}(React.PureComponent);\n\nCollectionView.defaultProps = {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n};\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': _propTypes2.default.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: _propTypes2.default.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: _propTypes2.default.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: _propTypes2.default.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: _propTypes2.default.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: _propTypes2.default.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: _propTypes2.default.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: _propTypes2.default.number.isRequired,\n\n  isScrollingChange: _propTypes2.default.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: _propTypes2.default.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: _propTypes2.default.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: _propTypes2.default.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: _propTypes2.default.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: _propTypes2.default.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: _propTypes2.default.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: _propTypes2.default.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: _propTypes2.default.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: _propTypes2.default.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: _propTypes2.default.number.isRequired\n} : {};\n\n\n(0, _reactLifecyclesCompat.polyfill)(CollectionView);\n\nexports.default = CollectionView;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_extends2","_extends3","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","_clsx","_clsx2","_propTypes","_propTypes2","React","_interopRequireWildcard","newObj","key","prototype","hasOwnProperty","call","_react","_reactLifecyclesCompat","_createCallbackMemoizer","_createCallbackMemoizer2","_scrollbarSize","_scrollbarSize2","CollectionView","_React$PureComponent","_ref","_len","arguments","length","args","Array","_key","_this","__proto__","apply","concat","state","isScrolling","scrollLeft","scrollTop","_calculateSizeAndPositionDataOnNextUpdate","_onSectionRenderedMemoizer","_onScrollMemoizer","_invokeOnSectionRenderedHelper","_this._invokeOnSectionRenderedHelper","_this$props","props","callback","onSectionRendered","indices","cellLayoutManager","getLastRenderedIndices","_setScrollingContainerRef","_this._setScrollingContainerRef","ref","_scrollingContainer","_updateScrollPositionForScrollToCell","_this._updateScrollPositionForScrollToCell","_this$props2","height","scrollToAlignment","scrollToCell","width","_this$state","scrollPosition","getScrollPositionForCell","align","cellIndex","_setScrollPosition","_onScroll","_this._onScroll","event","target","_enablePointerEventsAfterDelay","_this$props3","isScrollingChange","scrollbarSize","_cellLayoutManager$ge","getTotalSize","totalHeight","totalWidth","Math","max","min","scrollPositionChangeReason","cancelable","OBSERVED","REQUESTED","setState","_invokeOnScrollMemoizer","undefined","_scrollbarSizeMeasured","recomputeCellSizesAndPositions","forceUpdate","componentDidMount","_props","_cellLayoutManager$ge2","componentDidUpdate","prevProps","prevState","_props2","_state","componentWillUnmount","_disablePointerEventsTimeoutId","clearTimeout","render","_props3","autoHeight","cellCount","className","horizontalOverscanSize","id","noContentRenderer","style","verticalOverscanSize","_state2","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","left","top","right","bottom","childrenToDisplay","cellRenderers","x","y","collectionStyle","boxSizing","direction","position","WebkitOverflowScrolling","willChange","horizontalScrollBarSize","overflowX","verticalScrollBarSize","overflowY","createElement","onScroll","role","tabIndex","maxHeight","maxWidth","overflow","pointerEvents","_this2","setTimeout","IS_SCROLLING_TIMEOUT","_ref2","_this3","_ref3","_props4","clientHeight","clientWidth","scrollHeight","scrollWidth","_ref4","newState","getDerivedStateFromProps","nextProps","PureComponent","defaultProps","propTypes","string","bool","number","isRequired","object","func","oneOf","polyfill"]
}
