{"version":3,"sources":["oc/web/components/ui/menu.cljs"],"mappings":"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","names":["var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","oc.web.components.ui.menu/menu-close","p__45853","vec__45854","cljs.core.nth","seq45852","self__4724__auto__","cljs.core/seq","s","oc.web.actions.nav-sidebar/menu-close","oc.web.components.ui.menu/logout-click","e","oc.web.components.ui.menu.menu_close","oc.web.actions.jwt.logout","oc.web.components.ui.menu/profile-edit-click","oc.web.actions.nav-sidebar/show-user-settings","oc.web.components.ui.menu/my-profile","cur-user-id","oc.web.actions.nav_sidebar.nav_to_author_BANG_","oc.web.urls.contributions","oc.web.components.ui.menu/my-posts-click","oc.web.components.ui.menu/notifications-settings-click","oc.web.components.ui.menu/team-settings-click","oc.web.actions.nav-sidebar/show-org-settings","oc.web.components.ui.menu/manage-team-click","oc.web.components.ui.menu/invite-team-click","oc.web.components.ui.menu/integrations-click","oc.web.components.ui.menu/sign-in-sign-up-click","oc.web.actions.user/show-login","oc.web.components.ui.menu/whats-new-click","oc.web.lib.whats-new/show","oc.web.components.ui.menu/reminders-click","oc.web.actions.nav-sidebar/show-reminders","oc.web.components.ui.menu/payments-click","oc.web.components.ui.menu/detect-desktop-app","oc.shared.useragent/desktop-app?","oc.shared.useragent/mac?","oc.shared.useragent/windows?","oc.web.components.ui.menu/get-desktop-version","js/OCCarrotDesktop","oc.web.components.ui.menu/theme-settings-click","oc.web.actions.nav-sidebar/show-theme-settings","rum.core/build-defcs","map__45879","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","js/React.createElement","p1__45871#","sablono.util/join-classes","sablono.interpreter/interpret","attrs45891","cljs.core/map?","sablono.interpreter/attributes","sablono.normalize.merge_with_class","oc.web.components.ui.menu/menu","rum.core/reactive","org.martinklepsch.derivatives.drv","oc.web.mixins.ui/refresh-tooltips-mixin","oc.web.lib.responsive/is-mobile-size?","oc.web.lib.whats-new/check-whats-new-badge","_","panel-stack","org-data","board-data","current-org-slug","org.martinklepsch.derivatives/react","current-user-data","is-mobile?","show-reminders?","oc.web.local-settings/reminders-enabled?","oc.web.lib.utils.link_for","expanded-user-menu","cljs.core._EQ_","cljs.core/last","is-admin-or-author?","G__45888","fexpr__45887","expo-app-version","show-invite-people?","and__4115__auto__","desktop-app-data","app-version","oc.shared.useragent/mobile-app?","show-billing?","oc.web.local-settings/payments-enabled","oc.web.lib.utils/class-set","oc.web.lib.utils/event-inside?","rum.core/ref-node","oc.web.components.ui.user-avatar/user-avatar-image","oc.web.lib.utils/hide-class","oc.web.lib.jwt/get-key","oc.web.lib.jwt/jwt","cljs.core.partial","cljs.core/not","p1__45872#","or__4126__auto__","p1__45873#","p1__45874#","p1__45875#","p1__45876#","oc.shared.useragent/mobile?","oc.web.urls/what-s-new","oc.web.urls/contact-mail-to","oc.web.urls/logout","oc.shared.useragent/pseudo-native?"],"sourcesContent":["(ns oc.web.components.ui.menu\n  (:require [rum.core :as rum]\n            [org.martinklepsch.derivatives :as drv]\n            [dommy.core :as dommy :refer-macros (sel sel1)]\n            [oc.web.expo :as expo]\n            [oc.web.lib.jwt :as jwt]\n            [oc.web.urls :as oc-urls]\n            [oc.web.lib.chat :as chat]\n            [oc.web.dispatcher :as dis]\n            [oc.shared.useragent :as ua]\n            [oc.web.lib.utils :as utils]\n            [oc.web.mixins.ui :as mixins]\n            [oc.web.local-settings :as ls]\n            [oc.web.actions.jwt :as jwt-actions]\n            [oc.web.lib.whats-new :as whats-new]\n            [oc.web.actions.user :as user-actions]\n            [oc.web.lib.responsive :as responsive]\n            [oc.web.actions.nav-sidebar :as nav-actions]\n            [oc.web.components.ui.carrot-switch :refer (carrot-switch)]\n            [oc.web.components.ui.user-avatar :refer (user-avatar-image)]))\n\n(defn menu-close [& [s]]\n  (nav-actions/menu-close))\n\n(defn logout-click [s e]\n  (.preventDefault e)\n  (menu-close s)\n  (jwt-actions/logout))\n\n(defn profile-edit-click [s e]\n  (.preventDefault e)\n  ; (nav-actions/nav-to-author! e user-id (oc-urls/contributions user-id))\n  (nav-actions/show-user-settings :profile))\n\n(defn my-profile [s cur-user-id e]\n  (.preventDefault e)\n  (nav-actions/nav-to-author! e cur-user-id (oc-urls/contributions cur-user-id)))\n\n(defn my-posts-click [s cur-user-id e]\n  (.preventDefault e)\n  (menu-close s)\n  (nav-actions/nav-to-author! e cur-user-id (oc-urls/contributions cur-user-id)))\n\n(defn notifications-settings-click [s e]\n  (.preventDefault e)\n  (nav-actions/show-user-settings :notifications))\n\n(defn team-settings-click [s e]\n  (.preventDefault e)\n  (nav-actions/show-org-settings :org))\n\n(defn manage-team-click [s e]\n  (.preventDefault e)\n  (nav-actions/show-org-settings :team))\n\n(defn invite-team-click [s e]\n  (.preventDefault e)\n  (nav-actions/show-org-settings :invite-picker))\n\n(defn integrations-click [s e]\n  (.preventDefault e)\n  (nav-actions/show-org-settings :integrations))\n\n(defn sign-in-sign-up-click [s e]\n  (menu-close s)\n  (.preventDefault e)\n  (user-actions/show-login :login-with-slack))\n\n(defn whats-new-click [s e]\n  (.preventDefault e)\n  (whats-new/show))\n\n(defn reminders-click [s e]\n  (.preventDefault e)\n  (nav-actions/show-reminders))\n\n(defn payments-click [e]\n  (.preventDefault e)\n  (nav-actions/show-org-settings :payments))\n\n(defn- detect-desktop-app\n  []\n  (when-not ua/desktop-app?\n    (cond\n      ua/mac? {:title \"Download Mac app\"\n               :href \"https://github.com/open-company/open-company-web/releases/latest/download/Carrot.dmg\"}\n      ua/windows? {:title \"Download Windows app\"\n                   :href \"https://github.com/open-company/open-company-web/releases/latest/download/Carrot.exe\"}\n      :default nil)))\n\n(defn- get-desktop-version\n  []\n  (if (.-getElectronAppVersion js/OCCarrotDesktop)\n    (str \"Version \" (.getElectronAppVersion js/OCCarrotDesktop))\n    \"\"))\n\n(defn- theme-settings-click [s e]\n  (.preventDefault e)\n  (nav-actions/show-theme-settings))\n\n(rum/defcs menu < rum/reactive\n                  (drv/drv :navbar-data)\n                  (drv/drv :current-user-data)\n                  (drv/drv :expo-app-version)\n  mixins/refresh-tooltips-mixin\n  {:did-mount (fn [s]\n   (when (responsive/is-mobile-size?)\n     (whats-new/check-whats-new-badge))\n   s)\n   :did-remount (fn [_ s]\n   (when (responsive/is-mobile-size?)\n     (whats-new/check-whats-new-badge))\n    s)}\n  [s]\n  (let [{:keys [panel-stack org-data board-data current-org-slug]} (drv/react s :navbar-data)\n        current-user-data (drv/react s :current-user-data)\n        is-mobile? (responsive/is-mobile-size?)\n        show-reminders? (when ls/reminders-enabled?\n                          (utils/link-for (:links org-data) \"reminders\"))\n        expanded-user-menu (= (last panel-stack) :menu)\n        is-admin-or-author? (#{:admin :author} (:role current-user-data))\n        expo-app-version (drv/react s :expo-app-version)\n        show-invite-people? (and current-org-slug\n                                 is-admin-or-author?)\n        desktop-app-data (detect-desktop-app)\n        app-version (cond\n                      ua/mobile-app? (str \"Version \" expo-app-version)\n                      ua/desktop-app? (get-desktop-version)\n                      :else \"\")\n        show-billing? (and ls/payments-enabled\n                           (= (:role current-user-data) :admin)\n                           current-org-slug)]\n    [:div.menu\n      {:class (utils/class-set {:expanded-user-menu expanded-user-menu})\n       :on-click #(when-not (utils/event-inside? % (rum/ref-node s :menu-container))\n                    (menu-close s))}\n      [:button.mlb-reset.modal-close-bt\n        {:on-click #(menu-close s)}]\n      [:div.menu-container\n        {:ref :menu-container}\n        [:div.menu-header.group\n          [:button.mlb-reset.mobile-close-bt\n            {:on-click #(menu-close s)}]\n          (when is-mobile?\n            (user-avatar-image current-user-data))\n          [:div.user-name\n            {:class utils/hide-class}\n            (str (jwt/get-key :first-name) \" \" (jwt/get-key :last-name))]\n          (when-not is-mobile?\n            (user-avatar-image current-user-data))]\n        ;; Profile\n        (when (and (jwt/jwt)\n                   current-user-data)\n          [:a\n            {:href \"#\"\n             :on-click (partial profile-edit-click s)}\n            [:div.oc-menu-item.personal-profile\n              \"My profile\"]])\n        ;; Show user's posts link\n        ; (when (and (jwt/jwt)\n        ;            current-user-data)\n        ;   [:a\n        ;     {:href (oc-urls/contributions (:user-id current-user-data))\n        ;      :on-click (partial my-posts-click s (:user-id current-user-data))}\n        ;     [:div.oc-menu-item.my-posts.group\n        ;       [:span.oc-menu-item-label\n        ;         (if (pos? (:contributions-count org-data))\n        ;           \"My updates\"\n        ;           \"My profile\")]\n        ;       (when (pos? (:contributions-count org-data))\n        ;         [:span.count\n        ;           (:contributions-count org-data)])]])\n        ;; Notifications\n        (when (and (jwt/jwt)\n                   (not is-mobile?))\n          [:a\n            {:href \"#\"\n             :on-click (partial notifications-settings-click s)}\n            [:div.oc-menu-item.notifications-settings\n              \"Notifications\"]])\n        ;; Theme switcher separator\n        (when (jwt/jwt)\n          [:div.oc-menu-separator])\n        ;; Theme switcher\n        [:a\n          {:href \"#\"\n           :on-click (partial theme-settings-click s)}\n          \"Theme\"]\n        ;; Reminders separator\n        (when (and show-reminders?\n                   (not is-mobile?))\n          [:div.oc-menu-separator])\n        ;; Reminders\n        (when (and show-reminders?\n                   (not is-mobile?))\n          [:a\n            {:href \"#\"\n             :on-click #(reminders-click s %)}\n            [:div.oc-menu-item.reminders\n              \"Recurring updates\"]])\n        ;; Settings separator\n        (when (and (not is-mobile?)\n                   (or current-org-slug\n                       show-invite-people?\n                       show-billing?))\n          [:div.oc-menu-separator])\n        ;; Admin settings\n        (when (and (not is-mobile?)\n                   (= (:role current-user-data) :admin)\n                   current-org-slug)\n          [:a\n            {:href \"#\"\n             :on-click #(team-settings-click s %)}\n            [:div.oc-menu-item.digest-settings\n              \"Admin settings\"]])\n        ;; Invite\n        (when (and (not is-mobile?)\n                   show-invite-people?)\n          [:a\n            {:href \"#\"\n             :on-click #(invite-team-click s %)}\n            [:div.oc-menu-item.invite-team\n              \"Invite people\"]])\n        ;; Manage team\n        (when (and (not is-mobile?)\n                   current-org-slug)\n          [:a\n            {:href \"#\"\n             :on-click #(manage-team-click s %)}\n            [:div.oc-menu-item.manage-team\n              (if (= (:role current-user-data) :admin)\n                \"Manage team\"\n                \"View team\")]])\n        ;; Integrations\n        (when (and (not is-mobile?)\n                   current-org-slug\n                   (= (:role current-user-data) :admin))\n          [:a\n            {:href \"#\"\n             :on-click #(integrations-click s %)}\n            [:div.oc-menu-item.team-integrations\n              \"Integrations\"]])\n        ;; Billing\n        (when (and (not is-mobile?)\n                   show-billing?)\n          [:a.payments\n            {:href \"#\"\n             :on-click payments-click}\n            [:div.oc-menu-item\n              \"Billing\"]])\n        ;; What's new & Support separator\n        [:div.oc-menu-separator]\n        ;; What's new\n        [:a.whats-new-link\n          (if ua/mobile?\n            {:href oc-urls/what-s-new\n             :target \"_blank\"}\n            {:on-click (partial whats-new-click s)})\n          [:div.oc-menu-item.whats-new\n            \"What\u2019s new\"]]\n        ;; Support\n        [:a\n          {:class \"intercom-chat-link\"\n           :href oc-urls/contact-mail-to}\n          [:div.oc-menu-item.support\n            \"Get support\"]]\n        ;; Mobile billing\n        (when (and is-mobile?\n                   show-billing?)\n          [:a.payments\n            {:href \"#\"\n             :on-click payments-click}\n            [:div.oc-menu-item\n              \"Billing\"]])\n        ;; Desktop app\n        (when desktop-app-data\n          [:a\n            {:href (:href desktop-app-data)\n             :target \"_blank\"}\n            [:div.oc-menu-item.native-app\n              (:title desktop-app-data)\n              [:span.beta \"BETA\"]]])\n        ;; Logout separator\n        [:div.oc-menu-separator]\n        ;; Logout\n        (if (jwt/jwt)\n          [:a.sign-out\n            {:href oc-urls/logout :on-click (partial logout-click s)}\n            [:div.oc-menu-item.logout\n              \"Sign out\"]]\n          [:a {:href \"\" :on-click (partial sign-in-sign-up-click s)}\n            [:div.oc-menu-item\n              \"Sign in / Sign up\"]])\n        ;; Version separator\n        (when ua/pseudo-native?\n          [:div.oc-menu-separator])\n        ;; Version\n        (when ua/pseudo-native?\n          [:div.oc-menu-item.app-version\n             app-version])]]))\n"]}