{
"version":3,
"file":"module$node_modules$core_js_pure$internals$to_length.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAe,oDAAf,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACjH,IAAIC,UAAYH,OAAA,CAAQ,uDAAR,CAAhB,CAEII,IAAMC,IAAND,CAAWA,GAIfH,OAAA,CAAOC,OAAP,CAAiBI,QAAS,CAACC,QAAD,CAAW,CACnC,MAAkB,EAAX,CAAAA,QAAA,CAAeH,GAAA,CAAID,SAAA,CAAUI,QAAV,CAAJ,CAAyB,gBAAzB,CAAf,CAA4D,CADhC,CAP4E;",
"sources":["node_modules/core-js-pure/internals/to-length.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$core_js_pure$internals$to_length\"] = function(global,require,module,exports) {\nvar toInteger = require('../internals/to-integer');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.github.io/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","toInteger","min","Math","module.exports","argument"]
}
