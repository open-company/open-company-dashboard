shadow$provide.module$node_modules$react_virtualized$dist$commonjs$vendor$intervalTree=function(global,require,module,exports){function IntervalTreeNode(mid,left,right,leftPoints,rightPoints){this.mid=mid;this.left=left;this.right=right;this.leftPoints=leftPoints;this.rightPoints=rightPoints;this.count=(left?left.count:0)+(right?right.count:0)+leftPoints.length}function copy(a,b){a.mid=b.mid;a.left=b.left;a.right=b.right;a.leftPoints=b.leftPoints;a.rightPoints=b.rightPoints;a.count=b.count}function rebuild(node,
intervals){intervals=createIntervalTree(intervals);node.mid=intervals.mid;node.left=intervals.left;node.right=intervals.right;node.leftPoints=intervals.leftPoints;node.rightPoints=intervals.rightPoints;node.count=intervals.count}function rebuildWithoutInterval(node,interval){var intervals=node.intervals([]);interval=intervals.indexOf(interval);if(0>interval)return 0;intervals.splice(interval,1);rebuild(node,intervals);return 1}function reportLeftRange(arr,hi,cb){for(var i=0;i<arr.length&&arr[i][0]<=
hi;++i){var r=cb(arr[i]);if(r)return r}}function reportRightRange(arr,lo,cb){for(var i=arr.length-1;0<=i&&arr[i][1]>=lo;--i){var r=cb(arr[i]);if(r)return r}}function reportRange(arr,cb){for(var i=0;i<arr.length;++i){var r=cb(arr[i]);if(r)return r}}function compareNumbers(a,b){return a-b}function compareBegin(a,b){var d=a[0]-b[0];return d?d:a[1]-b[1]}function compareEnd(a,b){var d=a[1]-b[1];return d?d:a[0]-b[0]}function createIntervalTree(intervals){if(0===intervals.length)return null;for(var pts=
[],i=0;i<intervals.length;++i)pts.push(intervals[i][0],intervals[i][1]);pts.sort(compareNumbers);pts=pts[pts.length>>1];var leftIntervals=[],rightIntervals=[],centerIntervals=[];for(i=0;i<intervals.length;++i){var s=intervals[i];s[1]<pts?leftIntervals.push(s):pts<s[0]?rightIntervals.push(s):centerIntervals.push(s)}intervals=centerIntervals.slice();centerIntervals.sort(compareBegin);intervals.sort(compareEnd);return new IntervalTreeNode(pts,createIntervalTree(leftIntervals),createIntervalTree(rightIntervals),
centerIntervals,intervals)}function IntervalTree(root){this.root=root}Object.defineProperty(exports,"__esModule",{value:!0});exports.default=function(intervals){return intervals&&0!==intervals.length?new IntervalTree(createIntervalTree(intervals)):new IntervalTree(null)};var _binarySearchBounds2=(global=require("module$node_modules$react_virtualized$dist$commonjs$vendor$binarySearchBounds"))&&global.__esModule?global:{default:global};global=IntervalTreeNode.prototype;global.intervals=function(result){result.push.apply(result,
this.leftPoints);this.left&&this.left.intervals(result);this.right&&this.right.intervals(result);return result};global.insert=function(interval){var weight=this.count-this.leftPoints.length;this.count+=1;if(interval[1]<this.mid)this.left?4*(this.left.count+1)>3*(weight+1)?(weight=this.intervals([]),weight.push(interval),rebuild(this,weight)):this.left.insert(interval):this.left=createIntervalTree([interval]);else if(interval[0]>this.mid)this.right?4*(this.right.count+1)>3*(weight+1)?(weight=this.intervals([]),
weight.push(interval),rebuild(this,weight)):this.right.insert(interval):this.right=createIntervalTree([interval]);else{weight=_binarySearchBounds2.default.ge(this.leftPoints,interval,compareBegin);var r=_binarySearchBounds2.default.ge(this.rightPoints,interval,compareEnd);this.leftPoints.splice(weight,0,interval);this.rightPoints.splice(r,0,interval)}};global.remove=function(interval){var weight=this.count-this.leftPoints;if(interval[1]<this.mid){if(!this.left)return 0;if(4*(this.right?this.right.count:
0)>3*(weight-1))return rebuildWithoutInterval(this,interval);weight=this.left.remove(interval);if(2===weight)return this.left=null,--this.count,1;1===weight&&--this.count;return weight}if(interval[0]>this.mid){if(!this.right)return 0;if(4*(this.left?this.left.count:0)>3*(weight-1))return rebuildWithoutInterval(this,interval);weight=this.right.remove(interval);if(2===weight)return this.right=null,--this.count,1;1===weight&&--this.count;return weight}if(1===this.count)return this.leftPoints[0]===interval?
2:0;if(1===this.leftPoints.length&&this.leftPoints[0]===interval){if(this.left&&this.right){interval=this;for(var n=this.left;n.right;)interval=n,n=n.right;if(interval===this)n.right=this.right;else{var l=this.left;weight=this.right;interval.count-=n.count;interval.right=n.left;n.left=l;n.right=weight}copy(this,n);this.count=(this.left?this.left.count:0)+(this.right?this.right.count:0)+this.leftPoints.length}else this.left?copy(this,this.left):copy(this,this.right);return 1}for(l=_binarySearchBounds2.default.ge(this.leftPoints,
interval,compareBegin);l<this.leftPoints.length&&this.leftPoints[l][0]===interval[0];++l)if(this.leftPoints[l]===interval)for(--this.count,this.leftPoints.splice(l,1),weight=_binarySearchBounds2.default.ge(this.rightPoints,interval,compareEnd);weight<this.rightPoints.length&&this.rightPoints[weight][1]===interval[1];++weight)if(this.rightPoints[weight]===interval)return this.rightPoints.splice(weight,1),1;return 0};global.queryPoint=function(x,cb){if(x<this.mid){if(this.left){var r=this.left.queryPoint(x,
cb);if(r)return r}return reportLeftRange(this.leftPoints,x,cb)}return x>this.mid?this.right&&(r=this.right.queryPoint(x,cb))?r:reportRightRange(this.rightPoints,x,cb):reportRange(this.leftPoints,cb)};global.queryInterval=function(lo,hi,cb){if(lo<this.mid&&this.left){var r=this.left.queryInterval(lo,hi,cb);if(r)return r}return hi>this.mid&&this.right&&(r=this.right.queryInterval(lo,hi,cb))?r:hi<this.mid?reportLeftRange(this.leftPoints,hi,cb):lo>this.mid?reportRightRange(this.rightPoints,lo,cb):reportRange(this.leftPoints,
cb)};global=IntervalTree.prototype;global.insert=function(interval){this.root?this.root.insert(interval):this.root=new IntervalTreeNode(interval[0],null,null,[interval],[interval])};global.remove=function(interval){return this.root?(interval=this.root.remove(interval),2===interval&&(this.root=null),0!==interval):!1};global.queryPoint=function(p,cb){if(this.root)return this.root.queryPoint(p,cb)};global.queryInterval=function(lo,hi,cb){if(lo<=hi&&this.root)return this.root.queryInterval(lo,hi,cb)};
Object.defineProperty(global,"count",{get:function(){return this.root?this.root.count:0}});Object.defineProperty(global,"intervals",{get:function(){return this.root?this.root.intervals([]):[]}})}
//# sourceMappingURL=module$node_modules$react_virtualized$dist$commonjs$vendor$intervalTree.js.map
