{
"version":3,
"file":"module$node_modules$core_js_pure$internals$check_correctness_of_iteration.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,yEAAf,CAA8F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGtI,IAAIC,SAFkBH,OAAAI,CAAQ,8DAARA,CAEP,CAAgB,UAAhB,CAAf,CACIC,aAAe,CAAA,CAEnB,IAAI,CACF,IAAIC,OAAS,CACTC,OAAAA,CAAqB,CACvBC,KAAMA,QAAS,EAAG,CAChB,MAAO,CAAEC,KAAM,CAAC,CAACH,MAAA,EAAV,CADS,CADK,CAIvB,SAAUI,QAAS,EAAG,CACpBL,YAAA,CAAe,CAAA,CADK,CAJC,CAQzBE,OAAA,CAAmBJ,QAAnB,CAAA,CAA+B,QAAS,EAAG,CACzC,MAAO,KADkC,CAI3CQ,MAAA,CAAMC,IAAN,CAAWL,MAAX,CAA+B,QAAS,EAAG,CAAE,KAAM,EAAN,CAAF,CAA3C,CAdE,CAeF,MAAOM,KAAP,CAAc,EAEhBZ,MAAA,CAAOC,OAAP,CAAiBY,QAAS,CAACC,IAAD,CAAOC,YAAP,CAAqB,CAC7C,GAAI,CAACA,YAAL;AAAqB,CAACX,YAAtB,CAAoC,MAAO,CAAA,CAC3C,KAAIY,kBAAoB,CAAA,CACxB,IAAI,CACEC,YAQJ,CARa,EAQb,CAPAA,YAAA,CAAOf,QAAP,CAOA,CAPmB,QAAS,EAAG,CAC7B,MAAO,CACLK,KAAMA,QAAS,EAAG,CAChB,MAAO,CAAEC,KAAMQ,iBAANR,CAA0B,CAAA,CAA5B,CADS,CADb,CADsB,CAO/B,CAAAM,IAAA,CAAKG,YAAL,CATE,CAUF,MAAOL,OAAP,CAAc,EAChB,MAAOI,kBAdsC,CAvBuF;",
"sources":["node_modules/core-js-pure/internals/check-correctness-of-iteration.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$core_js_pure$internals$check_correctness_of_iteration\"] = function(global,require,module,exports) {\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var called = 0;\n  var iteratorWithReturn = {\n    next: function () {\n      return { done: !!called++ };\n    },\n    'return': function () {\n      SAFE_CLOSING = true;\n    }\n  };\n  iteratorWithReturn[ITERATOR] = function () {\n    return this;\n  };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(iteratorWithReturn, function () { throw 2; });\n} catch (error) { /* empty */ }\n\nmodule.exports = function (exec, SKIP_CLOSING) {\n  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;\n  var ITERATION_SUPPORT = false;\n  try {\n    var object = {};\n    object[ITERATOR] = function () {\n      return {\n        next: function () {\n          return { done: ITERATION_SUPPORT = true };\n        }\n      };\n    };\n    exec(object);\n  } catch (error) { /* empty */ }\n  return ITERATION_SUPPORT;\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","ITERATOR","wellKnownSymbol","SAFE_CLOSING","called","iteratorWithReturn","next","done","return","Array","from","error","module.exports","exec","SKIP_CLOSING","ITERATION_SUPPORT","object"]
}
