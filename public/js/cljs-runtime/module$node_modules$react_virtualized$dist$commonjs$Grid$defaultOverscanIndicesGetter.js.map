{
"version":3,
"file":"module$node_modules$react_virtualized$dist$commonjs$Grid$defaultOverscanIndicesGetter.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,qFAAf,CAA0G,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGlJC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAA,CAAQI,yBAAR,CAAoCJ,OAApC,CAA4CK,2BAA5C,CAA0EL,OAA1E,CAAkFM,wBAAlF,CAA6GN,OAA7G,CAAqHO,yBAArH,CAAiJC,IAAAA,EACjJR,QAAA,CAAQS,OAAR,CAgBAC,QAAqC,CAACC,IAAD,CAAO,CAAA,IACtCC,UAAYD,IAAZC,CAAiBA,SADqB,CAEtCC,mBAAqBF,IAArBE,CAA0BA,kBAFY,CAItCC,WAAaH,IAAbG,CAAkBA,UAJoB,CAKtCC,UAAYJ,IAAZI,CAAiBA,SAErB,OAJsBJ,KAItB,CAJ2BK,eAI3B;AAAwBV,wBAAxB,CACS,CACLW,mBAAoBC,IAAA,CAAKC,GAAL,CAAS,CAAT,CAAYL,UAAZ,CADf,CAELM,kBAAmBF,IAAA,CAAKG,GAAL,CAAST,SAAT,CAAqB,CAArB,CAAwBG,SAAxB,CAAoCF,kBAApC,CAFd,CADT,CAMS,CACLI,mBAAoBC,IAAA,CAAKC,GAAL,CAAS,CAAT,CAAYL,UAAZ,CAAyBD,kBAAzB,CADf,CAELO,kBAAmBF,IAAA,CAAKG,GAAL,CAAST,SAAT,CAAqB,CAArB,CAAwBG,SAAxB,CAFd,CAbiC,CAd/BjB,QAAA,CAAQ,gEAAR,CAEmBE,QAAA,CAAQO,yBAAR,CAAoC,EAEpE,KAAID,yBAA2BN,OAA3BM,CAAmCA,wBAAnCA,CAA8D,CAEhCN,QAAA,CAAQK,2BAAR,CAAsC,YACxCL,QAAA,CAAQI,yBAAR;AAAoC,UAhB8E;",
"sources":["node_modules/react-virtualized/dist/commonjs/Grid/defaultOverscanIndicesGetter.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_virtualized$dist$commonjs$Grid$defaultOverscanIndicesGetter\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SCROLL_DIRECTION_VERTICAL = exports.SCROLL_DIRECTION_HORIZONTAL = exports.SCROLL_DIRECTION_FORWARD = exports.SCROLL_DIRECTION_BACKWARD = undefined;\nexports.default = defaultOverscanIndicesGetter;\n\nvar _types = require('./types');\n\nvar SCROLL_DIRECTION_BACKWARD = exports.SCROLL_DIRECTION_BACKWARD = -1;\n\nvar SCROLL_DIRECTION_FORWARD = exports.SCROLL_DIRECTION_FORWARD = 1;\n\nvar SCROLL_DIRECTION_HORIZONTAL = exports.SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nvar SCROLL_DIRECTION_VERTICAL = exports.SCROLL_DIRECTION_VERTICAL = 'vertical';\n\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nfunction defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","SCROLL_DIRECTION_VERTICAL","SCROLL_DIRECTION_HORIZONTAL","SCROLL_DIRECTION_FORWARD","SCROLL_DIRECTION_BACKWARD","undefined","default","defaultOverscanIndicesGetter","_ref","cellCount","overscanCellsCount","startIndex","stopIndex","scrollDirection","overscanStartIndex","Math","max","overscanStopIndex","min"]
}
