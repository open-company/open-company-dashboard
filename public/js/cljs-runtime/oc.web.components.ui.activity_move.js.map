{"version":3,"sources":["oc/web/components/ui/activity_move.cljs"],"mappings":"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","names":["oc.web.components.ui.activity-move/move-post","s","cljs.core/deref","opts","cljs.core/first","activity-data","new-board","on-change","dismiss-cb","oc.web.actions.activity/activity-move","cljs.core/reset!","cljs.core/fn?","rum.core/build-defcs","p__46012","map__46013","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","js/React.createElement","p1__46009#","p1__46010#","sablono.util/join-classes","sablono.interpreter/interpret","p1__46011#","oc.web.components.ui.activity-move/activity-move","rum.core.local","oc.web.mixins.ui.on_click_out","e","boards-list","sorted-boards-list","cljs.core.sort_by","oc.web.lib.utils/event-stop","cljs.core/not","oc.web.lib.utils/class-set","or__4126__auto__","iter__4529__auto__","s__46019","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__46021","cljs.core/chunk-buffer","i__46020","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__46018","cljs.core/chunk-rest","cljs.core/cons","cljs.core/rest","board","cljs.core._EQ_","cljs.core.not_EQ_","cljs.core/chunk-first"],"sourcesContent":["(ns oc.web.components.ui.activity-move\n  (:require [rum.core :as rum]\n            [oc.web.dispatcher :as dis]\n            [oc.web.lib.utils :as utils]\n            [oc.web.actions.activity :as activity-actions]\n            [oc.web.mixins.ui :refer (on-click-out)]))\n\n(defn move-post [s]\n  ;; move the post\n  (let [opts (first (:rum/args s))\n        activity-data (:activity-data opts)\n        new-board @(::selected-board s)\n        on-change (:on-change opts)\n        dismiss-cb (:dismiss-cb opts)]\n    (activity-actions/activity-move activity-data new-board)\n    (reset! (::show-boards-list s) false)\n    (reset! (::selected-board s) nil)\n    (when (fn? on-change)\n      (on-change))\n    (when (fn? dismiss-cb)\n      (dismiss-cb))))\n\n(rum/defcs activity-move < (rum/local nil ::show-boards-list)\n                           (rum/local nil ::selected-board)\n                           (on-click-out (fn [s e]\n                            (let [opts (first (:rum/args s))\n                                  dismiss-cb (:dismiss-cb opts)]\n                              (when (fn? dismiss-cb)\n                                (dismiss-cb)))))\n  [s {:keys [boards-list activity-data dismiss-cb]}]\n  (let [sorted-boards-list (sort-by :name boards-list)]\n    [:div.activity-move\n      {:on-click #(do\n                    (utils/event-stop %)\n                    (when @(::show-boards-list s)\n                      (reset! (::show-boards-list s) false)))}\n      [:div.move-post-inner\n        [:div.move-post-title\n          \"Move\"]\n        [:div.select-new-board.oc-input\n          {:on-click #(do (utils/event-stop %) (reset! (::show-boards-list s) (not @(::show-boards-list s))))\n           :class (utils/class-set {:placeholder (nil? @(::selected-board s))\n                                    :active @(::show-boards-list s)})}\n          (or (:name @(::selected-board s)) \"Move to...\")]\n        (when @(::show-boards-list s)\n          [:div.boards-list\n            (for [board sorted-boards-list]\n              [:div.board-item\n                {:key (str \"activity-move-\" (:uuid activity-data) \"-board-list-\" (:slug board))\n                 :class (when (= (:board-slug activity-data) (:slug board)) \"disabled\")\n                 :on-click #(when (not= (:board-slug activity-data) (:slug board))\n                              (reset! (::selected-board s) board)\n                              (reset! (::show-boards-list s) false))}\n                (:name board)])])\n        [:button.mlb-reset.mlb-default\n          {:on-click #(do (utils/event-stop %) (move-post s))\n           :disabled (not @(::selected-board s))}\n          \"Move post\"]]]))"]}