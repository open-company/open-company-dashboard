{"version":3,"sources":["oc/web/lib/user_cache.cljs"],"mappings":";;AAMA,AAAA,AAAOA,AAASC;AAAhB,AACE,AAAK,AAAAC,AAAI,AAACC;AAAL,AAAA,AAAAD;AAAAA;;AAAA;;AAAL,AAAwCD;;AAE1C,AAAA;;;AAAA,AAAAG,AAAMM;AAAN,AAAA,AAAAL,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAK,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAF;;;AAAA,AAAA,AAAA,AAAA,AAAAG,AAAMD,AAEHT,AAASmB;AAFZ,AAAA,AAAAR,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAE0BS;AAF1B,AAGE,AAAMC,AAAU,AAACtB,AAAQC;AAAzB,AACE,AAAAsB,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAA,AAAA,AAA6BH;AAA7B,AAAA,AAAA;;AACA,AAAUI,AACTJ,AACA,AAACK,AAAQ,AAACC,AAAeR,AACzB,AAAKS;AAAL,AACE,AAAAN,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAA,AAAA,AAAoCI;AAApC,AAAA,AAAA;;AACA,AAAM,AAACC,AAAIT;AAAX,AACE,AAACA,AAAAA,AAAAA,AAAaQ,AAAAA;;AADhB;;;;;AAVP,AAAA,AAAA,AAAMnB;;AAAN;AAAA,AAAA,AAAA,AAAAI,AAAMJ;AAAN,AAAA,AAAAK,AAAA,AAAAC,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAAI,AAAA,AAAAF,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAA,AAAA,AAAAK,AAAA;AAAA,AAAA,AAAAA,AAAAJ,AAAAG,AAAAJ;;;AAAA,AAaA;;;AAAA,AAAMiB,AAEH9B;AAFH,AAGE,AAAMqB,AAAU,AAACtB,AAAQC;AAAzB,AACE,AAAAsB,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAA,AAAA,AAAgCH;AAAhC,AAAA,AAAA;;AACA,AAAaI,AAAYJ;;AAE7B;;;AAAA,AAAMU,AAEH/B,AAASgC;AAFZ,AAGE,AAAMX,AAAU,AAACtB,AAAQC;AAAzB,AACE,AAAAsB,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAA,AAAA,AAA6BH;AAA7B,AAAA,AAAA;;AACA,AAAUI,AACTJ,AACA,AAAKO,AAAIK;AAAT,AACE,AAAAX,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAA,AAAA,AAAkCH,AAAUY,AAAML;AAAlD,AAAA,AAAA;;AACA,AAAM,AAACC,AAAIG;AAAX,AACE,AAAME,AAAU,AAAID,AACF,AAACE,AAAgB,AAACC,AAAQH,AAC1BA;AAFlB,AAGE,AAACD,AAAAA,AAAAA,AAAYE,AAAAA,AAAUN,AAAAA;;AAJ3B","names":["oc.web.lib.user-cache/get-key","data-key","or__4126__auto__","oc.web.lib.jwt/user-id","var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","oc.web.lib.user-cache/set-item","p__41843","vec__41844","cljs.core.nth","seq41840","G__41841","cljs.core/first","cljs.core/next","G__41842","self__4723__auto__","data-value","completed-cb","fixed-key","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","js/module$node_modules$localforage$dist$localforage","cljs.core/clj->js","clojure.walk/stringify-keys","err","cljs.core/fn?","oc.web.lib.user-cache/remove-item","oc.web.lib.user-cache/get-item","get-item-cb","value","clj-value","clojure.walk/keywordize-keys","cljs.core.js__GT_clj"],"sourcesContent":["(ns oc.web.lib.user-cache\n  (:require [taoensso.timbre :as timbre]\n            [oc.web.lib.jwt :as jwt]\n            [clojure.walk :refer (keywordize-keys stringify-keys)]\n            [\"localforage\" :as localforage]))\n\n(defn- get-key [data-key]\n  (str (or (jwt/user-id) \"anonymous\") \"-\" data-key))\n\n(defn set-item\n  \"Add an item to the localforage for later use.\"\n  [data-key data-value & [completed-cb]]\n  (let [fixed-key (get-key data-key)]\n    (timbre/debug \"set-item for\" fixed-key)\n    (.setItem localforage\n     fixed-key\n     (clj->js (stringify-keys data-value))\n     (fn [err]\n       (timbre/debug \"   - set-item error\" err)\n       (when (fn? completed-cb)\n         (completed-cb err))))))\n\n(defn remove-item\n  \"Remove an item from the localforage.\"\n  [data-key]\n  (let [fixed-key (get-key data-key)]\n    (timbre/debug \"remove-item for\" fixed-key)\n    (.removeItem localforage fixed-key)))\n\n(defn get-item\n  \"Get an item from the localforage and return it.\"\n  [data-key get-item-cb]\n  (let [fixed-key (get-key data-key)]\n    (timbre/debug \"get-item for\" fixed-key)\n    (.getItem localforage\n     fixed-key\n     (fn [err value]\n       (timbre/debug \"   - get-item for\" fixed-key value err)\n       (when (fn? get-item-cb)\n         (let [clj-value (if value\n                           (keywordize-keys (js->clj value))\n                           value)]\n           (get-item-cb clj-value err)))))))"]}